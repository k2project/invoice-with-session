{"ast":null,"code":"import axios from 'axios';\nimport { dialogBox } from '../../alerts/alertsFuns';\nexport const alertUnsavedChanges = async (state, getState, setStateTab, http, //api call\nurl, //redirection back to the form\nhistory, setAlert) => {\n  try {\n    const stateDB = await axios.get(http);\n\n    if (JSON.stringify(state.details) !== JSON.stringify(stateDB.data.details)) {\n      const msg = `You have some unsaved changes. What would you like to do?`;\n      const cancelBtnText = 'Discharge updates';\n      const confirmBtnText = 'Return to the form!';\n\n      const cancelCb = () => {\n        getState();\n        window.location.reload();\n      };\n\n      const confirmCb = () => {\n        history.push(url);\n        setStateTab('form');\n      };\n\n      dialogBox({\n        msg,\n        cancelBtnText,\n        confirmBtnText,\n        cancelCb,\n        confirmCb\n      });\n    }\n  } catch (err) {\n    setAlert(`We think you may have some unsaved changes. Unfortunately due to server error we weren't able to proceed them.`, 'danger', null, false, 15000);\n  }\n}; //hamdlesonly the chnages to the component state not to app state\n\nexport const saveChangesOnLeave = async (updatedState, getState, http, //api call\nsetAlert) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const stateDB = await axios.get(http);\n\n    if (JSON.stringify(updatedState.details) !== JSON.stringify(stateDB.data.details)) {\n      await axios.post(http, JSON.stringify(updatedState.details), config);\n      getState();\n    }\n  } catch (err) {// setAlert(\n    //     `We think you may have some unsaved changes. Unfortunately due to server error we weren't able to proceed them.`,\n    //     'danger',\n    //     null,\n    //     false,\n    //     15000\n    // );\n    // console.log(err);\n  }\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/utils/handleUnsavedChanges.js"],"names":["axios","dialogBox","alertUnsavedChanges","state","getState","setStateTab","http","url","history","setAlert","stateDB","get","JSON","stringify","details","data","msg","cancelBtnText","confirmBtnText","cancelCb","window","location","reload","confirmCb","push","err","saveChangesOnLeave","updatedState","config","headers","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,OAC/BC,KAD+B,EAE/BC,QAF+B,EAG/BC,WAH+B,EAI/BC,IAJ+B,EAIzB;AACNC,GAL+B,EAK1B;AACLC,OAN+B,EAO/BC,QAP+B,KAQ9B;AACD,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUL,IAAV,CAAtB;;AAEA,QACIM,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACW,OAArB,MACAF,IAAI,CAACC,SAAL,CAAeH,OAAO,CAACK,IAAR,CAAaD,OAA5B,CAFJ,EAGE;AACE,YAAME,GAAG,GAAI,2DAAb;AACA,YAAMC,aAAa,GAAG,mBAAtB;AACA,YAAMC,cAAc,GAAG,qBAAvB;;AACA,YAAMC,QAAQ,GAAG,MAAM;AACnBf,QAAAA,QAAQ;AACRgB,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OAHD;;AAIA,YAAMC,SAAS,GAAG,MAAM;AACpBf,QAAAA,OAAO,CAACgB,IAAR,CAAajB,GAAb;AACAF,QAAAA,WAAW,CAAC,MAAD,CAAX;AACH,OAHD;;AAIAJ,MAAAA,SAAS,CAAC;AACNe,QAAAA,GADM;AAENC,QAAAA,aAFM;AAGNC,QAAAA,cAHM;AAINC,QAAAA,QAJM;AAKNI,QAAAA;AALM,OAAD,CAAT;AAOH;AACJ,GA1BD,CA0BE,OAAOE,GAAP,EAAY;AACVhB,IAAAA,QAAQ,CACH,gHADG,EAEJ,QAFI,EAGJ,IAHI,EAIJ,KAJI,EAKJ,KALI,CAAR;AAOH;AACJ,CA5CM,C,CA8CP;;AACA,OAAO,MAAMiB,kBAAkB,GAAG,OAC9BC,YAD8B,EAE9BvB,QAF8B,EAG9BE,IAH8B,EAGxB;AACNG,QAJ8B,KAK7B;AACD,MAAI;AACA,UAAMmB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,UAAMnB,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUL,IAAV,CAAtB;;AAEA,QACIM,IAAI,CAACC,SAAL,CAAec,YAAY,CAACb,OAA5B,MACAF,IAAI,CAACC,SAAL,CAAeH,OAAO,CAACK,IAAR,CAAaD,OAA5B,CAFJ,EAGE;AACE,YAAMd,KAAK,CAAC8B,IAAN,CACFxB,IADE,EAEFM,IAAI,CAACC,SAAL,CAAec,YAAY,CAACb,OAA5B,CAFE,EAGFc,MAHE,CAAN;AAKAxB,MAAAA,QAAQ;AACX;AACJ,GAnBD,CAmBE,OAAOqB,GAAP,EAAY,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ,CAnCM","sourcesContent":["import axios from 'axios';\nimport { dialogBox } from '../../alerts/alertsFuns';\n\nexport const alertUnsavedChanges = async (\n    state,\n    getState,\n    setStateTab,\n    http, //api call\n    url, //redirection back to the form\n    history,\n    setAlert\n) => {\n    try {\n        const stateDB = await axios.get(http);\n\n        if (\n            JSON.stringify(state.details) !==\n            JSON.stringify(stateDB.data.details)\n        ) {\n            const msg = `You have some unsaved changes. What would you like to do?`;\n            const cancelBtnText = 'Discharge updates';\n            const confirmBtnText = 'Return to the form!';\n            const cancelCb = () => {\n                getState();\n                window.location.reload();\n            };\n            const confirmCb = () => {\n                history.push(url);\n                setStateTab('form');\n            };\n            dialogBox({\n                msg,\n                cancelBtnText,\n                confirmBtnText,\n                cancelCb,\n                confirmCb,\n            });\n        }\n    } catch (err) {\n        setAlert(\n            `We think you may have some unsaved changes. Unfortunately due to server error we weren't able to proceed them.`,\n            'danger',\n            null,\n            false,\n            15000\n        );\n    }\n};\n\n//hamdlesonly the chnages to the component state not to app state\nexport const saveChangesOnLeave = async (\n    updatedState,\n    getState,\n    http, //api call\n    setAlert\n) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        const stateDB = await axios.get(http);\n\n        if (\n            JSON.stringify(updatedState.details) !==\n            JSON.stringify(stateDB.data.details)\n        ) {\n            await axios.post(\n                http,\n                JSON.stringify(updatedState.details),\n                config\n            );\n            getState();\n        }\n    } catch (err) {\n        // setAlert(\n        //     `We think you may have some unsaved changes. Unfortunately due to server error we weren't able to proceed them.`,\n        //     'danger',\n        //     null,\n        //     false,\n        //     15000\n        // );\n        // console.log(err);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}