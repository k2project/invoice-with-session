{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst isNode = require(\"./Node.js\").is;\n\nconst impl = utils.implSymbol;\n\nfunction ChildNode() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(ChildNode, \"prototype\", {\n  value: ChildNode.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nChildNode.prototype.before = function before() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  const args = [];\n\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'before' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n\n    args.push(curArg);\n  }\n\n  return this[impl].before(...args);\n};\n\nChildNode.prototype.after = function after() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  const args = [];\n\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'after' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n\n    args.push(curArg);\n  }\n\n  return this[impl].after(...args);\n};\n\nChildNode.prototype.replaceWith = function replaceWith() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  const args = [];\n\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'replaceWith' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n\n    args.push(curArg);\n  }\n\n  return this[impl].replaceWith(...args);\n};\n\nChildNode.prototype.remove = function remove() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].remove();\n};\n\nObject.defineProperty(ChildNode.prototype, Symbol.unscopables, {\n  value: {\n    before: true,\n    after: true,\n    replaceWith: true,\n    remove: true\n  },\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nObject.defineProperty(ChildNode.prototype, Symbol.toStringTag, {\n  value: \"ChildNode\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'ChildNode'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(ChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: ChildNode,\n  expose: {}\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/ChildNode-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/ChildNode.js"],"names":["conversions","require","utils","isNode","is","impl","implSymbol","ChildNode","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","before","module","exports","args","i","arguments","length","curArg","implForWrapper","context","push","after","replaceWith","remove","Symbol","unscopables","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","interface","expose"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst isNode = require(\"./Node.js\").is;\nconst impl = utils.implSymbol;\n\nfunction ChildNode() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(ChildNode, \"prototype\", {\n  value: ChildNode.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nChildNode.prototype.before = function before() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'before' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n    args.push(curArg);\n  }\n  return this[impl].before(...args);\n};\n\nChildNode.prototype.after = function after() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'after' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n    args.push(curArg);\n  }\n  return this[impl].after(...args);\n};\n\nChildNode.prototype.replaceWith = function replaceWith() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'replaceWith' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n    args.push(curArg);\n  }\n  return this[impl].replaceWith(...args);\n};\n\nChildNode.prototype.remove = function remove() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].remove();\n};\n\nObject.defineProperty(ChildNode.prototype, Symbol.unscopables, {\n  value: {\n    before: true,\n    after: true,\n    replaceWith: true,\n    remove: true\n  },\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nObject.defineProperty(ChildNode.prototype, Symbol.toStringTag, {\n  value: \"ChildNode\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'ChildNode'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(ChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: ChildNode,\n  expose: {}\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/ChildNode-impl.js\");\n"]},"metadata":{},"sourceType":"script"}