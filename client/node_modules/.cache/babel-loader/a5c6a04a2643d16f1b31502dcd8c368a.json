{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertHashChangeEventInit = require(\"./HashChangeEventInit.js\").convert;\n\nconst impl = utils.implSymbol;\n\nconst Event = require(\"./Event.js\");\n\nfunction HashChangeEvent(type) {\n  if (new.target === undefined) {\n    throw new TypeError(\"Failed to construct 'HashChangeEvent'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'HashChangeEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to construct 'HashChangeEvent': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = convertHashChangeEventInit(curArg, {\n      context: \"Failed to construct 'HashChangeEvent': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  iface.setup(this, args);\n}\n\nObject.setPrototypeOf(HashChangeEvent.prototype, Event.interface.prototype);\nObject.setPrototypeOf(HashChangeEvent, Event.interface);\nObject.defineProperty(HashChangeEvent, \"prototype\", {\n  value: HashChangeEvent.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(HashChangeEvent.prototype, \"oldURL\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"oldURL\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HashChangeEvent.prototype, \"newURL\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"newURL\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HashChangeEvent.prototype, Symbol.toStringTag, {\n  value: \"HashChangeEvent\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HashChangeEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HashChangeEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HashChangeEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    Event._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HashChangeEvent,\n  expose: {\n    Window: {\n      HashChangeEvent\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../events/HashChangeEvent-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/HashChangeEvent.js"],"names":["conversions","require","utils","convertHashChangeEventInit","convert","impl","implSymbol","Event","HashChangeEvent","type","new","target","undefined","TypeError","arguments","length","args","curArg","context","push","iface","setup","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","get","module","exports","is","Symbol","toStringTag","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","create","constructorArgs","privateData","createImpl","_internalSetup","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertHashChangeEventInit = require(\"./HashChangeEventInit.js\").convert;\nconst impl = utils.implSymbol;\nconst Event = require(\"./Event.js\");\n\nfunction HashChangeEvent(type) {\n  if (new.target === undefined) {\n    throw new TypeError(\n      \"Failed to construct 'HashChangeEvent'. Please use the 'new' operator; this constructor \" +\n        \"cannot be called as a function.\"\n    );\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to construct 'HashChangeEvent': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'HashChangeEvent': parameter 1\" });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = convertHashChangeEventInit(curArg, { context: \"Failed to construct 'HashChangeEvent': parameter 2\" });\n    args.push(curArg);\n  }\n\n  iface.setup(this, args);\n}\n\nObject.setPrototypeOf(HashChangeEvent.prototype, Event.interface.prototype);\nObject.setPrototypeOf(HashChangeEvent, Event.interface);\n\nObject.defineProperty(HashChangeEvent, \"prototype\", {\n  value: HashChangeEvent.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(HashChangeEvent.prototype, \"oldURL\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"oldURL\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HashChangeEvent.prototype, \"newURL\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"newURL\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HashChangeEvent.prototype, Symbol.toStringTag, {\n  value: \"HashChangeEvent\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HashChangeEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HashChangeEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HashChangeEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    Event._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HashChangeEvent,\n  expose: {\n    Window: { HashChangeEvent }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../events/HashChangeEvent-impl.js\");\n"]},"metadata":{},"sourceType":"script"}