{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyInvoices.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\nimport { updateCompanyArr } from '../../redux/actions/companies';\nimport { getInputValueByLabel } from '../../components/form/utils/customFormQueries';\nimport infoIcon from '../../imgs/icons/infoIcon.png';\nimport updateIcon from '../../imgs/icons/updateIcon.png';\nimport deleteIcon from '../../imgs/icons/deleteIcon.png';\nimport downloadIcon from '../../imgs/icons/downloadIcon.png';\nimport { date_DD_MM_YYYY } from '../../components/calendar/dates';\nexport const CompanyInvoices = ({\n  company,\n  setAlert,\n  updateCompanyArr\n}) => {\n  const {\n    invoices\n  } = company;\n  let companyName = getInputValueByLabel(company.details, 'Name');\n\n  const deleteInvocie = async id => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      await axios.put(`/api/companies/invoice/${company._id}`, JSON.stringify({\n        id\n      }), config);\n      let arr = company.invoices.filter(invoice => invoice._id !== id);\n      updateCompanyArr('invoices', arr, company._id);\n      setAlert('Invoice has been deleted successfully.', 'success', null, false);\n    } catch (err) {\n      setAlert(\"We are sorry, but couldn't delete the invoice.\", 'danger', null, false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"company-invoices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, `${companyName}'s Invoices .`), invoices.length === 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tile tile--info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: infoIcon,\n    alt: \"\",\n    className: \"icon--md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), \"Currently there are no invoices saved. Add a new one now.\"), invoices.length > 0 && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"invoices-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"caption\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Current invoices list.\")), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, \"Created at\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, \"Invoice number\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, \"Download Invoice\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, \"Update Invoice\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, \"Delete Invoice\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, invoices.map((invoice, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: invoice._id,\n    className: \"tile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"invoices-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, date_DD_MM_YYYY(invoice.created_at)), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, invoice.saved_as), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/dashboard/companies/${company._id}?tab=invoice&download=${invoice._id}`,\n    className: \"btn-icon\",\n    title: \"Download invoice\",\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: downloadIcon,\n    alt: \"Download Invoice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/dashboard/companies/${company._id}?tab=invoice&updating=${invoice._id}`,\n    className: \"btn-icon\",\n    title: \"Update invoice\",\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: updateIcon,\n    alt: \"Update Invoice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-icon\",\n    title: \"Delete invoice\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: e => {\n      deleteInvocie(invoice._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: deleteIcon,\n    alt: \"Delete Invoice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 41\n    }\n  }))))))));\n};\nCompanyInvoices.propTypes = {\n  company: PropTypes.object,\n  setAlert: PropTypes.func,\n  updateCompanyArr: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  company: state.companies.find(c => c._id === state.session.currentCompany)\n});\n\nconst mapDispatchToProps = {\n  setAlert,\n  updateCompanyArr\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyInvoices);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyInvoices.js"],"names":["React","Component","PropTypes","Link","axios","connect","setAlert","updateCompanyArr","getInputValueByLabel","infoIcon","updateIcon","deleteIcon","downloadIcon","date_DD_MM_YYYY","CompanyInvoices","company","invoices","companyName","details","deleteInvocie","id","config","headers","put","_id","JSON","stringify","arr","filter","invoice","err","length","map","index","created_at","saved_as","e","preventDefault","propTypes","object","func","mapStateToProps","state","companies","find","c","session","currentCompany","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\nimport { updateCompanyArr } from '../../redux/actions/companies';\nimport { getInputValueByLabel } from '../../components/form/utils/customFormQueries';\nimport infoIcon from '../../imgs/icons/infoIcon.png';\nimport updateIcon from '../../imgs/icons/updateIcon.png';\nimport deleteIcon from '../../imgs/icons/deleteIcon.png';\nimport downloadIcon from '../../imgs/icons/downloadIcon.png';\nimport { date_DD_MM_YYYY } from '../../components/calendar/dates';\n\nexport const CompanyInvoices = ({ company, setAlert, updateCompanyArr }) => {\n    const { invoices } = company;\n    let companyName = getInputValueByLabel(company.details, 'Name');\n    const deleteInvocie = async (id) => {\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            await axios.put(\n                `/api/companies/invoice/${company._id}`,\n                JSON.stringify({ id }),\n                config\n            );\n            let arr = company.invoices.filter((invoice) => invoice._id !== id);\n            updateCompanyArr('invoices', arr, company._id);\n            setAlert(\n                'Invoice has been deleted successfully.',\n                'success',\n                null,\n                false\n            );\n        } catch (err) {\n            setAlert(\n                \"We are sorry, but couldn't delete the invoice.\",\n                'danger',\n                null,\n                false\n            );\n        }\n    };\n    return (\n        <section className='company-invoices'>\n            <h2 className='sr-only'>{`${companyName}'s Invoices .`}</h2>\n            {invoices.length === 0 && (\n                <span className='tile tile--info'>\n                    <img src={infoIcon} alt='' className='icon--md' />\n                    Currently there are no invoices saved. Add a new one now.\n                </span>\n            )}\n            {invoices.length > 0 && (\n                <table className='invoices-table'>\n                    <caption>\n                        <b>Current invoices list.</b>\n                    </caption>\n                    <thead>\n                        <tr className='sr-only'>\n                            <th scope='col'>Created at</th>\n                            <th scope='col'>Invoice number</th>\n                            <th scope='col'>Download Invoice</th>\n                            <th scope='col'>Update Invoice</th>\n                            <th scope='col'>Delete Invoice</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {invoices.map((invoice, index) => (\n                            <tr key={invoice._id} className='tile'>\n                                <td className='invoices-date'>\n                                    {date_DD_MM_YYYY(invoice.created_at)}\n                                </td>\n                                <th scope='row'>{invoice.saved_as}</th>\n                                <td>\n                                    <Link\n                                        to={`/dashboard/companies/${company._id}?tab=invoice&download=${invoice._id}`}\n                                        className='btn-icon'\n                                        title='Download invoice'\n                                        onMouseDown={(e) => e.preventDefault()}\n                                    >\n                                        <img\n                                            src={downloadIcon}\n                                            alt='Download Invoice'\n                                        />\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link\n                                        to={`/dashboard/companies/${company._id}?tab=invoice&updating=${invoice._id}`}\n                                        className='btn-icon'\n                                        title='Update invoice'\n                                        onMouseDown={(e) => e.preventDefault()}\n                                    >\n                                        <img\n                                            src={updateIcon}\n                                            alt='Update Invoice'\n                                        />\n                                    </Link>\n                                </td>\n                                <td>\n                                    <button\n                                        className='btn-icon'\n                                        title='Delete invoice'\n                                        onMouseDown={(e) => e.preventDefault()}\n                                        onClick={(e) => {\n                                            deleteInvocie(invoice._id);\n                                        }}\n                                    >\n                                        <img\n                                            src={deleteIcon}\n                                            alt='Delete Invoice'\n                                        />\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )}\n        </section>\n    );\n};\n\nCompanyInvoices.propTypes = {\n    company: PropTypes.object,\n    setAlert: PropTypes.func,\n    updateCompanyArr: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n    company: state.companies.find(\n        (c) => c._id === state.session.currentCompany\n    ),\n});\n\nconst mapDispatchToProps = {\n    setAlert,\n    updateCompanyArr,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyInvoices);\n"]},"metadata":{},"sourceType":"module"}