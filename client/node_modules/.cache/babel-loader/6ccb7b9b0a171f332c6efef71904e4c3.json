{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst focusing = require(\"../helpers/focusing\");\n\nconst DOMStringMap = require(\"../generated/DOMStringMap\");\n\nclass HTMLAndSVGElementSharedImpl {\n  _initHTMLAndSVGElement() {\n    this._tabIndex = 0;\n    this._dataset = DOMStringMap.createImpl([], {\n      element: this\n    });\n  }\n\n  get dataset() {\n    return this._dataset;\n  } // TODO this should be [Reflect]able if we added default value support to webidl2js's [Reflect]\n\n\n  get tabIndex() {\n    if (!this.hasAttribute(\"tabindex\")) {\n      return focusing.isFocusableAreaElement(this) ? 0 : -1;\n    }\n\n    return conversions.long(this.getAttribute(\"tabindex\"));\n  }\n\n  set tabIndex(value) {\n    this.setAttribute(\"tabindex\", String(value));\n  }\n\n  focus() {\n    if (!focusing.isFocusableAreaElement(this)) {\n      return;\n    }\n\n    const previous = this._ownerDocument._lastFocusedElement;\n    focusing.fireFocusEventWithTargetAdjustment(\"blur\", previous, this);\n    this._ownerDocument._lastFocusedElement = this;\n    focusing.fireFocusEventWithTargetAdjustment(\"focus\", this, previous);\n\n    if (this._ownerDocument._defaultView._frameElement) {\n      this._ownerDocument._defaultView._frameElement.focus();\n    }\n  }\n\n  blur() {\n    if (this._ownerDocument._lastFocusedElement !== this || !focusing.isFocusableAreaElement(this)) {\n      return;\n    }\n\n    focusing.fireFocusEventWithTargetAdjustment(\"blur\", this, this._ownerDocument);\n    this._ownerDocument._lastFocusedElement = null;\n    focusing.fireFocusEventWithTargetAdjustment(\"focus\", this._ownerDocument, this);\n  }\n\n}\n\nexports.implementation = HTMLAndSVGElementSharedImpl;","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAndSVGElementShared-impl.js"],"names":["conversions","require","focusing","DOMStringMap","HTMLAndSVGElementSharedImpl","_initHTMLAndSVGElement","_tabIndex","_dataset","createImpl","element","dataset","tabIndex","hasAttribute","isFocusableAreaElement","long","getAttribute","value","setAttribute","String","focus","previous","_ownerDocument","_lastFocusedElement","fireFocusEventWithTargetAdjustment","_defaultView","_frameElement","blur","exports","implementation"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,2BAAD,CAA5B;;AAEA,MAAMG,2BAAN,CAAkC;AAChCC,EAAAA,sBAAsB,GAAG;AACvB,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,QAAL,GAAgBJ,YAAY,CAACK,UAAb,CAAwB,EAAxB,EAA4B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA5B,CAAhB;AACD;;AAED,MAAIC,OAAJ,GAAc;AACZ,WAAO,KAAKH,QAAZ;AACD,GAR+B,CAUhC;;;AACA,MAAII,QAAJ,GAAe;AACb,QAAI,CAAC,KAAKC,YAAL,CAAkB,UAAlB,CAAL,EAAoC;AAClC,aAAOV,QAAQ,CAACW,sBAAT,CAAgC,IAAhC,IAAwC,CAAxC,GAA4C,CAAC,CAApD;AACD;;AACD,WAAOb,WAAW,CAACc,IAAZ,CAAiB,KAAKC,YAAL,CAAkB,UAAlB,CAAjB,CAAP;AACD;;AAED,MAAIJ,QAAJ,CAAaK,KAAb,EAAoB;AAClB,SAAKC,YAAL,CAAkB,UAAlB,EAA8BC,MAAM,CAACF,KAAD,CAApC;AACD;;AAEDG,EAAAA,KAAK,GAAG;AACN,QAAI,CAACjB,QAAQ,CAACW,sBAAT,CAAgC,IAAhC,CAAL,EAA4C;AAC1C;AACD;;AAED,UAAMO,QAAQ,GAAG,KAAKC,cAAL,CAAoBC,mBAArC;AAEApB,IAAAA,QAAQ,CAACqB,kCAAT,CAA4C,MAA5C,EAAoDH,QAApD,EAA8D,IAA9D;AACA,SAAKC,cAAL,CAAoBC,mBAApB,GAA0C,IAA1C;AACApB,IAAAA,QAAQ,CAACqB,kCAAT,CAA4C,OAA5C,EAAqD,IAArD,EAA2DH,QAA3D;;AAEA,QAAI,KAAKC,cAAL,CAAoBG,YAApB,CAAiCC,aAArC,EAAoD;AAClD,WAAKJ,cAAL,CAAoBG,YAApB,CAAiCC,aAAjC,CAA+CN,KAA/C;AACD;AACF;;AAEDO,EAAAA,IAAI,GAAG;AACL,QAAI,KAAKL,cAAL,CAAoBC,mBAApB,KAA4C,IAA5C,IAAoD,CAACpB,QAAQ,CAACW,sBAAT,CAAgC,IAAhC,CAAzD,EAAgG;AAC9F;AACD;;AAEDX,IAAAA,QAAQ,CAACqB,kCAAT,CAA4C,MAA5C,EAAoD,IAApD,EAA0D,KAAKF,cAA/D;AACA,SAAKA,cAAL,CAAoBC,mBAApB,GAA0C,IAA1C;AACApB,IAAAA,QAAQ,CAACqB,kCAAT,CAA4C,OAA5C,EAAqD,KAAKF,cAA1D,EAA0E,IAA1E;AACD;;AA9C+B;;AAiDlCM,OAAO,CAACC,cAAR,GAAyBxB,2BAAzB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst focusing = require(\"../helpers/focusing\");\nconst DOMStringMap = require(\"../generated/DOMStringMap\");\n\nclass HTMLAndSVGElementSharedImpl {\n  _initHTMLAndSVGElement() {\n    this._tabIndex = 0;\n    this._dataset = DOMStringMap.createImpl([], { element: this });\n  }\n\n  get dataset() {\n    return this._dataset;\n  }\n\n  // TODO this should be [Reflect]able if we added default value support to webidl2js's [Reflect]\n  get tabIndex() {\n    if (!this.hasAttribute(\"tabindex\")) {\n      return focusing.isFocusableAreaElement(this) ? 0 : -1;\n    }\n    return conversions.long(this.getAttribute(\"tabindex\"));\n  }\n\n  set tabIndex(value) {\n    this.setAttribute(\"tabindex\", String(value));\n  }\n\n  focus() {\n    if (!focusing.isFocusableAreaElement(this)) {\n      return;\n    }\n\n    const previous = this._ownerDocument._lastFocusedElement;\n\n    focusing.fireFocusEventWithTargetAdjustment(\"blur\", previous, this);\n    this._ownerDocument._lastFocusedElement = this;\n    focusing.fireFocusEventWithTargetAdjustment(\"focus\", this, previous);\n\n    if (this._ownerDocument._defaultView._frameElement) {\n      this._ownerDocument._defaultView._frameElement.focus();\n    }\n  }\n\n  blur() {\n    if (this._ownerDocument._lastFocusedElement !== this || !focusing.isFocusableAreaElement(this)) {\n      return;\n    }\n\n    focusing.fireFocusEventWithTargetAdjustment(\"blur\", this, this._ownerDocument);\n    this._ownerDocument._lastFocusedElement = null;\n    focusing.fireFocusEventWithTargetAdjustment(\"focus\", this._ownerDocument, this);\n  }\n}\n\nexports.implementation = HTMLAndSVGElementSharedImpl;\n"]},"metadata":{},"sourceType":"script"}