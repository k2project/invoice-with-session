{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocFooter.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateInvoiceNotes, updateInvoiceDiscount, updateInvoiceCurrency } from '../../../../redux/actions/invoice';\nimport { numberWithCommas } from '../../../../components/form/utils/validations';\nimport notesIcon from '../../../../imgs/icons/notesIcon.png';\nimport discountIcon from '../../../../imgs/icons/discountIcon.png';\n\nconst InvoiceDocFooter = ({\n  invoice,\n  updateInvoiceNotes,\n  updateInvoiceDiscount,\n  updateInvoiceCurrency,\n  tasks\n}) => {\n  useEffect(() => {\n    const itemWithCurrency = tasks.find(t => t.amount.currency);\n    if (itemWithCurrency) updateInvoiceCurrency(itemWithCurrency.amount.currency);\n  });\n  const TXT_INIT_TEXT = 'Edit your notes here...';\n  const [notes, setNotes] = useState(TXT_INIT_TEXT);\n\n  const handle_notes_edit = e => {\n    let notes = e.target.value;\n    setNotes(notes);\n    updateInvoiceNotes(notes);\n  };\n\n  const [discount, setDiscount] = useState('0');\n\n  const handle_discount_edit = e => {\n    let discount = e.target.value;\n    setDiscount(discount);\n    updateInvoiceDiscount(discount);\n  };\n\n  const edit_input = (input, stateValue) => {\n    if (input === 'textarea') input = document.getElementById('invoice-notes'); //move cursor to the end of text by reseting value to empty string befor setting focus on the el\n\n    input.value = '';\n    input.focus();\n    input.value = stateValue;\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"invoice__btn icon_iNotes\",\n    title: \"Edit notes\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => edit_input('textarea', notes),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: notesIcon,\n    alt: \"Edit notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"invoice__btn icon_iDiscount\",\n    title: \"Add discount\",\n    onMouseDown: e => e.preventDefault() // onClick={edit_notes}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: discountIcon,\n    alt: \"Add discount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__notes-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Notes:\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, notes)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `bg-${invoice.bg_color}  invoice__cover`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__notes-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"invoice-notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, \" Notes:\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"invoice-notes\",\n    onChange: handle_notes_edit,\n    defaultValue: TXT_INIT_TEXT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"section\", {\n    className: `bg-${invoice.bg_color} txt-${invoice.text_color} invoice__total`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Net and gross amount.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Total:\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__total-sum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"\\xA30.00\")))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Thank you for your business!\"));\n};\n\nInvoiceDocFooter.propTypes = {\n  invoice: PropTypes.object,\n  tasks: PropTypes.array,\n  updateInvoiceNotes: PropTypes.func,\n  updateInvoiceDiscount: PropTypes.func,\n  updateInvoiceCurrency: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  invoice: state.invoice,\n  tasks: state.companies.find(c => c._id === state.session.currentCompany).tasks\n});\n\nconst mapDispatchToProps = {\n  updateInvoiceNotes,\n  updateInvoiceDiscount,\n  updateInvoiceCurrency\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocFooter);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocFooter.js"],"names":["React","useState","useEffect","Fragment","PropTypes","connect","updateInvoiceNotes","updateInvoiceDiscount","updateInvoiceCurrency","numberWithCommas","notesIcon","discountIcon","InvoiceDocFooter","invoice","tasks","itemWithCurrency","find","t","amount","currency","TXT_INIT_TEXT","notes","setNotes","handle_notes_edit","e","target","value","discount","setDiscount","handle_discount_edit","edit_input","input","stateValue","document","getElementById","focus","preventDefault","bg_color","text_color","propTypes","object","array","func","mapStateToProps","state","companies","c","_id","session","currentCompany","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    updateInvoiceNotes,\n    updateInvoiceDiscount,\n    updateInvoiceCurrency,\n} from '../../../../redux/actions/invoice';\nimport { numberWithCommas } from '../../../../components/form/utils/validations';\nimport notesIcon from '../../../../imgs/icons/notesIcon.png';\nimport discountIcon from '../../../../imgs/icons/discountIcon.png';\n\nconst InvoiceDocFooter = ({\n    invoice,\n    updateInvoiceNotes,\n    updateInvoiceDiscount,\n    updateInvoiceCurrency,\n    tasks,\n}) => {\n    useEffect(() => {\n        const itemWithCurrency = tasks.find((t) => t.amount.currency);\n        if (itemWithCurrency)\n            updateInvoiceCurrency(itemWithCurrency.amount.currency);\n    });\n    const TXT_INIT_TEXT = 'Edit your notes here...';\n    const [notes, setNotes] = useState(TXT_INIT_TEXT);\n    const handle_notes_edit = (e) => {\n        let notes = e.target.value;\n        setNotes(notes);\n        updateInvoiceNotes(notes);\n    };\n    const [discount, setDiscount] = useState('0');\n    const handle_discount_edit = (e) => {\n        let discount = e.target.value;\n        setDiscount(discount);\n        updateInvoiceDiscount(discount);\n    };\n    const edit_input = (input, stateValue) => {\n        if (input === 'textarea')\n            input = document.getElementById('invoice-notes');\n        //move cursor to the end of text by reseting value to empty string befor setting focus on the el\n        input.value = '';\n        input.focus();\n        input.value = stateValue;\n    };\n    return (\n        <Fragment>\n            <section className='invoice__footer'>\n                <button\n                    className='invoice__btn icon_iNotes'\n                    title='Edit notes'\n                    onMouseDown={(e) => e.preventDefault()}\n                    onClick={() => edit_input('textarea', notes)}\n                >\n                    <img src={notesIcon} alt='Edit notes' />\n                </button>\n                <button\n                    className='invoice__btn icon_iDiscount'\n                    title='Add discount'\n                    onMouseDown={(e) => e.preventDefault()}\n                    // onClick={edit_notes}\n                >\n                    <img src={discountIcon} alt='Add discount' />\n                </button>\n\n                <section className='invoice__notes'>\n                    <div className='invoice__notes-display'>\n                        <h3>\n                            <b>Notes:</b>\n                        </h3>\n                        <p>{notes}</p>\n                    </div>\n                    <div\n                        className={`bg-${invoice.bg_color}  invoice__cover`}\n                    ></div>\n                    <div className='invoice__notes-form'>\n                        <form>\n                            <label htmlFor='invoice-notes'>\n                                <b> Notes:</b>\n                            </label>\n                            <textarea\n                                id='invoice-notes'\n                                onChange={handle_notes_edit}\n                                defaultValue={TXT_INIT_TEXT}\n                            ></textarea>\n                        </form>\n                    </div>\n                </section>\n                <section\n                    className={`bg-${invoice.bg_color} txt-${invoice.text_color} invoice__total`}\n                >\n                    <h3 className='sr-only'>Net and gross amount.</h3>\n\n                    <div>\n                        Total:\n                        <div className='invoice__total-sum'>£0.00</div>\n                    </div>\n                </section>\n            </section>\n\n            <footer>Thank you for your business!</footer>\n        </Fragment>\n    );\n};\n\nInvoiceDocFooter.propTypes = {\n    invoice: PropTypes.object,\n    tasks: PropTypes.array,\n    updateInvoiceNotes: PropTypes.func,\n    updateInvoiceDiscount: PropTypes.func,\n    updateInvoiceCurrency: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    invoice: state.invoice,\n    tasks: state.companies.find((c) => c._id === state.session.currentCompany)\n        .tasks,\n});\nconst mapDispatchToProps = {\n    updateInvoiceNotes,\n    updateInvoiceDiscount,\n    updateInvoiceCurrency,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocFooter);\n"]},"metadata":{},"sourceType":"module"}