{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/Company.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, useParams, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentCompany } from '../../redux/actions/session';\nimport Page from '../../components/page/Page';\nimport CompanySubmenu from './CompanySubmenu';\nimport CompanyUpdate from './CompanyUpdate';\nimport CompanyDetails from './CompanyDetails';\nimport CompanyTasks from './CompanyTasks';\nimport NewInvoice from './companyInvoice/NewInvoice';\nimport CompanyInvoices from './CompanyInvoices';\nimport './Company.scss';\nexport const Company = ({\n  companies,\n  currentCompany,\n  setCurrentCompany\n}) => {\n  let {\n    id\n  } = useParams();\n  let company = companies.find(c => c._id === id);\n  useEffect(() => {\n    setCurrentCompany(id);\n    return () => {\n      setCurrentCompany(null);\n    };\n  }, []);\n  const searchArr = useLocation().search.split('&');\n  const tab = searchArr[0].slice(5);\n  const tabs = ['tasks', 'invoice', 'invoices', 'details', 'update'];\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, !company && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/dashboard/companies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }\n  }), company && currentCompany && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CompanySubmenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }), !tabs.includes(tab) && /*#__PURE__*/React.createElement(Redirect, {\n    to: `/dashboard/companies/${companies[0]._id}?tab=tasks`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }), tab === 'tasks' && /*#__PURE__*/React.createElement(CompanyTasks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 41\n    }\n  }), tab === 'invoice' && /*#__PURE__*/React.createElement(NewInvoice, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 43\n    }\n  }), tab === 'invoices' && /*#__PURE__*/React.createElement(CompanyInvoices, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 44\n    }\n  }), tab === 'details' && /*#__PURE__*/React.createElement(CompanyDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 43\n    }\n  }), tab === 'update' && /*#__PURE__*/React.createElement(CompanyUpdate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 42\n    }\n  })));\n};\nCompany.propTypes = {\n  setCurrentCompany: PropTypes.func,\n  currentCompany: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  companies: state.companies,\n  currentCompany: state.session.currentCompany\n});\n\nconst mapDispatchToProps = {\n  setCurrentCompany\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Company);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/Company.js"],"names":["React","useEffect","Fragment","PropTypes","Redirect","useParams","useLocation","connect","setCurrentCompany","Page","CompanySubmenu","CompanyUpdate","CompanyDetails","CompanyTasks","NewInvoice","CompanyInvoices","Company","companies","currentCompany","id","company","find","c","_id","searchArr","search","split","tab","slice","tabs","includes","propTypes","func","string","mapStateToProps","state","session","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, useParams, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentCompany } from '../../redux/actions/session';\nimport Page from '../../components/page/Page';\nimport CompanySubmenu from './CompanySubmenu';\nimport CompanyUpdate from './CompanyUpdate';\nimport CompanyDetails from './CompanyDetails';\nimport CompanyTasks from './CompanyTasks';\nimport NewInvoice from './companyInvoice/NewInvoice';\nimport CompanyInvoices from './CompanyInvoices';\n\nimport './Company.scss';\n\nexport const Company = ({ companies, currentCompany, setCurrentCompany }) => {\n    let { id } = useParams();\n    let company = companies.find((c) => c._id === id);\n\n    useEffect(() => {\n        setCurrentCompany(id);\n        return () => {\n            setCurrentCompany(null);\n        };\n    }, []);\n\n    const searchArr = useLocation().search.split('&');\n    const tab = searchArr[0].slice(5);\n    const tabs = ['tasks', 'invoice', 'invoices', 'details', 'update'];\n\n    return (\n        <Page>\n            {!company && <Redirect to='/dashboard/companies' />}\n            {company && currentCompany && (\n                <Fragment>\n                    <CompanySubmenu />\n                    {!tabs.includes(tab) && (\n                        <Redirect\n                            to={`/dashboard/companies/${companies[0]._id}?tab=tasks`}\n                        />\n                    )}\n                    {tab === 'tasks' && <CompanyTasks />}\n                    {tab === 'invoice' && <NewInvoice />}\n                    {tab === 'invoices' && <CompanyInvoices />}\n                    {tab === 'details' && <CompanyDetails />}\n                    {tab === 'update' && <CompanyUpdate />}\n                </Fragment>\n            )}\n        </Page>\n    );\n};\nCompany.propTypes = {\n    setCurrentCompany: PropTypes.func,\n    currentCompany: PropTypes.string,\n};\nconst mapStateToProps = (state) => ({\n    companies: state.companies,\n    currentCompany: state.session.currentCompany,\n});\n\nconst mapDispatchToProps = {\n    setCurrentCompany,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Company);\n"]},"metadata":{},"sourceType":"module"}