{"ast":null,"code":"import { GET_ALL_COMPANIES, CLEAR_COMPANIES, GET_USER, END_SESS } from '../actions/types';\nexport const getAllCompanies = () => async dispatch => {\n  try {\n    //get profile\n    const res = await axios.get('/api/companies');\n    dispatch({\n      type: GET_ALL_COMPANIES,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error('AUTH ERROR ON LOADING ALL COMPANIES', err);\n    console.log(err);\n    dispatch({\n      type: END_SESS\n    });\n  }\n};\nexport const clearCompanies = () => dispatch => {\n  dispatch({\n    type: CLEAR_COMPANIES\n  });\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/redux/actions/companies.js"],"names":["GET_ALL_COMPANIES","CLEAR_COMPANIES","GET_USER","END_SESS","getAllCompanies","dispatch","res","axios","get","type","payload","data","err","console","error","log","clearCompanies"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,eAFJ,EAGIC,QAHJ,EAIIC,QAJJ,QAKO,kBALP;AAOA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,MAAI;AACA;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,gBAAV,CAAlB;AACAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,iBADD;AAELU,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAc,qCAAd,EAAqDF,GAArD;AACAC,IAAAA,OAAO,CAACE,GAAR,CAAYH,GAAZ;AACAP,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACH;AACJ,CAbM;AAcP,OAAO,MAAMa,cAAc,GAAG,MAAOX,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACH,CAFM","sourcesContent":["import {\n    GET_ALL_COMPANIES,\n    CLEAR_COMPANIES,\n    GET_USER,\n    END_SESS,\n} from '../actions/types';\n\nexport const getAllCompanies = () => async (dispatch) => {\n    try {\n        //get profile\n        const res = await axios.get('/api/companies');\n        dispatch({\n            type: GET_ALL_COMPANIES,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.error('AUTH ERROR ON LOADING ALL COMPANIES', err);\n        console.log(err);\n        dispatch({ type: END_SESS });\n    }\n};\nexport const clearCompanies = () => (dispatch) => {\n    dispatch({ type: CLEAR_COMPANIES });\n};\n"]},"metadata":{},"sourceType":"module"}