{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\n\nconst {\n  closest\n} = require(\"../helpers/traversal\");\n\nconst {\n  isDisabled,\n  isSubmittable,\n  isButton,\n  normalizeToCRLF\n} = require(\"../helpers/form-controls\");\n\nconst Blob = require(\"../generated/Blob.js\");\n\nconst File = require(\"../generated/File.js\");\n\nconst conversions = require(\"webidl-conversions\");\n\nexports.implementation = class FormDataImpl {\n  constructor(args) {\n    this._entries = [];\n\n    if (args[0] !== undefined) {\n      this._entries = constructTheFormDataSet(args[0]);\n    }\n  }\n\n  append(name, value, filename) {\n    const entry = createAnEntry(name, value, filename);\n\n    this._entries.push(entry);\n  }\n\n  delete(name) {\n    this._entries = this._entries.filter(entry => entry.name !== name);\n  }\n\n  get(name) {\n    const foundEntry = this._entries.find(entry => entry.name === name);\n\n    return foundEntry !== undefined ? foundEntry.value : null;\n  }\n\n  getAll(name) {\n    return this._entries.filter(entry => entry.name === name).map(entry => entry.value);\n  }\n\n  has(name) {\n    return this._entries.findIndex(entry => entry.name === name) !== -1;\n  }\n\n  set(name, value, filename) {\n    const entry = createAnEntry(name, value, filename);\n\n    const foundIndex = this._entries.findIndex(e => e.name === name);\n\n    if (foundIndex !== -1) {\n      this._entries[foundIndex] = entry;\n      this._entries = this._entries.filter((e, i) => e.name !== name || i === foundIndex);\n    } else {\n      this._entries.push(entry);\n    }\n  }\n\n  *[Symbol.iterator]() {\n    for (const entry of this._entries) {\n      yield [entry.name, idlUtils.tryWrapperForImpl(entry.value)];\n    }\n  }\n\n};\n\nfunction createAnEntry(name, value, filename) {\n  const entry = {\n    name\n  }; // https://github.com/whatwg/xhr/issues/75\n\n  if (Blob.isImpl(value) && !File.isImpl(value)) {\n    const oldValue = value;\n    value = File.createImpl([[], \"blob\", {\n      type: oldValue.type\n    }]); // \"representing the same bytes\"\n\n    value._buffer = oldValue._buffer;\n  }\n\n  if (File.isImpl(value) && filename !== undefined) {\n    const oldValue = value;\n    value = File.createImpl([[], filename, // spec makes no mention of `lastModified`; assume it is inherited\n    // (Chrome's behavior)\n    {\n      type: oldValue.type,\n      lastModified: oldValue.lastModified\n    }]); // \"representing the same bytes\"\n\n    value._buffer = oldValue._buffer;\n  }\n\n  entry.value = value;\n  return entry;\n}\n\nfunction constructTheFormDataSet(form, submitter) {\n  // https://html.spec.whatwg.org/multipage/forms.html#constructing-form-data-set\n  const controls = form.elements.filter(isSubmittable); // submittable is a subset of listed\n\n  const formDataSet = [];\n\n  for (const fieldWrapper of controls) {\n    const field = fieldWrapper;\n\n    if (closest(field, \"datalist\") !== null) {\n      continue;\n    }\n\n    if (isDisabled(field)) {\n      continue;\n    }\n\n    if (isButton(field) && field !== submitter) {\n      continue;\n    }\n\n    if (field.type === \"checkbox\" && field._checkedness === false) {\n      continue;\n    }\n\n    if (field.type === \"radio\" && field._checkedness === false) {\n      continue;\n    }\n\n    if (field.type !== \"image\" && (!field.hasAttribute(\"name\") || field.getAttribute(\"name\") === \"\")) {\n      continue;\n    }\n\n    if (field.localName === \"object\") {\n      // in jsdom, no objects are \"using a plugin\"\n      continue;\n    }\n\n    const {\n      type\n    } = field; // Omit special processing of <input type=\"image\"> since so far we don't actually ever pass submitter\n\n    const nameAttr = field.getAttribute(\"name\");\n    const name = nameAttr === null ? \"\" : nameAttr;\n\n    if (field.localName === \"select\") {\n      for (const option of field.options) {\n        if (option._selectedness === true && !isDisabled(field)) {\n          formDataSet.push({\n            name,\n            value: option.value,\n            type\n          });\n        }\n      }\n    } else if (field.localName === \"input\" && (type === \"checkbox\" || type === \"radio\")) {\n      const value = field.hasAttribute(\"value\") ? field.getAttribute(\"value\") : \"on\";\n      formDataSet.push({\n        name,\n        value,\n        type\n      });\n    } else if (type === \"file\") {\n      for (let i = 0; i < field.files.length; ++i) {\n        formDataSet.push({\n          name,\n          value: field.files.item(i),\n          type\n        });\n      }\n\n      if (field.files.length === 0) {\n        formDataSet.push({\n          name,\n          value: \"\",\n          type: \"application/octet-stream\"\n        });\n      }\n    }\n    /* skip plugins */\n    else {\n        formDataSet.push({\n          name,\n          value: field._getValue(),\n          type\n        });\n      }\n\n    const dirname = field.getAttribute(\"dirname\");\n\n    if (dirname !== null && dirname !== \"\") {\n      const dir = \"ltr\"; // jsdom does not (yet?) implement actual directionality\n\n      formDataSet.push({\n        name: dirname,\n        value: dir,\n        type: \"direction\"\n      });\n    }\n  }\n\n  for (const entry of formDataSet) {\n    entry.name = conversions.USVString(normalizeToCRLF(entry.name));\n\n    if (entry.type !== \"file\" && entry.type !== \"textarea\") {\n      entry.value = normalizeToCRLF(entry.value);\n    }\n\n    if (entry.type !== \"file\") {\n      entry.value = conversions.USVString(entry.value);\n    }\n  }\n\n  return formDataSet;\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/xhr/FormData-impl.js"],"names":["idlUtils","require","closest","isDisabled","isSubmittable","isButton","normalizeToCRLF","Blob","File","conversions","exports","implementation","FormDataImpl","constructor","args","_entries","undefined","constructTheFormDataSet","append","name","value","filename","entry","createAnEntry","push","delete","filter","get","foundEntry","find","getAll","map","has","findIndex","set","foundIndex","e","i","Symbol","iterator","tryWrapperForImpl","isImpl","oldValue","createImpl","type","_buffer","lastModified","form","submitter","controls","elements","formDataSet","fieldWrapper","field","_checkedness","hasAttribute","getAttribute","localName","nameAttr","option","options","_selectedness","files","length","item","_getValue","dirname","dir","USVString"],"mappings":"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","sourcesContent":["\"use strict\";\nconst idlUtils = require(\"../generated/utils\");\nconst { closest } = require(\"../helpers/traversal\");\nconst { isDisabled, isSubmittable, isButton, normalizeToCRLF } = require(\"../helpers/form-controls\");\nconst Blob = require(\"../generated/Blob.js\");\nconst File = require(\"../generated/File.js\");\nconst conversions = require(\"webidl-conversions\");\n\nexports.implementation = class FormDataImpl {\n  constructor(args) {\n    this._entries = [];\n\n    if (args[0] !== undefined) {\n      this._entries = constructTheFormDataSet(args[0]);\n    }\n  }\n\n  append(name, value, filename) {\n    const entry = createAnEntry(name, value, filename);\n    this._entries.push(entry);\n  }\n\n  delete(name) {\n    this._entries = this._entries.filter(entry => entry.name !== name);\n  }\n\n  get(name) {\n    const foundEntry = this._entries.find(entry => entry.name === name);\n    return foundEntry !== undefined ? foundEntry.value : null;\n  }\n\n  getAll(name) {\n    return this._entries.filter(entry => entry.name === name).map(entry => entry.value);\n  }\n\n  has(name) {\n    return this._entries.findIndex(entry => entry.name === name) !== -1;\n  }\n\n  set(name, value, filename) {\n    const entry = createAnEntry(name, value, filename);\n\n    const foundIndex = this._entries.findIndex(e => e.name === name);\n    if (foundIndex !== -1) {\n      this._entries[foundIndex] = entry;\n      this._entries = this._entries.filter((e, i) => e.name !== name || i === foundIndex);\n    } else {\n      this._entries.push(entry);\n    }\n  }\n\n  * [Symbol.iterator]() {\n    for (const entry of this._entries) {\n      yield [entry.name, idlUtils.tryWrapperForImpl(entry.value)];\n    }\n  }\n};\n\nfunction createAnEntry(name, value, filename) {\n  const entry = { name };\n\n  // https://github.com/whatwg/xhr/issues/75\n\n  if (Blob.isImpl(value) && !File.isImpl(value)) {\n    const oldValue = value;\n    value = File.createImpl([\n      [],\n      \"blob\",\n      { type: oldValue.type }\n    ]);\n    // \"representing the same bytes\"\n    value._buffer = oldValue._buffer;\n  }\n\n  if (File.isImpl(value) && filename !== undefined) {\n    const oldValue = value;\n    value = File.createImpl([\n      [],\n      filename,\n      // spec makes no mention of `lastModified`; assume it is inherited\n      // (Chrome's behavior)\n      { type: oldValue.type, lastModified: oldValue.lastModified }\n    ]);\n    // \"representing the same bytes\"\n    value._buffer = oldValue._buffer;\n  }\n\n  entry.value = value;\n\n  return entry;\n}\n\nfunction constructTheFormDataSet(form, submitter) {\n  // https://html.spec.whatwg.org/multipage/forms.html#constructing-form-data-set\n\n  const controls = form.elements.filter(isSubmittable); // submittable is a subset of listed\n  const formDataSet = [];\n\n  for (const fieldWrapper of controls) {\n    const field = fieldWrapper;\n\n    if (closest(field, \"datalist\") !== null) {\n      continue;\n    }\n    if (isDisabled(field)) {\n      continue;\n    }\n    if (isButton(field) && field !== submitter) {\n      continue;\n    }\n    if (field.type === \"checkbox\" && field._checkedness === false) {\n      continue;\n    }\n    if (field.type === \"radio\" && field._checkedness === false) {\n      continue;\n    }\n    if (field.type !== \"image\" && (!field.hasAttribute(\"name\") || field.getAttribute(\"name\") === \"\")) {\n      continue;\n    }\n    if (field.localName === \"object\") { // in jsdom, no objects are \"using a plugin\"\n      continue;\n    }\n\n    const { type } = field;\n\n    // Omit special processing of <input type=\"image\"> since so far we don't actually ever pass submitter\n\n    const nameAttr = field.getAttribute(\"name\");\n    const name = nameAttr === null ? \"\" : nameAttr;\n\n    if (field.localName === \"select\") {\n      for (const option of field.options) {\n        if (option._selectedness === true && !isDisabled(field)) {\n          formDataSet.push({ name, value: option.value, type });\n        }\n      }\n    } else if (field.localName === \"input\" && (type === \"checkbox\" || type === \"radio\")) {\n      const value = field.hasAttribute(\"value\") ? field.getAttribute(\"value\") : \"on\";\n      formDataSet.push({ name, value, type });\n    } else if (type === \"file\") {\n      for (let i = 0; i < field.files.length; ++i) {\n        formDataSet.push({ name, value: field.files.item(i), type });\n      }\n\n      if (field.files.length === 0) {\n        formDataSet.push({ name, value: \"\", type: \"application/octet-stream\" });\n      }\n    } /* skip plugins */ else {\n      formDataSet.push({ name, value: field._getValue(), type });\n    }\n\n    const dirname = field.getAttribute(\"dirname\");\n    if (dirname !== null && dirname !== \"\") {\n      const dir = \"ltr\"; // jsdom does not (yet?) implement actual directionality\n      formDataSet.push({ name: dirname, value: dir, type: \"direction\" });\n    }\n  }\n\n  for (const entry of formDataSet) {\n    entry.name = conversions.USVString(normalizeToCRLF(entry.name));\n\n    if (entry.type !== \"file\" && entry.type !== \"textarea\") {\n      entry.value = normalizeToCRLF(entry.value);\n    }\n\n    if (entry.type !== \"file\") {\n      entry.value = conversions.USVString(entry.value);\n    }\n  }\n\n  return formDataSet;\n}\n"]},"metadata":{},"sourceType":"script"}