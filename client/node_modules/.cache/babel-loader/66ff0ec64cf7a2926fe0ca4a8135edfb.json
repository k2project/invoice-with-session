{"ast":null,"code":"import { SET_ALERT, REMOVE_ALERT, SET_ERROR, REMOVE_ERROR, CLEAR_ALL_ERRORS } from '../actions/types';\nconst initialState = {\n  alerts: [],\n  errors: []\n};\nexport default function (state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case SET_ALERT:\n      return { ...state,\n        alerts: [...payload]\n      };\n\n    case REMOVE_ALERT:\n      const alerts = state.alerts.filter(alert => alert.id !== payload);\n      return { ...state,\n        alerts\n      };\n\n    case SET_ERROR:\n      return { ...state,\n        errors: [...payload]\n      };\n\n    case CLEAR_ALL_ERRORS:\n      return { ...state,\n        errors: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/redux/reducers/messages.js"],"names":["SET_ALERT","REMOVE_ALERT","SET_ERROR","REMOVE_ERROR","CLEAR_ALL_ERRORS","initialState","alerts","errors","state","type","payload","filter","alert","id"],"mappings":"AAAA,SACIA,SADJ,EAEIC,YAFJ,EAGIC,SAHJ,EAIIC,YAJJ,EAKIC,gBALJ,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgC;AAAEI,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAhC,EAAmD;AAC9D,UAAQD,IAAR;AACI,SAAKT,SAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,MAAM,EAAE,CAAC,GAAGI,OAAJ;AAFL,OAAP;;AAIJ,SAAKT,YAAL;AACI,YAAMK,MAAM,GAAGE,KAAK,CAACF,MAAN,CAAaK,MAAb,CAAqBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaH,OAA5C,CAAf;AACA,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA;AAFG,OAAP;;AAIJ,SAAKJ,SAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHD,QAAAA,MAAM,EAAE,CAAC,GAAGG,OAAJ;AAFL,OAAP;;AAIJ,SAAKN,gBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHD,QAAAA,MAAM,EAAE;AAFL,OAAP;;AAKJ;AACI,aAAOC,KAAP;AAxBR;AA0BH","sourcesContent":["import {\n    SET_ALERT,\n    REMOVE_ALERT,\n    SET_ERROR,\n    REMOVE_ERROR,\n    CLEAR_ALL_ERRORS,\n} from '../actions/types';\n\nconst initialState = {\n    alerts: [],\n    errors: [],\n};\n\nexport default function (state = initialState, { type, payload }) {\n    switch (type) {\n        case SET_ALERT:\n            return {\n                ...state,\n                alerts: [...payload],\n            };\n        case REMOVE_ALERT:\n            const alerts = state.alerts.filter((alert) => alert.id !== payload);\n            return {\n                ...state,\n                alerts,\n            };\n        case SET_ERROR:\n            return {\n                ...state,\n                errors: [...payload],\n            };\n        case CLEAR_ALL_ERRORS:\n            return {\n                ...state,\n                errors: null,\n            };\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}