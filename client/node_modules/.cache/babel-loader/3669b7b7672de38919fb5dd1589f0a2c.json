{"ast":null,"code":"import axios from 'axios';\nimport { GET_ALL_COMPANIES, CLEAR_COMPANIES, SET_CURRENT_COMPANY, END_SESS } from '../actions/types';\nexport const getAllCompanies = () => async dispatch => {\n  try {\n    //get profile\n    const res = await axios.get('/api/companies');\n    dispatch({\n      type: GET_ALL_COMPANIES,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error('AUTH ERROR ON LOADING ALL COMPANIES', err);\n    console.log(err);\n    dispatch({\n      type: END_SESS\n    });\n  }\n};\nexport const clearCompanies = () => dispatch => {\n  dispatch({\n    type: CLEAR_COMPANIES\n  });\n};\nexport const setCurrentCompany = company => dispatch => {\n  dispatch({\n    type: SET_CURRENT_COMPANY,\n    payload: company\n  });\n};\nexport const deleteCompany = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/company/${id}`);\n    dispatch(setAlert('Company deleted successfully.', 'success', null, false));\n    dispatch({\n      type: COMPANY_DELETED,\n      payload: true\n    });\n    setTimeout(() => {\n      dispatch({\n        type: COMPANY_DELETED,\n        payload: false\n      });\n    }, 3000);\n  } catch (err) {\n    console.log(err);\n\n    if (err.response.status === 401) {\n      dispatch(handle401Err());\n    }\n  }\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/redux/actions/companies.js"],"names":["axios","GET_ALL_COMPANIES","CLEAR_COMPANIES","SET_CURRENT_COMPANY","END_SESS","getAllCompanies","dispatch","res","get","type","payload","data","err","console","error","log","clearCompanies","setCurrentCompany","company","deleteCompany","id","delete","setAlert","COMPANY_DELETED","setTimeout","response","status","handle401Err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,iBADJ,EAEIC,eAFJ,EAGIC,mBAHJ,EAIIC,QAJJ,QAKO,kBALP;AAOA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,MAAI;AACA;AACA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,gBAAV,CAAlB;AACAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAER,iBADD;AAELS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAc,qCAAd,EAAqDF,GAArD;AACAC,IAAAA,OAAO,CAACE,GAAR,CAAYH,GAAZ;AACAN,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACH;AACJ,CAbM;AAcP,OAAO,MAAMY,cAAc,GAAG,MAAOV,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACH,CAFM;AAGP,OAAO,MAAMe,iBAAiB,GAAIC,OAAD,IAAcZ,QAAD,IAAc;AACxDA,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEN,mBADD;AAELO,IAAAA,OAAO,EAAEQ;AAFJ,GAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMC,aAAa,GAAIC,EAAD,IAAQ,MAAOd,QAAP,IAAoB;AACrD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACqB,MAAN,CAAc,gBAAeD,EAAG,EAAhC,CAAlB;AAEAd,IAAAA,QAAQ,CACJgB,QAAQ,CAAC,+BAAD,EAAkC,SAAlC,EAA6C,IAA7C,EAAmD,KAAnD,CADJ,CAAR;AAGAhB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEc,eADD;AAELb,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIAc,IAAAA,UAAU,CAAC,MAAM;AACblB,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEc,eADD;AAELb,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH,KALS,EAKP,IALO,CAAV;AAMH,GAhBD,CAgBE,OAAOE,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACE,GAAR,CAAYH,GAAZ;;AACA,QAAIA,GAAG,CAACa,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC7BpB,MAAAA,QAAQ,CAACqB,YAAY,EAAb,CAAR;AACH;AACJ;AACJ,CAvBM","sourcesContent":["import axios from 'axios';\nimport {\n    GET_ALL_COMPANIES,\n    CLEAR_COMPANIES,\n    SET_CURRENT_COMPANY,\n    END_SESS,\n} from '../actions/types';\n\nexport const getAllCompanies = () => async (dispatch) => {\n    try {\n        //get profile\n        const res = await axios.get('/api/companies');\n        dispatch({\n            type: GET_ALL_COMPANIES,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.error('AUTH ERROR ON LOADING ALL COMPANIES', err);\n        console.log(err);\n        dispatch({ type: END_SESS });\n    }\n};\nexport const clearCompanies = () => (dispatch) => {\n    dispatch({ type: CLEAR_COMPANIES });\n};\nexport const setCurrentCompany = (company) => (dispatch) => {\n    dispatch({\n        type: SET_CURRENT_COMPANY,\n        payload: company,\n    });\n};\n\nexport const deleteCompany = (id) => async (dispatch) => {\n    try {\n        const res = await axios.delete(`/api/company/${id}`);\n\n        dispatch(\n            setAlert('Company deleted successfully.', 'success', null, false)\n        );\n        dispatch({\n            type: COMPANY_DELETED,\n            payload: true,\n        });\n        setTimeout(() => {\n            dispatch({\n                type: COMPANY_DELETED,\n                payload: false,\n            });\n        }, 3000);\n    } catch (err) {\n        console.log(err);\n        if (err.response.status === 401) {\n            dispatch(handle401Err());\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}