{"ast":null,"code":"import { END_SESS, REMOVE_PROFILE, CLEAR_COMPANIES, REMOVE_USER, SET_CURRENT_COMPANY, SET_CURRENT_TASK, LOAD_NEW_INVOICE } from './types';\nimport { setAlert } from './messages';\nimport { getProfile } from './profile';\nimport { getAllCompanies } from './companies';\nimport { getCurrentUser } from './user';\nexport const startSession = () => async dispatch => {\n  await dispatch(getAllCompanies());\n  await dispatch(getProfile());\n  await dispatch(getCurrentUser());\n};\nexport const endSession = err => dispatch => {\n  dispatch({\n    type: END_SESS\n  });\n  if (err) dispatch(setAlert(err, 'danger', null, false, 10000));\n  localStorage.removeItem('persist:sess');\n  dispatch({\n    type: REMOVE_PROFILE\n  });\n  dispatch({\n    type: CLEAR_COMPANIES\n  });\n  dispatch({\n    type: REMOVE_USER\n  });\n};\nexport const setCurrentCompany = id => dispatch => {\n  dispatch({\n    type: SET_CURRENT_COMPANY,\n    payload: id\n  });\n};\nexport const setCurrentTask = task => dispatch => {\n  dispatch({\n    type: SET_CURRENT_TASK,\n    payload: task\n  });\n};\nexport const newInvoiceLoading = newInvoice => dispatch => {\n  dispatch({\n    type: LOAD_NEW_INVOICE,\n    payload: newInvoice\n  });\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/redux/actions/session.js"],"names":["END_SESS","REMOVE_PROFILE","CLEAR_COMPANIES","REMOVE_USER","SET_CURRENT_COMPANY","SET_CURRENT_TASK","LOAD_NEW_INVOICE","setAlert","getProfile","getAllCompanies","getCurrentUser","startSession","dispatch","endSession","err","type","localStorage","removeItem","setCurrentCompany","id","payload","setCurrentTask","task","newInvoiceLoading","newInvoice"],"mappings":"AAAA,SACIA,QADJ,EAEIC,cAFJ,EAGIC,eAHJ,EAIIC,WAJJ,EAKIC,mBALJ,EAMIC,gBANJ,EAOIC,gBAPJ,QAQO,SARP;AASA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClD,QAAMA,QAAQ,CAACH,eAAe,EAAhB,CAAd;AACA,QAAMG,QAAQ,CAACJ,UAAU,EAAX,CAAd;AACA,QAAMI,QAAQ,CAACF,cAAc,EAAf,CAAd;AACH,CAJM;AAMP,OAAO,MAAMG,UAAU,GAAIC,GAAD,IAAUF,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEf;AAAR,GAAD,CAAR;AACA,MAAIc,GAAJ,EAASF,QAAQ,CAACL,QAAQ,CAACO,GAAD,EAAM,QAAN,EAAgB,IAAhB,EAAsB,KAAtB,EAA6B,KAA7B,CAAT,CAAR;AACTE,EAAAA,YAAY,CAACC,UAAb,CAAwB,cAAxB;AACAL,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEd;AAAR,GAAD,CAAR;AACAW,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEb;AAAR,GAAD,CAAR;AACAU,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACH,CAPM;AAQP,OAAO,MAAMe,iBAAiB,GAAIC,EAAD,IAASP,QAAD,IAAc;AACnDA,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEX,mBAAR;AAA6BgB,IAAAA,OAAO,EAAED;AAAtC,GAAD,CAAR;AACH,CAFM;AAGP,OAAO,MAAME,cAAc,GAAIC,IAAD,IAAWV,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEV,gBAAR;AAA0Be,IAAAA,OAAO,EAAEE;AAAnC,GAAD,CAAR;AACH,CAFM;AAGP,OAAO,MAAMC,iBAAiB,GAAIC,UAAD,IAAiBZ,QAAD,IAAc;AAC3DA,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAET,gBAAR;AAA0Bc,IAAAA,OAAO,EAAEI;AAAnC,GAAD,CAAR;AACH,CAFM","sourcesContent":["import {\n    END_SESS,\n    REMOVE_PROFILE,\n    CLEAR_COMPANIES,\n    REMOVE_USER,\n    SET_CURRENT_COMPANY,\n    SET_CURRENT_TASK,\n    LOAD_NEW_INVOICE,\n} from './types';\nimport { setAlert } from './messages';\nimport { getProfile } from './profile';\nimport { getAllCompanies } from './companies';\nimport { getCurrentUser } from './user';\n\nexport const startSession = () => async (dispatch) => {\n    await dispatch(getAllCompanies());\n    await dispatch(getProfile());\n    await dispatch(getCurrentUser());\n};\n\nexport const endSession = (err) => (dispatch) => {\n    dispatch({ type: END_SESS });\n    if (err) dispatch(setAlert(err, 'danger', null, false, 10000));\n    localStorage.removeItem('persist:sess');\n    dispatch({ type: REMOVE_PROFILE });\n    dispatch({ type: CLEAR_COMPANIES });\n    dispatch({ type: REMOVE_USER });\n};\nexport const setCurrentCompany = (id) => (dispatch) => {\n    dispatch({ type: SET_CURRENT_COMPANY, payload: id });\n};\nexport const setCurrentTask = (task) => (dispatch) => {\n    dispatch({ type: SET_CURRENT_TASK, payload: task });\n};\nexport const newInvoiceLoading = (newInvoice) => (dispatch) => {\n    dispatch({ type: LOAD_NEW_INVOICE, payload: newInvoice });\n};\n"]},"metadata":{},"sourceType":"module"}