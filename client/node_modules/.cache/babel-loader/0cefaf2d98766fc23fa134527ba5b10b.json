{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/Header.js\";\nimport React from 'react';\nimport PropTypes, { useEffect, useState } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { setAlert } from '../../redux/actions/messages';\nimport { logoutCurrentUser } from '../../redux/actions/session';\nexport const Header = ({\n  setAlert,\n  logoutCurrentUser\n}) => {\n  let date = new Date();\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const messages = [`Hello, John!`, `Today is {date}.`, 'Happy invoicing!'];\n  const [message, setMessage] = useState(messages[0]);\n  date = date.toLocaleDateString(undefined, options);\n  useEffect(() => {\n    const toggleMessage = setInterval(() => {}, 2000);\n    return () => {\n      clearInterval(toggleMessage);\n    };\n  }, [setMessage]);\n\n  const logout = async () => {\n    try {\n      await axios.delete('/api/user');\n      setAlert('You have been logged out successfully.', 'success', 'login page', false);\n      logoutCurrentUser();\n    } catch (err) {\n      console.log('logout err', err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard/profile\",\n    onMouseDown: e => e.preventDefault(),\n    className: \"header__logo tile\",\n    onClick: () => {\n      setAlert(`Profile's settings have been now desplayed on the page `, 'success');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"invoice\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header__messages tile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, message)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"header__logout tile\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Sign Out\"));\n};\nHeader.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  logoutCurrentUser: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  setAlert,\n  logoutCurrentUser\n};\nexport default connect(null, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/Header.js"],"names":["React","PropTypes","useEffect","useState","Link","connect","axios","setAlert","logoutCurrentUser","Header","date","Date","options","weekday","year","month","day","messages","message","setMessage","toLocaleDateString","undefined","toggleMessage","setInterval","clearInterval","logout","delete","err","console","log","e","preventDefault","propTypes","func","isRequired","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes, { useEffect, useState } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { setAlert } from '../../redux/actions/messages';\nimport { logoutCurrentUser } from '../../redux/actions/session';\n\nexport const Header = ({ setAlert, logoutCurrentUser }) => {\n    let date = new Date();\n    const options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    };\n    const messages = [`Hello, John!`, `Today is {date}.`, 'Happy invoicing!'];\n    const [message, setMessage] = useState(messages[0]);\n    date = date.toLocaleDateString(undefined, options);\n    useEffect(() => {\n        const toggleMessage = setInterval(() => {}, 2000);\n        return () => {\n            clearInterval(toggleMessage);\n        };\n    }, [setMessage]);\n    const logout = async () => {\n        try {\n            await axios.delete('/api/user');\n            setAlert(\n                'You have been logged out successfully.',\n                'success',\n                'login page',\n                false\n            );\n            logoutCurrentUser();\n        } catch (err) {\n            console.log('logout err', err);\n        }\n    };\n    return (\n        <header className='header'>\n            <Link\n                to='/dashboard/profile'\n                onMouseDown={(e) => e.preventDefault()}\n                className='header__logo tile'\n                onClick={() => {\n                    setAlert(\n                        `Profile's settings have been now desplayed on the page `,\n                        'success'\n                    );\n                }}\n            >\n                invoice\n            </Link>\n            <div className='header__messages tile'>\n                <span>{message}</span>\n            </div>\n            <button\n                className='header__logout tile'\n                onMouseDown={(e) => e.preventDefault()}\n                onClick={logout}\n            >\n                Sign Out\n            </button>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    logoutCurrentUser: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n    setAlert,\n    logoutCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}