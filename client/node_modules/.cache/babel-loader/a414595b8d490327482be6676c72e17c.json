{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst {\n  HTML_NS\n} = require(\"../helpers/namespaces\");\n\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\n\nconst {\n  firstChildWithHTMLLocalName,\n  childrenByHTMLLocalName\n} = require(\"../helpers/traversal\");\n\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\n\nconst NODE_TYPE = require(\"../node-type\");\n\nfunction tHeadInsertionPoint(table) {\n  const iterator = domSymbolTree.childrenIterator(table);\n\n  for (const child of iterator) {\n    if (child.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n      continue;\n    }\n\n    if (child._namespaceURI !== HTML_NS || child._localName !== \"caption\" && child._localName !== \"colgroup\") {\n      return child;\n    }\n  }\n\n  return null;\n}\n\nclass HTMLTableElementImpl extends HTMLElementImpl {\n  get caption() {\n    return firstChildWithHTMLLocalName(this, \"caption\");\n  }\n\n  set caption(value) {\n    const currentCaption = this.caption;\n\n    if (currentCaption !== null) {\n      this.removeChild(currentCaption);\n    }\n\n    if (value !== null) {\n      const insertionPoint = this.firstChild;\n      this.insertBefore(value, insertionPoint);\n    }\n\n    return value;\n  }\n\n  get tHead() {\n    return firstChildWithHTMLLocalName(this, \"thead\");\n  }\n\n  set tHead(value) {\n    if (value !== null && value._localName !== \"thead\") {\n      throw new DOMException(\"Cannot set a non-thead element as a table header\", \"HierarchyRequestError\");\n    }\n\n    const currentHead = this.tHead;\n\n    if (currentHead !== null) {\n      this.removeChild(currentHead);\n    }\n\n    if (value !== null) {\n      const insertionPoint = tHeadInsertionPoint(this);\n      this.insertBefore(value, insertionPoint);\n    }\n  }\n\n  get tFoot() {\n    return firstChildWithHTMLLocalName(this, \"tfoot\");\n  }\n\n  set tFoot(value) {\n    if (value !== null && value._localName !== \"tfoot\") {\n      throw new DOMException(\"Cannot set a non-tfoot element as a table footer\", \"HierarchyRequestError\");\n    }\n\n    const currentFoot = this.tFoot;\n\n    if (currentFoot !== null) {\n      this.removeChild(currentFoot);\n    }\n\n    if (value !== null) {\n      this.appendChild(value);\n    }\n  }\n\n  get rows() {\n    if (!this._rows) {\n      this._rows = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => {\n          const headerRows = [];\n          const bodyRows = [];\n          const footerRows = [];\n          const iterator = domSymbolTree.childrenIterator(this);\n\n          for (const child of iterator) {\n            if (child.nodeType !== NODE_TYPE.ELEMENT_NODE || child._namespaceURI !== HTML_NS) {\n              continue;\n            }\n\n            if (child._localName === \"thead\") {\n              headerRows.push(...childrenByHTMLLocalName(child, \"tr\"));\n            } else if (child._localName === \"tbody\") {\n              bodyRows.push(...childrenByHTMLLocalName(child, \"tr\"));\n            } else if (child._localName === \"tfoot\") {\n              footerRows.push(...childrenByHTMLLocalName(child, \"tr\"));\n            } else if (child._localName === \"tr\") {\n              bodyRows.push(child);\n            }\n          }\n\n          return [...headerRows, ...bodyRows, ...footerRows];\n        }\n      });\n    }\n\n    return this._rows;\n  }\n\n  get tBodies() {\n    if (!this._tBodies) {\n      this._tBodies = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => childrenByHTMLLocalName(this, \"tbody\")\n      });\n    }\n\n    return this._tBodies;\n  }\n\n  createTBody() {\n    const el = this._ownerDocument.createElement(\"TBODY\");\n\n    const tbodies = childrenByHTMLLocalName(this, \"tbody\");\n    const insertionPoint = tbodies[tbodies.length - 1];\n\n    if (insertionPoint) {\n      this.insertBefore(el, insertionPoint.nextSibling);\n    } else {\n      this.appendChild(el);\n    }\n\n    return el;\n  }\n\n  createTHead() {\n    let el = this.tHead;\n\n    if (!el) {\n      el = this.tHead = this._ownerDocument.createElement(\"THEAD\");\n    }\n\n    return el;\n  }\n\n  deleteTHead() {\n    this.tHead = null;\n  }\n\n  createTFoot() {\n    let el = this.tFoot;\n\n    if (!el) {\n      el = this.tFoot = this._ownerDocument.createElement(\"TFOOT\");\n    }\n\n    return el;\n  }\n\n  deleteTFoot() {\n    this.tFoot = null;\n  }\n\n  createCaption() {\n    let el = this.caption;\n\n    if (!el) {\n      el = this.caption = this._ownerDocument.createElement(\"CAPTION\");\n    }\n\n    return el;\n  }\n\n  deleteCaption() {\n    const c = this.caption;\n\n    if (c) {\n      c.parentNode.removeChild(c);\n    }\n  }\n\n  insertRow(index) {\n    if (index < -1 || index > this.rows.length) {\n      throw new DOMException(\"Cannot insert a row at an index that is less than -1 or greater than the number of \" + \"existing rows\", \"IndexSizeError\");\n    }\n\n    const tr = this._ownerDocument.createElement(\"tr\");\n\n    if (this.rows.length === 0 && this.tBodies.length === 0) {\n      const tBody = this._ownerDocument.createElement(\"tbody\");\n\n      tBody.appendChild(tr);\n      this.appendChild(tBody);\n    } else if (this.rows.length === 0) {\n      const tBody = this.tBodies.item(this.tBodies.length - 1);\n      tBody.appendChild(tr);\n    } else if (index === -1 || index === this.rows.length) {\n      const tSection = this.rows.item(this.rows.length - 1).parentNode;\n      tSection.appendChild(tr);\n    } else {\n      const beforeTR = this.rows.item(index);\n      const tSection = beforeTR.parentNode;\n      tSection.insertBefore(tr, beforeTR);\n    }\n\n    return tr;\n  }\n\n  deleteRow(index) {\n    const rowLength = this.rows.length;\n\n    if (index < -1 || index >= rowLength) {\n      throw new DOMException(`Cannot delete a row at index ${index}, where no row exists`, \"IndexSizeError\");\n    }\n\n    if (index === -1) {\n      if (rowLength === 0) {\n        return;\n      }\n\n      index = rowLength - 1;\n    }\n\n    const tr = this.rows.item(index);\n    tr.parentNode.removeChild(tr);\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLTableElementImpl\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableElement-impl.js"],"names":["DOMException","require","HTMLElementImpl","implementation","HTML_NS","domSymbolTree","firstChildWithHTMLLocalName","childrenByHTMLLocalName","HTMLCollection","NODE_TYPE","tHeadInsertionPoint","table","iterator","childrenIterator","child","nodeType","ELEMENT_NODE","_namespaceURI","_localName","HTMLTableElementImpl","caption","value","currentCaption","removeChild","insertionPoint","firstChild","insertBefore","tHead","currentHead","tFoot","currentFoot","appendChild","rows","_rows","createImpl","element","query","headerRows","bodyRows","footerRows","push","tBodies","_tBodies","createTBody","el","_ownerDocument","createElement","tbodies","length","nextSibling","createTHead","deleteTHead","createTFoot","deleteTFoot","createCaption","deleteCaption","c","parentNode","insertRow","index","tr","tBody","item","tSection","beforeTR","deleteRow","rowLength","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nconst DOMException = require(\"domexception\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { HTML_NS } = require(\"../helpers/namespaces\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst { firstChildWithHTMLLocalName, childrenByHTMLLocalName } = require(\"../helpers/traversal\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst NODE_TYPE = require(\"../node-type\");\n\nfunction tHeadInsertionPoint(table) {\n  const iterator = domSymbolTree.childrenIterator(table);\n  for (const child of iterator) {\n    if (child.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n      continue;\n    }\n\n    if (child._namespaceURI !== HTML_NS || (child._localName !== \"caption\" && child._localName !== \"colgroup\")) {\n      return child;\n    }\n  }\n\n  return null;\n}\n\nclass HTMLTableElementImpl extends HTMLElementImpl {\n  get caption() {\n    return firstChildWithHTMLLocalName(this, \"caption\");\n  }\n\n  set caption(value) {\n    const currentCaption = this.caption;\n    if (currentCaption !== null) {\n      this.removeChild(currentCaption);\n    }\n\n    if (value !== null) {\n      const insertionPoint = this.firstChild;\n      this.insertBefore(value, insertionPoint);\n    }\n    return value;\n  }\n\n  get tHead() {\n    return firstChildWithHTMLLocalName(this, \"thead\");\n  }\n\n  set tHead(value) {\n    if (value !== null && value._localName !== \"thead\") {\n      throw new DOMException(\"Cannot set a non-thead element as a table header\", \"HierarchyRequestError\");\n    }\n\n    const currentHead = this.tHead;\n    if (currentHead !== null) {\n      this.removeChild(currentHead);\n    }\n\n    if (value !== null) {\n      const insertionPoint = tHeadInsertionPoint(this);\n      this.insertBefore(value, insertionPoint);\n    }\n  }\n\n  get tFoot() {\n    return firstChildWithHTMLLocalName(this, \"tfoot\");\n  }\n\n  set tFoot(value) {\n    if (value !== null && value._localName !== \"tfoot\") {\n      throw new DOMException(\"Cannot set a non-tfoot element as a table footer\", \"HierarchyRequestError\");\n    }\n\n    const currentFoot = this.tFoot;\n    if (currentFoot !== null) {\n      this.removeChild(currentFoot);\n    }\n\n    if (value !== null) {\n      this.appendChild(value);\n    }\n  }\n\n  get rows() {\n    if (!this._rows) {\n      this._rows = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => {\n          const headerRows = [];\n          const bodyRows = [];\n          const footerRows = [];\n\n          const iterator = domSymbolTree.childrenIterator(this);\n          for (const child of iterator) {\n            if (child.nodeType !== NODE_TYPE.ELEMENT_NODE || child._namespaceURI !== HTML_NS) {\n              continue;\n            }\n\n            if (child._localName === \"thead\") {\n              headerRows.push(...childrenByHTMLLocalName(child, \"tr\"));\n            } else if (child._localName === \"tbody\") {\n              bodyRows.push(...childrenByHTMLLocalName(child, \"tr\"));\n            } else if (child._localName === \"tfoot\") {\n              footerRows.push(...childrenByHTMLLocalName(child, \"tr\"));\n            } else if (child._localName === \"tr\") {\n              bodyRows.push(child);\n            }\n          }\n\n          return [...headerRows, ...bodyRows, ...footerRows];\n        }\n      });\n    }\n    return this._rows;\n  }\n\n  get tBodies() {\n    if (!this._tBodies) {\n      this._tBodies = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => childrenByHTMLLocalName(this, \"tbody\")\n      });\n    }\n    return this._tBodies;\n  }\n\n  createTBody() {\n    const el = this._ownerDocument.createElement(\"TBODY\");\n\n    const tbodies = childrenByHTMLLocalName(this, \"tbody\");\n    const insertionPoint = tbodies[tbodies.length - 1];\n\n    if (insertionPoint) {\n      this.insertBefore(el, insertionPoint.nextSibling);\n    } else {\n      this.appendChild(el);\n    }\n    return el;\n  }\n\n  createTHead() {\n    let el = this.tHead;\n    if (!el) {\n      el = this.tHead = this._ownerDocument.createElement(\"THEAD\");\n    }\n    return el;\n  }\n\n  deleteTHead() {\n    this.tHead = null;\n  }\n\n  createTFoot() {\n    let el = this.tFoot;\n    if (!el) {\n      el = this.tFoot = this._ownerDocument.createElement(\"TFOOT\");\n    }\n    return el;\n  }\n\n  deleteTFoot() {\n    this.tFoot = null;\n  }\n\n  createCaption() {\n    let el = this.caption;\n    if (!el) {\n      el = this.caption = this._ownerDocument.createElement(\"CAPTION\");\n    }\n    return el;\n  }\n\n  deleteCaption() {\n    const c = this.caption;\n    if (c) {\n      c.parentNode.removeChild(c);\n    }\n  }\n\n  insertRow(index) {\n    if (index < -1 || index > this.rows.length) {\n      throw new DOMException(\"Cannot insert a row at an index that is less than -1 or greater than the number of \" +\n        \"existing rows\", \"IndexSizeError\");\n    }\n\n    const tr = this._ownerDocument.createElement(\"tr\");\n\n    if (this.rows.length === 0 && this.tBodies.length === 0) {\n      const tBody = this._ownerDocument.createElement(\"tbody\");\n      tBody.appendChild(tr);\n      this.appendChild(tBody);\n    } else if (this.rows.length === 0) {\n      const tBody = this.tBodies.item(this.tBodies.length - 1);\n      tBody.appendChild(tr);\n    } else if (index === -1 || index === this.rows.length) {\n      const tSection = this.rows.item(this.rows.length - 1).parentNode;\n      tSection.appendChild(tr);\n    } else {\n      const beforeTR = this.rows.item(index);\n      const tSection = beforeTR.parentNode;\n      tSection.insertBefore(tr, beforeTR);\n    }\n\n    return tr;\n  }\n\n  deleteRow(index) {\n    const rowLength = this.rows.length;\n    if (index < -1 || index >= rowLength) {\n      throw new DOMException(`Cannot delete a row at index ${index}, where no row exists`, \"IndexSizeError\");\n    }\n\n    if (index === -1) {\n      if (rowLength === 0) {\n        return;\n      }\n\n      index = rowLength - 1;\n    }\n\n    const tr = this.rows.item(index);\n    tr.parentNode.removeChild(tr);\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLTableElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}