{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/login/Login.js\";\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { startSession } from '../../redux/actions/session';\n\nconst Login = ({\n  authenticated,\n  startSession\n}) => {\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const body = JSON.stringify({\n        email: 'me@me.com',\n        password: 'Qwert1234'\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const res = await axios.post('/api/user/login', body, config);\n      startSession(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, !authenticated && /*#__PURE__*/React.createElement(\"main\", {\n    className: \"login\",\n    id: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn--form btn--theme\",\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Sign In\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"p--sml\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Need an account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Sign up now.\"))));\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.session.authenticated\n});\n\nconst mapDispatchToProps = {\n  startSession\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/login/Login.js"],"names":["React","Fragment","Link","axios","connect","startSession","Login","authenticated","onSubmit","e","preventDefault","body","JSON","stringify","email","password","config","headers","res","post","data","err","console","log","mapStateToProps","state","session","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,6BAA7B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBF,EAAAA;AAAjB,CAAD,KAAqC;AAC/C,QAAMG,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,YAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxBC,QAAAA,KAAK,EAAE,WADiB;AAExBC,QAAAA,QAAQ,EAAE;AAFc,OAAf,CAAb;AAIA,YAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADE,OAAf;AAKA,YAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,iBAAX,EAA8BR,IAA9B,EAAoCK,MAApC,CAAlB;AACAX,MAAAA,YAAY,CAACa,GAAG,CAACE,IAAL,CAAZ;AACH,KAZD,CAYE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAjBD;;AAkBA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACd,aAAD,iBACG;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAwB,IAAA,EAAE,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,0BAFd;AAGI,IAAA,WAAW,EAAGC,CAAD,IAAOA,CAAC,CAACC,cAAF,EAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,eAUI;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACqB,GADrB,eAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAVJ,CAFR,CADJ;AAqBH,CAxCD;;AAyCA,MAAMc,eAAe,GAAIC,KAAD,KAAY;AAChClB,EAAAA,aAAa,EAAEkB,KAAK,CAACC,OAAN,CAAcnB;AADG,CAAZ,CAAxB;;AAGA,MAAMoB,kBAAkB,GAAG;AAAEtB,EAAAA;AAAF,CAA3B;AACA,eAAeD,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,KAA7C,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { startSession } from '../../redux/actions/session';\n\nconst Login = ({ authenticated, startSession }) => {\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const body = JSON.stringify({\n                email: 'me@me.com',\n                password: 'Qwert1234',\n            });\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            const res = await axios.post('/api/user/login', body, config);\n            startSession(res.data);\n        } catch (err) {\n            console.log(err);\n        }\n    };\n    return (\n        <Fragment>\n            {!authenticated && (\n                <main className='login' id='main'>\n                    <form onSubmit={onSubmit}>\n                        <button\n                            type='submit'\n                            className='btn btn--form btn--theme'\n                            onMouseDown={(e) => e.preventDefault()}\n                        >\n                            Sign In\n                        </button>\n                    </form>\n                    <p className='p--sml'>\n                        Need an account?{' '}\n                        <Link to='/register'>Sign up now.</Link>\n                    </p>\n                </main>\n            )}\n        </Fragment>\n    );\n};\nconst mapStateToProps = (state) => ({\n    authenticated: state.session.authenticated,\n});\nconst mapDispatchToProps = { startSession };\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}