{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyInvoices.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getInputValueByLabel } from '../../components/form/utils/customFormQueries';\nimport infoIcon from '../../imgs/icons/infoIcon.png';\nexport const CompanyInvoices = ({\n  company\n}) => {\n  const {\n    invoices\n  } = company;\n  let companyName = getInputValueByLabel(company.details, 'Name');\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"company-invoices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, `${companyName}'s Invoices .`), invoices.length === 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tile tile--info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: infoIcon,\n    alt: \"\",\n    className: \"icon--md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }), \"Currently there are no invoices saved. Add a new one now.\"), invoices.length > 0 && /*#__PURE__*/React.createElement(TasksDisplayTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 37\n    }\n  }));\n};\nCompanyInvoices.propTypes = {\n  company: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  company: state.companies.find(c => c._id === state.session.currentCompany)\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyInvoices);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyInvoices.js"],"names":["React","Component","PropTypes","connect","getInputValueByLabel","infoIcon","CompanyInvoices","company","invoices","companyName","details","length","propTypes","object","mapStateToProps","state","companies","find","c","_id","session","currentCompany","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,+CAArC;AACA,OAAOC,QAAP,MAAqB,+BAArB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAeD,OAArB;AACA,MAAIE,WAAW,GAAGL,oBAAoB,CAACG,OAAO,CAACG,OAAT,EAAkB,MAAlB,CAAtC;AACA,sBACI;AAAS,IAAA,SAAS,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B,GAAED,WAAY,eAAxC,CADJ,EAEKD,QAAQ,CAACG,MAAT,KAAoB,CAApB,iBACG;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEN,QAAV;AAAoB,IAAA,GAAG,EAAC,EAAxB;AAA2B,IAAA,SAAS,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,8DAHR,EAQKG,QAAQ,CAACG,MAAT,GAAkB,CAAlB,iBAAuB,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAR5B,CADJ;AAYH,CAfM;AAiBPL,eAAe,CAACM,SAAhB,GAA4B;AACxBL,EAAAA,OAAO,EAAEL,SAAS,CAACW;AADK,CAA5B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCR,EAAAA,OAAO,EAAEQ,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CACJC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUJ,KAAK,CAACK,OAAN,CAAcC,cAD1B;AADuB,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAG,EAA3B;AAEA,eAAenB,OAAO,CAACW,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6ChB,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getInputValueByLabel } from '../../components/form/utils/customFormQueries';\nimport infoIcon from '../../imgs/icons/infoIcon.png';\n\nexport const CompanyInvoices = ({ company }) => {\n    const { invoices } = company;\n    let companyName = getInputValueByLabel(company.details, 'Name');\n    return (\n        <section className='company-invoices'>\n            <h2 className='sr-only'>{`${companyName}'s Invoices .`}</h2>\n            {invoices.length === 0 && (\n                <span className='tile tile--info'>\n                    <img src={infoIcon} alt='' className='icon--md' />\n                    Currently there are no invoices saved. Add a new one now.\n                </span>\n            )}\n            {invoices.length > 0 && <TasksDisplayTable />}\n        </section>\n    );\n};\n\nCompanyInvoices.propTypes = {\n    company: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n    company: state.companies.find(\n        (c) => c._id === state.session.currentCompany\n    ),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyInvoices);\n"]},"metadata":{},"sourceType":"module"}