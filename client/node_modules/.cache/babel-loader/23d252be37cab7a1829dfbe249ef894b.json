{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Calendar.scss';\nimport { isDate, isSameDay, isSameMonth, getDateISO, getNextMonth, getPreviousMonth, WEEK_DAYS, CALENDAR_MONTHS } from './dates';\n\nconst calendar = (month = THIS_MONTH, year = THIS_YEAR) => {\n  // Get number of days in the month and the month's first day\n  const monthDays = getMonthDays(month, year);\n  const monthFirstDay = getMonthFirstDay(month, year); // Get number of days to be displayed from previous and next months\n  // These ensure a total of 42 days (6 weeks) displayed on the calendar\n\n  const daysFromPrevMonth = monthFirstDay - 1;\n  const daysFromNextMonth = CALENDAR_WEEKS * 7 - (daysFromPrevMonth + monthDays); // Get the previous and next months and years\n\n  const {\n    month: prevMonth,\n    year: prevMonthYear\n  } = getPreviousMonth(month, year);\n  const {\n    month: nextMonth,\n    year: nextMonthYear\n  } = getNextMonth(month, year); // Get number of days in previous month\n\n  const prevMonthDays = getMonthDays(prevMonth, prevMonthYear); // Builds dates to be displayed from previous month\n\n  const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, index) => {\n    const day = index + 1 + (prevMonthDays - daysFromPrevMonth);\n    return [prevMonthYear, zeroPad(prevMonth, 2), zeroPad(day, 2)];\n  }); // Builds dates to be displayed from current month\n\n  const thisMonthDates = [...new Array(monthDays)].map((n, index) => {\n    const day = index + 1;\n    return [year, zeroPad(month, 2), zeroPad(day, 2)];\n  }); // Builds dates to be displayed from next month\n\n  const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, index) => {\n    const day = index + 1;\n    return [nextMonthYear, zeroPad(nextMonth, 2), zeroPad(day, 2)];\n  }); // Combines all dates from previous, current and next months\n\n  return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n};\n\nclass Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...this.resolveStateFromProp(),\n      today: new Date()\n    };\n\n    this.getCalendarDates = () => {\n      const {\n        current,\n        month,\n        year\n      } = this.state;\n      const calendarMonth = month || +current.getMonth() + 1;\n      const calendarYear = year || current.getFullYear();\n      return calendar(calendarMonth, calendarYear);\n    };\n  }\n\n  resolveStateFromDate(date) {\n    const isDateObject = isDate(date);\n\n    const _date = isDateObject ? date : new Date();\n\n    return {\n      current: isDateObject ? date : null,\n      month: +_date.getMonth() + 1,\n      year: _date.getFullYear()\n    };\n  }\n\n  resolveStateFromProp() {\n    return this.resolveStateFromDate(this.props.date);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Styled.CalendarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, this.renderMonthAndYear(), /*#__PURE__*/React.createElement(Styled.CalendarGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, Object.keys(WEEK_DAYS).map(this.renderDayLabel)), /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, this.getCalendarDates().map(this.renderCalendarDate))));\n  }\n\n}\n\nCalendar.propTypes = {\n  date: PropTypes.instanceOf(Date),\n  onDateChanged: PropTypes.func\n};\nexport default Calendar;","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js"],"names":["React","PropTypes","isDate","isSameDay","isSameMonth","getDateISO","getNextMonth","getPreviousMonth","WEEK_DAYS","CALENDAR_MONTHS","calendar","month","THIS_MONTH","year","THIS_YEAR","monthDays","getMonthDays","monthFirstDay","getMonthFirstDay","daysFromPrevMonth","daysFromNextMonth","CALENDAR_WEEKS","prevMonth","prevMonthYear","nextMonth","nextMonthYear","prevMonthDays","prevMonthDates","Array","map","n","index","day","zeroPad","thisMonthDates","nextMonthDates","Calendar","Component","state","resolveStateFromProp","today","Date","getCalendarDates","current","calendarMonth","getMonth","calendarYear","getFullYear","resolveStateFromDate","date","isDateObject","_date","props","render","renderMonthAndYear","Object","keys","renderDayLabel","renderCalendarDate","propTypes","instanceOf","onDateChanged","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Calendar.scss';\nimport {\n    isDate,\n    isSameDay,\n    isSameMonth,\n    getDateISO,\n    getNextMonth,\n    getPreviousMonth,\n    WEEK_DAYS,\n    CALENDAR_MONTHS,\n} from './dates';\n\nconst calendar = (month = THIS_MONTH, year = THIS_YEAR) => {\n    // Get number of days in the month and the month's first day\n\n    const monthDays = getMonthDays(month, year);\n    const monthFirstDay = getMonthFirstDay(month, year);\n\n    // Get number of days to be displayed from previous and next months\n    // These ensure a total of 42 days (6 weeks) displayed on the calendar\n\n    const daysFromPrevMonth = monthFirstDay - 1;\n    const daysFromNextMonth =\n        CALENDAR_WEEKS * 7 - (daysFromPrevMonth + monthDays);\n\n    // Get the previous and next months and years\n\n    const { month: prevMonth, year: prevMonthYear } = getPreviousMonth(\n        month,\n        year\n    );\n    const { month: nextMonth, year: nextMonthYear } = getNextMonth(month, year);\n\n    // Get number of days in previous month\n    const prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\n\n    // Builds dates to be displayed from previous month\n\n    const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, index) => {\n        const day = index + 1 + (prevMonthDays - daysFromPrevMonth);\n        return [prevMonthYear, zeroPad(prevMonth, 2), zeroPad(day, 2)];\n    });\n\n    // Builds dates to be displayed from current month\n\n    const thisMonthDates = [...new Array(monthDays)].map((n, index) => {\n        const day = index + 1;\n        return [year, zeroPad(month, 2), zeroPad(day, 2)];\n    });\n\n    // Builds dates to be displayed from next month\n\n    const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, index) => {\n        const day = index + 1;\n        return [nextMonthYear, zeroPad(nextMonth, 2), zeroPad(day, 2)];\n    });\n\n    // Combines all dates from previous, current and next months\n    return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n};\n\nclass Calendar extends React.Component {\n    state = { ...this.resolveStateFromProp(), today: new Date() };\n\n    resolveStateFromDate(date) {\n        const isDateObject = isDate(date);\n        const _date = isDateObject ? date : new Date();\n\n        return {\n            current: isDateObject ? date : null,\n            month: +_date.getMonth() + 1,\n            year: _date.getFullYear(),\n        };\n    }\n\n    resolveStateFromProp() {\n        return this.resolveStateFromDate(this.props.date);\n    }\n\n    getCalendarDates = () => {\n        const { current, month, year } = this.state;\n        const calendarMonth = month || +current.getMonth() + 1;\n        const calendarYear = year || current.getFullYear();\n\n        return calendar(calendarMonth, calendarYear);\n    };\n\n    render() {\n        return (\n            <Styled.CalendarContainer>\n                {this.renderMonthAndYear()}\n\n                <Styled.CalendarGrid>\n                    <Fragment>\n                        {Object.keys(WEEK_DAYS).map(this.renderDayLabel)}\n                    </Fragment>\n\n                    <Fragment>\n                        {this.getCalendarDates().map(this.renderCalendarDate)}\n                    </Fragment>\n                </Styled.CalendarGrid>\n            </Styled.CalendarContainer>\n        );\n    }\n}\n\nCalendar.propTypes = {\n    date: PropTypes.instanceOf(Date),\n    onDateChanged: PropTypes.func,\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}