{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../generated/utils.js\");\n\nconst {\n  HTML_NS\n} = require(\"../helpers/namespaces\");\n\nexports.implementation = class HTMLCollectionImpl {\n  constructor(args, privateData) {\n    this._list = [];\n    this._version = -1;\n    this._element = privateData.element;\n    this._query = privateData.query;\n\n    this._update();\n  }\n\n  get length() {\n    this._update();\n\n    return this._list.length;\n  }\n\n  item(index) {\n    this._update();\n\n    return this._list[index] || null;\n  }\n\n  namedItem(key) {\n    if (key === \"\") {\n      return null;\n    }\n\n    this._update();\n\n    for (const element of this._list) {\n      if (element.getAttribute(\"id\") === key) {\n        return element;\n      }\n\n      if (element._namespaceURI === HTML_NS) {\n        const name = element.getAttribute(\"name\");\n\n        if (name === key) {\n          return element;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  _update() {\n    if (this._version < this._element._version) {\n      const snapshot = this._query();\n\n      for (let i = 0; i < snapshot.length; i++) {\n        this._list[i] = snapshot[i];\n      }\n\n      this._list.length = snapshot.length;\n      this._version = this._element._version;\n    }\n  }\n\n  get [idlUtils.supportedPropertyIndices]() {\n    this._update();\n\n    return this._list.keys();\n  }\n\n  get [idlUtils.supportedPropertyNames]() {\n    this._update();\n\n    const result = new Set();\n\n    for (const element of this._list) {\n      const id = element.getAttribute(\"id\");\n\n      if (id) {\n        result.add(id);\n      }\n\n      if (element._namespaceURI === HTML_NS) {\n        const name = element.getAttribute(\"name\");\n\n        if (name) {\n          result.add(name);\n        }\n      }\n    }\n\n    return result;\n  } // Inherit some useful functions from Array.\n\n\n  [Symbol.iterator]() {\n    this._update();\n\n    return this._list[Symbol.iterator]();\n  }\n\n  entries() {\n    this._update();\n\n    return this._list.entries();\n  }\n\n  filter(...args) {\n    this._update();\n\n    return this._list.filter(...args);\n  }\n\n  map(...args) {\n    this._update();\n\n    return this._list.map(...args);\n  }\n\n  indexOf(...args) {\n    this._update();\n\n    return this._list.indexOf(...args);\n  }\n\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLCollection-impl.js"],"names":["idlUtils","require","HTML_NS","exports","implementation","HTMLCollectionImpl","constructor","args","privateData","_list","_version","_element","element","_query","query","_update","length","item","index","namedItem","key","getAttribute","_namespaceURI","name","snapshot","i","supportedPropertyIndices","keys","supportedPropertyNames","result","Set","id","add","Symbol","iterator","entries","filter","map","indexOf"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,uBAAD,CAAxB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcD,OAAO,CAAC,uBAAD,CAA3B;;AAEAE,OAAO,CAACC,cAAR,GAAyB,MAAMC,kBAAN,CAAyB;AAChDC,EAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,EAAoB;AAC7B,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,QAAL,GAAgB,CAAC,CAAjB;AACA,SAAKC,QAAL,GAAgBH,WAAW,CAACI,OAA5B;AACA,SAAKC,MAAL,GAAcL,WAAW,CAACM,KAA1B;;AACA,SAAKC,OAAL;AACD;;AACD,MAAIC,MAAJ,GAAa;AACX,SAAKD,OAAL;;AACA,WAAO,KAAKN,KAAL,CAAWO,MAAlB;AACD;;AACDC,EAAAA,IAAI,CAACC,KAAD,EAAQ;AACV,SAAKH,OAAL;;AACA,WAAO,KAAKN,KAAL,CAAWS,KAAX,KAAqB,IAA5B;AACD;;AACDC,EAAAA,SAAS,CAACC,GAAD,EAAM;AACb,QAAIA,GAAG,KAAK,EAAZ,EAAgB;AACd,aAAO,IAAP;AACD;;AACD,SAAKL,OAAL;;AACA,SAAK,MAAMH,OAAX,IAAsB,KAAKH,KAA3B,EAAkC;AAChC,UAAIG,OAAO,CAACS,YAAR,CAAqB,IAArB,MAA+BD,GAAnC,EAAwC;AACtC,eAAOR,OAAP;AACD;;AACD,UAAIA,OAAO,CAACU,aAAR,KAA0BpB,OAA9B,EAAuC;AACrC,cAAMqB,IAAI,GAAGX,OAAO,CAACS,YAAR,CAAqB,MAArB,CAAb;;AACA,YAAIE,IAAI,KAAKH,GAAb,EAAkB;AAChB,iBAAOR,OAAP;AACD;AACF;AACF;;AACD,WAAO,IAAP;AACD;;AACDG,EAAAA,OAAO,GAAG;AACR,QAAI,KAAKL,QAAL,GAAgB,KAAKC,QAAL,CAAcD,QAAlC,EAA4C;AAC1C,YAAMc,QAAQ,GAAG,KAAKX,MAAL,EAAjB;;AACA,WAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACR,MAA7B,EAAqCS,CAAC,EAAtC,EAA0C;AACxC,aAAKhB,KAAL,CAAWgB,CAAX,IAAgBD,QAAQ,CAACC,CAAD,CAAxB;AACD;;AACD,WAAKhB,KAAL,CAAWO,MAAX,GAAoBQ,QAAQ,CAACR,MAA7B;AACA,WAAKN,QAAL,GAAgB,KAAKC,QAAL,CAAcD,QAA9B;AACD;AACF;;AACD,OAAKV,QAAQ,CAAC0B,wBAAd,IAA0C;AACxC,SAAKX,OAAL;;AACA,WAAO,KAAKN,KAAL,CAAWkB,IAAX,EAAP;AACD;;AACD,OAAK3B,QAAQ,CAAC4B,sBAAd,IAAwC;AACtC,SAAKb,OAAL;;AACA,UAAMc,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AACA,SAAK,MAAMlB,OAAX,IAAsB,KAAKH,KAA3B,EAAkC;AAChC,YAAMsB,EAAE,GAAGnB,OAAO,CAACS,YAAR,CAAqB,IAArB,CAAX;;AACA,UAAIU,EAAJ,EAAQ;AACNF,QAAAA,MAAM,CAACG,GAAP,CAAWD,EAAX;AACD;;AACD,UAAInB,OAAO,CAACU,aAAR,KAA0BpB,OAA9B,EAAuC;AACrC,cAAMqB,IAAI,GAAGX,OAAO,CAACS,YAAR,CAAqB,MAArB,CAAb;;AACA,YAAIE,IAAJ,EAAU;AACRM,UAAAA,MAAM,CAACG,GAAP,CAAWT,IAAX;AACD;AACF;AACF;;AACD,WAAOM,MAAP;AACD,GAhE+C,CAkEhD;;;AACA,GAACI,MAAM,CAACC,QAAR,IAAoB;AAClB,SAAKnB,OAAL;;AACA,WAAO,KAAKN,KAAL,CAAWwB,MAAM,CAACC,QAAlB,GAAP;AACD;;AACDC,EAAAA,OAAO,GAAG;AACR,SAAKpB,OAAL;;AACA,WAAO,KAAKN,KAAL,CAAW0B,OAAX,EAAP;AACD;;AACDC,EAAAA,MAAM,CAAC,GAAG7B,IAAJ,EAAU;AACd,SAAKQ,OAAL;;AACA,WAAO,KAAKN,KAAL,CAAW2B,MAAX,CAAkB,GAAG7B,IAArB,CAAP;AACD;;AACD8B,EAAAA,GAAG,CAAC,GAAG9B,IAAJ,EAAU;AACX,SAAKQ,OAAL;;AACA,WAAO,KAAKN,KAAL,CAAW4B,GAAX,CAAe,GAAG9B,IAAlB,CAAP;AACD;;AACD+B,EAAAA,OAAO,CAAC,GAAG/B,IAAJ,EAAU;AACf,SAAKQ,OAAL;;AACA,WAAO,KAAKN,KAAL,CAAW6B,OAAX,CAAmB,GAAG/B,IAAtB,CAAP;AACD;;AAtF+C,CAAlD","sourcesContent":["\"use strict\";\n\nconst idlUtils = require(\"../generated/utils.js\");\nconst { HTML_NS } = require(\"../helpers/namespaces\");\n\nexports.implementation = class HTMLCollectionImpl {\n  constructor(args, privateData) {\n    this._list = [];\n    this._version = -1;\n    this._element = privateData.element;\n    this._query = privateData.query;\n    this._update();\n  }\n  get length() {\n    this._update();\n    return this._list.length;\n  }\n  item(index) {\n    this._update();\n    return this._list[index] || null;\n  }\n  namedItem(key) {\n    if (key === \"\") {\n      return null;\n    }\n    this._update();\n    for (const element of this._list) {\n      if (element.getAttribute(\"id\") === key) {\n        return element;\n      }\n      if (element._namespaceURI === HTML_NS) {\n        const name = element.getAttribute(\"name\");\n        if (name === key) {\n          return element;\n        }\n      }\n    }\n    return null;\n  }\n  _update() {\n    if (this._version < this._element._version) {\n      const snapshot = this._query();\n      for (let i = 0; i < snapshot.length; i++) {\n        this._list[i] = snapshot[i];\n      }\n      this._list.length = snapshot.length;\n      this._version = this._element._version;\n    }\n  }\n  get [idlUtils.supportedPropertyIndices]() {\n    this._update();\n    return this._list.keys();\n  }\n  get [idlUtils.supportedPropertyNames]() {\n    this._update();\n    const result = new Set();\n    for (const element of this._list) {\n      const id = element.getAttribute(\"id\");\n      if (id) {\n        result.add(id);\n      }\n      if (element._namespaceURI === HTML_NS) {\n        const name = element.getAttribute(\"name\");\n        if (name) {\n          result.add(name);\n        }\n      }\n    }\n    return result;\n  }\n\n  // Inherit some useful functions from Array.\n  [Symbol.iterator]() {\n    this._update();\n    return this._list[Symbol.iterator]();\n  }\n  entries() {\n    this._update();\n    return this._list.entries();\n  }\n  filter(...args) {\n    this._update();\n    return this._list.filter(...args);\n  }\n  map(...args) {\n    this._update();\n    return this._list.map(...args);\n  }\n  indexOf(...args) {\n    this._update();\n    return this._list.indexOf(...args);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}