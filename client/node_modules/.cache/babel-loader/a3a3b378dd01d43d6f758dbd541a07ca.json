{"ast":null,"code":"\"use strict\";\n\nconst {\n  addNwsapi\n} = require(\"../helpers/selectors\");\n\nconst {\n  HTML_NS\n} = require(\"../helpers/namespaces\");\n\nconst {\n  mixin,\n  memoizeQuery\n} = require(\"../../utils\");\n\nconst idlUtils = require(\"../generated/utils\");\n\nconst NodeImpl = require(\"./Node-impl\").implementation;\n\nconst ParentNodeImpl = require(\"./ParentNode-impl\").implementation;\n\nconst ChildNodeImpl = require(\"./ChildNode-impl\").implementation;\n\nconst attributes = require(\"../attributes\");\n\nconst namedPropertiesWindow = require(\"../named-properties-window\");\n\nconst NODE_TYPE = require(\"../node-type\");\n\nconst {\n  domToHtml\n} = require(\"../../browser/domtohtml\");\n\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\n\nconst DOMException = require(\"domexception\");\n\nconst DOMTokenList = require(\"../generated/DOMTokenList\");\n\nconst attrGenerated = require(\"../generated/Attr\");\n\nconst NamedNodeMap = require(\"../generated/NamedNodeMap\");\n\nconst validateNames = require(\"../helpers/validate-names\");\n\nconst {\n  asciiLowercase\n} = require(\"../helpers/strings\");\n\nconst {\n  clone,\n  listOfElementsWithQualifiedName,\n  listOfElementsWithNamespaceAndLocalName,\n  listOfElementsWithClassNames\n} = require(\"../node\");\n\nconst NonDocumentTypeChildNode = require(\"./NonDocumentTypeChildNode-impl\").implementation;\n\nfunction clearChildNodes(node) {\n  for (let child = domSymbolTree.firstChild(node); child; child = domSymbolTree.firstChild(node)) {\n    node.removeChild(child);\n  }\n}\n\nfunction setInnerHTML(document, node, html) {\n  // Clear the children first:\n  if (node._templateContents) {\n    clearChildNodes(node._templateContents);\n  } else {\n    clearChildNodes(node);\n  }\n\n  if (node.nodeName === \"#document\") {\n    document._htmlToDom.appendToDocument(html, node);\n  } else {\n    document._htmlToDom.appendToNode(html, node);\n  }\n}\n\nfunction attachId(id, elm, doc) {\n  if (id && elm && doc) {\n    if (!doc._ids[id]) {\n      doc._ids[id] = [];\n    }\n\n    doc._ids[id].push(elm);\n  }\n}\n\nfunction detachId(id, elm, doc) {\n  if (id && elm && doc) {\n    if (doc._ids && doc._ids[id]) {\n      const elms = doc._ids[id];\n\n      for (let i = 0; i < elms.length; i++) {\n        if (elms[i] === elm) {\n          elms.splice(i, 1);\n          --i;\n        }\n      }\n\n      if (elms.length === 0) {\n        delete doc._ids[id];\n      }\n    }\n  }\n}\n\nclass ElementImpl extends NodeImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this.nodeType = NODE_TYPE.ELEMENT_NODE;\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this._namespaceURI = privateData.namespace || null;\n    this._prefix = null;\n    this._localName = privateData.localName;\n    this._attributeList = []; // Used for caching.\n\n    this._attributesByNameMap = new Map();\n    this._attributes = NamedNodeMap.createImpl([], {\n      element: this\n    });\n  }\n\n  _attach() {\n    namedPropertiesWindow.nodeAttachedToDocument(this);\n    const id = this.getAttribute(\"id\");\n\n    if (id) {\n      attachId(id, this, this._ownerDocument);\n    }\n\n    super._attach();\n  }\n\n  _detach() {\n    super._detach();\n\n    namedPropertiesWindow.nodeDetachedFromDocument(this);\n    const id = this.getAttribute(\"id\");\n\n    if (id) {\n      detachId(id, this, this._ownerDocument);\n    }\n  }\n\n  _attrModified(name, value, oldValue) {\n    this._modified();\n\n    namedPropertiesWindow.elementAttributeModified(this, name, value, oldValue);\n\n    if (name === \"id\" && this._attached) {\n      const doc = this._ownerDocument;\n      detachId(oldValue, this, doc);\n      attachId(value, this, doc);\n    } // update classList\n\n\n    if (name === \"class\" && this._classList !== undefined) {\n      this._classList.attrModified();\n    }\n  }\n\n  get namespaceURI() {\n    return this._namespaceURI;\n  }\n\n  get prefix() {\n    return this._prefix;\n  }\n\n  get localName() {\n    return this._localName;\n  }\n\n  get _qualifiedName() {\n    return this._prefix !== null ? this._prefix + \":\" + this._localName : this._localName;\n  }\n\n  get tagName() {\n    let qualifiedName = this._qualifiedName;\n\n    if (this.namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n      qualifiedName = qualifiedName.toUpperCase();\n    }\n\n    return qualifiedName;\n  }\n\n  get attributes() {\n    return this._attributes;\n  }\n\n  get outerHTML() {\n    return domToHtml([this]);\n  }\n\n  set outerHTML(html) {\n    if (html === null) {\n      html = \"\";\n    }\n\n    const parent = domSymbolTree.parent(this);\n    const document = this._ownerDocument;\n\n    if (!parent) {\n      return;\n    }\n\n    let contextElement;\n\n    if (parent.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n      throw new DOMException(\"Modifications are not allowed for this document\", \"NoModificationAllowedError\");\n    } else if (parent.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE) {\n      contextElement = document.createElementNS(HTML_NS, \"body\");\n    } else if (parent.nodeType === NODE_TYPE.ELEMENT_NODE) {\n      contextElement = clone(parent, undefined, false);\n    } else {\n      throw new TypeError(\"This should never happen\");\n    }\n\n    document._htmlToDom.appendToNode(html, contextElement);\n\n    while (contextElement.firstChild) {\n      parent.insertBefore(contextElement.firstChild, this);\n    }\n\n    parent.removeChild(this);\n  }\n\n  get innerHTML() {\n    // TODO is this necessary? I would have thought this would be handled at a different level.\n    const {\n      tagName\n    } = this;\n\n    if (tagName === \"SCRIPT\" || tagName === \"STYLE\") {\n      const type = this.getAttribute(\"type\");\n\n      if (!type || /^text\\//i.test(type) || /\\/javascript$/i.test(type)) {\n        return domToHtml(domSymbolTree.childrenIterator(this));\n      }\n    } // In case of <template> we should pass its \"template contents\" fragment as a serialization root if we have one\n\n\n    if (this._templateContents) {\n      return domToHtml(domSymbolTree.childrenIterator(this._templateContents));\n    }\n\n    return domToHtml(domSymbolTree.childrenIterator(this));\n  }\n\n  set innerHTML(html) {\n    if (html === null) {\n      html = \"\";\n    }\n\n    setInnerHTML(this.ownerDocument, this, html);\n  }\n\n  get classList() {\n    if (this._classList === undefined) {\n      this._classList = DOMTokenList.createImpl([], {\n        element: this,\n        attributeLocalName: \"class\"\n      });\n    }\n\n    return this._classList;\n  }\n\n  hasAttributes() {\n    return attributes.hasAttributes(this);\n  }\n\n  getAttributeNames() {\n    return attributes.attributeNames(this);\n  }\n\n  getAttribute(name) {\n    const attr = attributes.getAttributeByName(this, name);\n\n    if (!attr) {\n      return null;\n    }\n\n    return attr._value;\n  }\n\n  getAttributeNS(namespace, localName) {\n    const attr = attributes.getAttributeByNameNS(this, namespace, localName);\n\n    if (!attr) {\n      return null;\n    }\n\n    return attr._value;\n  }\n\n  setAttribute(name, value) {\n    validateNames.name(name);\n\n    if (this._namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n      name = asciiLowercase(name);\n    }\n\n    const attribute = attributes.getAttributeByName(this, name);\n\n    if (attribute === null) {\n      const newAttr = attrGenerated.createImpl([], {\n        localName: name,\n        value\n      });\n      attributes.appendAttribute(this, newAttr);\n      return;\n    }\n\n    attributes.changeAttribute(this, attribute, value);\n  }\n\n  setAttributeNS(namespace, name, value) {\n    const extracted = validateNames.validateAndExtract(namespace, name);\n    attributes.setAttributeValue(this, extracted.localName, value, extracted.prefix, extracted.namespace);\n  }\n\n  removeAttribute(name) {\n    attributes.removeAttributeByName(this, name);\n  }\n\n  removeAttributeNS(namespace, localName) {\n    attributes.removeAttributeByNameNS(this, namespace, localName);\n  }\n\n  hasAttribute(name) {\n    if (this._namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n      name = asciiLowercase(name);\n    }\n\n    return attributes.hasAttributeByName(this, name);\n  }\n\n  hasAttributeNS(namespace, localName) {\n    if (namespace === \"\") {\n      namespace = null;\n    }\n\n    return attributes.hasAttributeByNameNS(this, namespace, localName);\n  }\n\n  getAttributeNode(name) {\n    return attributes.getAttributeByName(this, name);\n  }\n\n  getAttributeNodeNS(namespace, localName) {\n    return attributes.getAttributeByNameNS(this, namespace, localName);\n  }\n\n  setAttributeNode(attr) {\n    return attributes.setAttribute(this, attr);\n  }\n\n  setAttributeNodeNS(attr) {\n    return attributes.setAttribute(this, attr);\n  }\n\n  removeAttributeNode(attr) {\n    if (!attributes.hasAttribute(this, attr)) {\n      throw new DOMException(\"Tried to remove an attribute that was not present\", \"NotFoundError\");\n    }\n\n    attributes.removeAttribute(this, attr);\n    return attr;\n  }\n\n  getBoundingClientRect() {\n    return {\n      bottom: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 0\n    };\n  }\n\n  getClientRects() {\n    return [];\n  }\n\n  get scrollWidth() {\n    return 0;\n  }\n\n  get scrollHeight() {\n    return 0;\n  }\n\n  get clientTop() {\n    return 0;\n  }\n\n  get clientLeft() {\n    return 0;\n  }\n\n  get clientWidth() {\n    return 0;\n  }\n\n  get clientHeight() {\n    return 0;\n  } // https://w3c.github.io/DOM-Parsing/#dom-element-insertadjacenthtml\n\n\n  insertAdjacentHTML(position, text) {\n    position = position.toLowerCase();\n    let context;\n\n    switch (position) {\n      case \"beforebegin\":\n      case \"afterend\":\n        {\n          context = this.parentNode;\n\n          if (context === null || context.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n            throw new DOMException(\"Cannot insert HTML adjacent to \" + \"parent-less nodes or children of document nodes.\", \"NoModificationAllowedError\");\n          }\n\n          break;\n        }\n\n      case \"afterbegin\":\n      case \"beforeend\":\n        {\n          context = this;\n          break;\n        }\n\n      default:\n        {\n          throw new DOMException(\"Must provide one of \\\"beforebegin\\\", \\\"afterend\\\", \" + \"\\\"afterbegin\\\", or \\\"beforeend\\\".\", \"SyntaxError\");\n        }\n    } // TODO: use context for parsing instead of a <template>.\n\n\n    const fragment = this.ownerDocument.createElement(\"template\");\n    fragment.innerHTML = text;\n\n    switch (position) {\n      case \"beforebegin\":\n        {\n          this.parentNode.insertBefore(fragment.content, this);\n          break;\n        }\n\n      case \"afterbegin\":\n        {\n          this.insertBefore(fragment.content, this.firstChild);\n          break;\n        }\n\n      case \"beforeend\":\n        {\n          this.appendChild(fragment.content);\n          break;\n        }\n\n      case \"afterend\":\n        {\n          this.parentNode.insertBefore(fragment.content, this.nextSibling);\n          break;\n        }\n    }\n  }\n\n  closest(selectors) {\n    const matcher = addNwsapi(this);\n    return matcher.closest(selectors, idlUtils.wrapperForImpl(this));\n  }\n\n}\n\nmixin(ElementImpl.prototype, NonDocumentTypeChildNode.prototype);\nmixin(ElementImpl.prototype, ParentNodeImpl.prototype);\nmixin(ElementImpl.prototype, ChildNodeImpl.prototype);\nElementImpl.prototype.getElementsByTagName = memoizeQuery(function (qualifiedName) {\n  return listOfElementsWithQualifiedName(qualifiedName, this);\n});\nElementImpl.prototype.getElementsByTagNameNS = memoizeQuery(function (namespace, localName) {\n  return listOfElementsWithNamespaceAndLocalName(namespace, localName, this);\n});\nElementImpl.prototype.getElementsByClassName = memoizeQuery(function (classNames) {\n  return listOfElementsWithClassNames(classNames, this);\n});\nElementImpl.prototype.matches = memoizeQuery(function (selectors) {\n  const matcher = addNwsapi(this);\n  return matcher.match(selectors, idlUtils.wrapperForImpl(this));\n});\nElementImpl.prototype.webkitMatchesSelector = ElementImpl.prototype.matches;\nmodule.exports = {\n  implementation: ElementImpl\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/Element-impl.js"],"names":["addNwsapi","require","HTML_NS","mixin","memoizeQuery","idlUtils","NodeImpl","implementation","ParentNodeImpl","ChildNodeImpl","attributes","namedPropertiesWindow","NODE_TYPE","domToHtml","domSymbolTree","DOMException","DOMTokenList","attrGenerated","NamedNodeMap","validateNames","asciiLowercase","clone","listOfElementsWithQualifiedName","listOfElementsWithNamespaceAndLocalName","listOfElementsWithClassNames","NonDocumentTypeChildNode","clearChildNodes","node","child","firstChild","removeChild","setInnerHTML","document","html","_templateContents","nodeName","_htmlToDom","appendToDocument","appendToNode","attachId","id","elm","doc","_ids","push","detachId","elms","i","length","splice","ElementImpl","constructor","args","privateData","nodeType","ELEMENT_NODE","scrollTop","scrollLeft","_namespaceURI","namespace","_prefix","_localName","localName","_attributeList","_attributesByNameMap","Map","_attributes","createImpl","element","_attach","nodeAttachedToDocument","getAttribute","_ownerDocument","_detach","nodeDetachedFromDocument","_attrModified","name","value","oldValue","_modified","elementAttributeModified","_attached","_classList","undefined","attrModified","namespaceURI","prefix","_qualifiedName","tagName","qualifiedName","_parsingMode","toUpperCase","outerHTML","parent","contextElement","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","createElementNS","TypeError","insertBefore","innerHTML","type","test","childrenIterator","ownerDocument","classList","attributeLocalName","hasAttributes","getAttributeNames","attributeNames","attr","getAttributeByName","_value","getAttributeNS","getAttributeByNameNS","setAttribute","attribute","newAttr","appendAttribute","changeAttribute","setAttributeNS","extracted","validateAndExtract","setAttributeValue","removeAttribute","removeAttributeByName","removeAttributeNS","removeAttributeByNameNS","hasAttribute","hasAttributeByName","hasAttributeNS","hasAttributeByNameNS","getAttributeNode","getAttributeNodeNS","setAttributeNode","setAttributeNodeNS","removeAttributeNode","getBoundingClientRect","bottom","height","left","right","top","width","getClientRects","scrollWidth","scrollHeight","clientTop","clientLeft","clientWidth","clientHeight","insertAdjacentHTML","position","text","toLowerCase","context","parentNode","fragment","createElement","content","appendChild","nextSibling","closest","selectors","matcher","wrapperForImpl","prototype","getElementsByTagName","getElementsByTagNameNS","getElementsByClassName","classNames","matches","match","webkitMatchesSelector","module","exports"],"mappings":"AAAA;;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,sBAAD,CAA7B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcD,OAAO,CAAC,uBAAD,CAA3B;;AACA,MAAM;AAAEE,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAA0BH,OAAO,CAAC,aAAD,CAAvC;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMK,QAAQ,GAAGL,OAAO,CAAC,aAAD,CAAP,CAAuBM,cAAxC;;AACA,MAAMC,cAAc,GAAGP,OAAO,CAAC,mBAAD,CAAP,CAA6BM,cAApD;;AACA,MAAME,aAAa,GAAGR,OAAO,CAAC,kBAAD,CAAP,CAA4BM,cAAlD;;AACA,MAAMG,UAAU,GAAGT,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMU,qBAAqB,GAAGV,OAAO,CAAC,4BAAD,CAArC;;AACA,MAAMW,SAAS,GAAGX,OAAO,CAAC,cAAD,CAAzB;;AACA,MAAM;AAAEY,EAAAA;AAAF,IAAgBZ,OAAO,CAAC,yBAAD,CAA7B;;AACA,MAAM;AAAEa,EAAAA;AAAF,IAAoBb,OAAO,CAAC,+BAAD,CAAjC;;AACA,MAAMc,YAAY,GAAGd,OAAO,CAAC,cAAD,CAA5B;;AACA,MAAMe,YAAY,GAAGf,OAAO,CAAC,2BAAD,CAA5B;;AACA,MAAMgB,aAAa,GAAGhB,OAAO,CAAC,mBAAD,CAA7B;;AACA,MAAMiB,YAAY,GAAGjB,OAAO,CAAC,2BAAD,CAA5B;;AACA,MAAMkB,aAAa,GAAGlB,OAAO,CAAC,2BAAD,CAA7B;;AACA,MAAM;AAAEmB,EAAAA;AAAF,IAAqBnB,OAAO,CAAC,oBAAD,CAAlC;;AACA,MAAM;AAAEoB,EAAAA,KAAF;AAASC,EAAAA,+BAAT;AAA0CC,EAAAA,uCAA1C;AACJC,EAAAA;AADI,IAC6BvB,OAAO,CAAC,SAAD,CAD1C;;AAEA,MAAMwB,wBAAwB,GAAGxB,OAAO,CAAC,iCAAD,CAAP,CAA2CM,cAA5E;;AAEA,SAASmB,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,OAAK,IAAIC,KAAK,GAAGd,aAAa,CAACe,UAAd,CAAyBF,IAAzB,CAAjB,EAAiDC,KAAjD,EAAwDA,KAAK,GAAGd,aAAa,CAACe,UAAd,CAAyBF,IAAzB,CAAhE,EAAgG;AAC9FA,IAAAA,IAAI,CAACG,WAAL,CAAiBF,KAAjB;AACD;AACF;;AAED,SAASG,YAAT,CAAsBC,QAAtB,EAAgCL,IAAhC,EAAsCM,IAAtC,EAA4C;AAC1C;AACA,MAAIN,IAAI,CAACO,iBAAT,EAA4B;AAC1BR,IAAAA,eAAe,CAACC,IAAI,CAACO,iBAAN,CAAf;AACD,GAFD,MAEO;AACLR,IAAAA,eAAe,CAACC,IAAD,CAAf;AACD;;AAED,MAAIA,IAAI,CAACQ,QAAL,KAAkB,WAAtB,EAAmC;AACjCH,IAAAA,QAAQ,CAACI,UAAT,CAAoBC,gBAApB,CAAqCJ,IAArC,EAA2CN,IAA3C;AACD,GAFD,MAEO;AACLK,IAAAA,QAAQ,CAACI,UAAT,CAAoBE,YAApB,CAAiCL,IAAjC,EAAuCN,IAAvC;AACD;AACF;;AAED,SAASY,QAAT,CAAkBC,EAAlB,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAIF,EAAE,IAAIC,GAAN,IAAaC,GAAjB,EAAsB;AACpB,QAAI,CAACA,GAAG,CAACC,IAAJ,CAASH,EAAT,CAAL,EAAmB;AACjBE,MAAAA,GAAG,CAACC,IAAJ,CAASH,EAAT,IAAe,EAAf;AACD;;AACDE,IAAAA,GAAG,CAACC,IAAJ,CAASH,EAAT,EAAaI,IAAb,CAAkBH,GAAlB;AACD;AACF;;AAED,SAASI,QAAT,CAAkBL,EAAlB,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAIF,EAAE,IAAIC,GAAN,IAAaC,GAAjB,EAAsB;AACpB,QAAIA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASH,EAAT,CAAhB,EAA8B;AAC5B,YAAMM,IAAI,GAAGJ,GAAG,CAACC,IAAJ,CAASH,EAAT,CAAb;;AACA,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAID,IAAI,CAACC,CAAD,CAAJ,KAAYN,GAAhB,EAAqB;AACnBK,UAAAA,IAAI,CAACG,MAAL,CAAYF,CAAZ,EAAe,CAAf;AACA,YAAEA,CAAF;AACD;AACF;;AACD,UAAID,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AACrB,eAAON,GAAG,CAACC,IAAJ,CAASH,EAAT,CAAP;AACD;AACF;AACF;AACF;;AAED,MAAMU,WAAN,SAA0B5C,QAA1B,CAAmC;AACjC6C,EAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,EAAoB;AAC7B,UAAMD,IAAN,EAAYC,WAAZ;AAEA,SAAKC,QAAL,GAAgB1C,SAAS,CAAC2C,YAA1B;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AAEA,SAAKC,aAAL,GAAqBL,WAAW,CAACM,SAAZ,IAAyB,IAA9C;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,UAAL,GAAkBR,WAAW,CAACS,SAA9B;AAEA,SAAKC,cAAL,GAAsB,EAAtB,CAX6B,CAY7B;;AACA,SAAKC,oBAAL,GAA4B,IAAIC,GAAJ,EAA5B;AACA,SAAKC,WAAL,GAAmBhD,YAAY,CAACiD,UAAb,CAAwB,EAAxB,EAA4B;AAC7CC,MAAAA,OAAO,EAAE;AADoC,KAA5B,CAAnB;AAGD;;AAEDC,EAAAA,OAAO,GAAG;AACR1D,IAAAA,qBAAqB,CAAC2D,sBAAtB,CAA6C,IAA7C;AAEA,UAAM9B,EAAE,GAAG,KAAK+B,YAAL,CAAkB,IAAlB,CAAX;;AACA,QAAI/B,EAAJ,EAAQ;AACND,MAAAA,QAAQ,CAACC,EAAD,EAAK,IAAL,EAAW,KAAKgC,cAAhB,CAAR;AACD;;AAED,UAAMH,OAAN;AACD;;AAEDI,EAAAA,OAAO,GAAG;AACR,UAAMA,OAAN;;AAEA9D,IAAAA,qBAAqB,CAAC+D,wBAAtB,CAA+C,IAA/C;AAEA,UAAMlC,EAAE,GAAG,KAAK+B,YAAL,CAAkB,IAAlB,CAAX;;AACA,QAAI/B,EAAJ,EAAQ;AACNK,MAAAA,QAAQ,CAACL,EAAD,EAAK,IAAL,EAAW,KAAKgC,cAAhB,CAAR;AACD;AACF;;AAEDG,EAAAA,aAAa,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAwB;AACnC,SAAKC,SAAL;;AACApE,IAAAA,qBAAqB,CAACqE,wBAAtB,CAA+C,IAA/C,EAAqDJ,IAArD,EAA2DC,KAA3D,EAAkEC,QAAlE;;AAEA,QAAIF,IAAI,KAAK,IAAT,IAAiB,KAAKK,SAA1B,EAAqC;AACnC,YAAMvC,GAAG,GAAG,KAAK8B,cAAjB;AACA3B,MAAAA,QAAQ,CAACiC,QAAD,EAAW,IAAX,EAAiBpC,GAAjB,CAAR;AACAH,MAAAA,QAAQ,CAACsC,KAAD,EAAQ,IAAR,EAAcnC,GAAd,CAAR;AACD,KARkC,CAUnC;;;AACA,QAAIkC,IAAI,KAAK,OAAT,IAAoB,KAAKM,UAAL,KAAoBC,SAA5C,EAAuD;AACrD,WAAKD,UAAL,CAAgBE,YAAhB;AACD;AACF;;AAED,MAAIC,YAAJ,GAAmB;AACjB,WAAO,KAAK3B,aAAZ;AACD;;AACD,MAAI4B,MAAJ,GAAa;AACX,WAAO,KAAK1B,OAAZ;AACD;;AACD,MAAIE,SAAJ,GAAgB;AACd,WAAO,KAAKD,UAAZ;AACD;;AACD,MAAI0B,cAAJ,GAAqB;AACnB,WAAO,KAAK3B,OAAL,KAAiB,IAAjB,GAAwB,KAAKA,OAAL,GAAe,GAAf,GAAqB,KAAKC,UAAlD,GAA+D,KAAKA,UAA3E;AACD;;AACD,MAAI2B,OAAJ,GAAc;AACZ,QAAIC,aAAa,GAAG,KAAKF,cAAzB;;AACA,QAAI,KAAKF,YAAL,KAAsBnF,OAAtB,IAAiC,KAAKsE,cAAL,CAAoBkB,YAApB,KAAqC,MAA1E,EAAkF;AAChFD,MAAAA,aAAa,GAAGA,aAAa,CAACE,WAAd,EAAhB;AACD;;AACD,WAAOF,aAAP;AACD;;AAED,MAAI/E,UAAJ,GAAiB;AACf,WAAO,KAAKwD,WAAZ;AACD;;AAED,MAAI0B,SAAJ,GAAgB;AACd,WAAO/E,SAAS,CAAC,CAAC,IAAD,CAAD,CAAhB;AACD;;AAED,MAAI+E,SAAJ,CAAc3D,IAAd,EAAoB;AAClB,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAED,UAAM4D,MAAM,GAAG/E,aAAa,CAAC+E,MAAd,CAAqB,IAArB,CAAf;AACA,UAAM7D,QAAQ,GAAG,KAAKwC,cAAtB;;AAEA,QAAI,CAACqB,MAAL,EAAa;AACX;AACD;;AAED,QAAIC,cAAJ;;AACA,QAAID,MAAM,CAACvC,QAAP,KAAoB1C,SAAS,CAACmF,aAAlC,EAAiD;AAC/C,YAAM,IAAIhF,YAAJ,CAAiB,iDAAjB,EAAoE,4BAApE,CAAN;AACD,KAFD,MAEO,IAAI8E,MAAM,CAACvC,QAAP,KAAoB1C,SAAS,CAACoF,sBAAlC,EAA0D;AAC/DF,MAAAA,cAAc,GAAG9D,QAAQ,CAACiE,eAAT,CAAyB/F,OAAzB,EAAkC,MAAlC,CAAjB;AACD,KAFM,MAEA,IAAI2F,MAAM,CAACvC,QAAP,KAAoB1C,SAAS,CAAC2C,YAAlC,EAAgD;AACrDuC,MAAAA,cAAc,GAAGzE,KAAK,CAACwE,MAAD,EAASV,SAAT,EAAoB,KAApB,CAAtB;AACD,KAFM,MAEA;AACL,YAAM,IAAIe,SAAJ,CAAc,0BAAd,CAAN;AACD;;AAEDlE,IAAAA,QAAQ,CAACI,UAAT,CAAoBE,YAApB,CAAiCL,IAAjC,EAAuC6D,cAAvC;;AAEA,WAAOA,cAAc,CAACjE,UAAtB,EAAkC;AAChCgE,MAAAA,MAAM,CAACM,YAAP,CAAoBL,cAAc,CAACjE,UAAnC,EAA+C,IAA/C;AACD;;AAEDgE,IAAAA,MAAM,CAAC/D,WAAP,CAAmB,IAAnB;AACD;;AAED,MAAIsE,SAAJ,GAAgB;AACd;AACA,UAAM;AAAEZ,MAAAA;AAAF,QAAc,IAApB;;AACA,QAAIA,OAAO,KAAK,QAAZ,IAAwBA,OAAO,KAAK,OAAxC,EAAiD;AAC/C,YAAMa,IAAI,GAAG,KAAK9B,YAAL,CAAkB,MAAlB,CAAb;;AACA,UAAI,CAAC8B,IAAD,IAAS,WAAWC,IAAX,CAAgBD,IAAhB,CAAT,IAAkC,iBAAiBC,IAAjB,CAAsBD,IAAtB,CAAtC,EAAmE;AACjE,eAAOxF,SAAS,CAACC,aAAa,CAACyF,gBAAd,CAA+B,IAA/B,CAAD,CAAhB;AACD;AACF,KARa,CAUd;;;AACA,QAAI,KAAKrE,iBAAT,EAA4B;AAC1B,aAAOrB,SAAS,CAACC,aAAa,CAACyF,gBAAd,CAA+B,KAAKrE,iBAApC,CAAD,CAAhB;AACD;;AAED,WAAOrB,SAAS,CAACC,aAAa,CAACyF,gBAAd,CAA+B,IAA/B,CAAD,CAAhB;AACD;;AAED,MAAIH,SAAJ,CAAcnE,IAAd,EAAoB;AAClB,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAEDF,IAAAA,YAAY,CAAC,KAAKyE,aAAN,EAAqB,IAArB,EAA2BvE,IAA3B,CAAZ;AACD;;AAED,MAAIwE,SAAJ,GAAgB;AACd,QAAI,KAAKvB,UAAL,KAAoBC,SAAxB,EAAmC;AACjC,WAAKD,UAAL,GAAkBlE,YAAY,CAACmD,UAAb,CAAwB,EAAxB,EAA4B;AAC5CC,QAAAA,OAAO,EAAE,IADmC;AAE5CsC,QAAAA,kBAAkB,EAAE;AAFwB,OAA5B,CAAlB;AAID;;AACD,WAAO,KAAKxB,UAAZ;AACD;;AAEDyB,EAAAA,aAAa,GAAG;AACd,WAAOjG,UAAU,CAACiG,aAAX,CAAyB,IAAzB,CAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,WAAOlG,UAAU,CAACmG,cAAX,CAA0B,IAA1B,CAAP;AACD;;AAEDtC,EAAAA,YAAY,CAACK,IAAD,EAAO;AACjB,UAAMkC,IAAI,GAAGpG,UAAU,CAACqG,kBAAX,CAA8B,IAA9B,EAAoCnC,IAApC,CAAb;;AACA,QAAI,CAACkC,IAAL,EAAW;AACT,aAAO,IAAP;AACD;;AACD,WAAOA,IAAI,CAACE,MAAZ;AACD;;AAEDC,EAAAA,cAAc,CAACtD,SAAD,EAAYG,SAAZ,EAAuB;AACnC,UAAMgD,IAAI,GAAGpG,UAAU,CAACwG,oBAAX,CAAgC,IAAhC,EAAsCvD,SAAtC,EAAiDG,SAAjD,CAAb;;AACA,QAAI,CAACgD,IAAL,EAAW;AACT,aAAO,IAAP;AACD;;AACD,WAAOA,IAAI,CAACE,MAAZ;AACD;;AAEDG,EAAAA,YAAY,CAACvC,IAAD,EAAOC,KAAP,EAAc;AACxB1D,IAAAA,aAAa,CAACyD,IAAd,CAAmBA,IAAnB;;AAEA,QAAI,KAAKlB,aAAL,KAAuBxD,OAAvB,IAAkC,KAAKsE,cAAL,CAAoBkB,YAApB,KAAqC,MAA3E,EAAmF;AACjFd,MAAAA,IAAI,GAAGxD,cAAc,CAACwD,IAAD,CAArB;AACD;;AAED,UAAMwC,SAAS,GAAG1G,UAAU,CAACqG,kBAAX,CAA8B,IAA9B,EAAoCnC,IAApC,CAAlB;;AAEA,QAAIwC,SAAS,KAAK,IAAlB,EAAwB;AACtB,YAAMC,OAAO,GAAGpG,aAAa,CAACkD,UAAd,CAAyB,EAAzB,EAA6B;AAAEL,QAAAA,SAAS,EAAEc,IAAb;AAAmBC,QAAAA;AAAnB,OAA7B,CAAhB;AACAnE,MAAAA,UAAU,CAAC4G,eAAX,CAA2B,IAA3B,EAAiCD,OAAjC;AACA;AACD;;AAED3G,IAAAA,UAAU,CAAC6G,eAAX,CAA2B,IAA3B,EAAiCH,SAAjC,EAA4CvC,KAA5C;AACD;;AAED2C,EAAAA,cAAc,CAAC7D,SAAD,EAAYiB,IAAZ,EAAkBC,KAAlB,EAAyB;AACrC,UAAM4C,SAAS,GAAGtG,aAAa,CAACuG,kBAAd,CAAiC/D,SAAjC,EAA4CiB,IAA5C,CAAlB;AAEAlE,IAAAA,UAAU,CAACiH,iBAAX,CAA6B,IAA7B,EAAmCF,SAAS,CAAC3D,SAA7C,EAAwDe,KAAxD,EAA+D4C,SAAS,CAACnC,MAAzE,EAAiFmC,SAAS,CAAC9D,SAA3F;AACD;;AAEDiE,EAAAA,eAAe,CAAChD,IAAD,EAAO;AACpBlE,IAAAA,UAAU,CAACmH,qBAAX,CAAiC,IAAjC,EAAuCjD,IAAvC;AACD;;AAEDkD,EAAAA,iBAAiB,CAACnE,SAAD,EAAYG,SAAZ,EAAuB;AACtCpD,IAAAA,UAAU,CAACqH,uBAAX,CAAmC,IAAnC,EAAyCpE,SAAzC,EAAoDG,SAApD;AACD;;AAEDkE,EAAAA,YAAY,CAACpD,IAAD,EAAO;AACjB,QAAI,KAAKlB,aAAL,KAAuBxD,OAAvB,IAAkC,KAAKsE,cAAL,CAAoBkB,YAApB,KAAqC,MAA3E,EAAmF;AACjFd,MAAAA,IAAI,GAAGxD,cAAc,CAACwD,IAAD,CAArB;AACD;;AAED,WAAOlE,UAAU,CAACuH,kBAAX,CAA8B,IAA9B,EAAoCrD,IAApC,CAAP;AACD;;AAEDsD,EAAAA,cAAc,CAACvE,SAAD,EAAYG,SAAZ,EAAuB;AACnC,QAAIH,SAAS,KAAK,EAAlB,EAAsB;AACpBA,MAAAA,SAAS,GAAG,IAAZ;AACD;;AAED,WAAOjD,UAAU,CAACyH,oBAAX,CAAgC,IAAhC,EAAsCxE,SAAtC,EAAiDG,SAAjD,CAAP;AACD;;AAEDsE,EAAAA,gBAAgB,CAACxD,IAAD,EAAO;AACrB,WAAOlE,UAAU,CAACqG,kBAAX,CAA8B,IAA9B,EAAoCnC,IAApC,CAAP;AACD;;AAEDyD,EAAAA,kBAAkB,CAAC1E,SAAD,EAAYG,SAAZ,EAAuB;AACvC,WAAOpD,UAAU,CAACwG,oBAAX,CAAgC,IAAhC,EAAsCvD,SAAtC,EAAiDG,SAAjD,CAAP;AACD;;AAEDwE,EAAAA,gBAAgB,CAACxB,IAAD,EAAO;AACrB,WAAOpG,UAAU,CAACyG,YAAX,CAAwB,IAAxB,EAA8BL,IAA9B,CAAP;AACD;;AAEDyB,EAAAA,kBAAkB,CAACzB,IAAD,EAAO;AACvB,WAAOpG,UAAU,CAACyG,YAAX,CAAwB,IAAxB,EAA8BL,IAA9B,CAAP;AACD;;AAED0B,EAAAA,mBAAmB,CAAC1B,IAAD,EAAO;AACxB,QAAI,CAACpG,UAAU,CAACsH,YAAX,CAAwB,IAAxB,EAA8BlB,IAA9B,CAAL,EAA0C;AACxC,YAAM,IAAI/F,YAAJ,CAAiB,mDAAjB,EAAsE,eAAtE,CAAN;AACD;;AAEDL,IAAAA,UAAU,CAACkH,eAAX,CAA2B,IAA3B,EAAiCd,IAAjC;AAEA,WAAOA,IAAP;AACD;;AAED2B,EAAAA,qBAAqB,GAAG;AACtB,WAAO;AACLC,MAAAA,MAAM,EAAE,CADH;AAELC,MAAAA,MAAM,EAAE,CAFH;AAGLC,MAAAA,IAAI,EAAE,CAHD;AAILC,MAAAA,KAAK,EAAE,CAJF;AAKLC,MAAAA,GAAG,EAAE,CALA;AAMLC,MAAAA,KAAK,EAAE;AANF,KAAP;AAQD;;AAEDC,EAAAA,cAAc,GAAG;AACf,WAAO,EAAP;AACD;;AAED,MAAIC,WAAJ,GAAkB;AAChB,WAAO,CAAP;AACD;;AAED,MAAIC,YAAJ,GAAmB;AACjB,WAAO,CAAP;AACD;;AAED,MAAIC,SAAJ,GAAgB;AACd,WAAO,CAAP;AACD;;AAED,MAAIC,UAAJ,GAAiB;AACf,WAAO,CAAP;AACD;;AAED,MAAIC,WAAJ,GAAkB;AAChB,WAAO,CAAP;AACD;;AAED,MAAIC,YAAJ,GAAmB;AACjB,WAAO,CAAP;AACD,GAjSgC,CAmSjC;;;AACAC,EAAAA,kBAAkB,CAACC,QAAD,EAAWC,IAAX,EAAiB;AACjCD,IAAAA,QAAQ,GAAGA,QAAQ,CAACE,WAAT,EAAX;AAEA,QAAIC,OAAJ;;AACA,YAAQH,QAAR;AACE,WAAK,aAAL;AACA,WAAK,UAAL;AAAiB;AACfG,UAAAA,OAAO,GAAG,KAAKC,UAAf;;AACA,cAAID,OAAO,KAAK,IAAZ,IAAoBA,OAAO,CAACrG,QAAR,KAAqB1C,SAAS,CAACmF,aAAvD,EAAsE;AACpE,kBAAM,IAAIhF,YAAJ,CAAiB,oCACrB,kDADI,EACgD,4BADhD,CAAN;AAED;;AACD;AACD;;AACD,WAAK,YAAL;AACA,WAAK,WAAL;AAAkB;AAChB4I,UAAAA,OAAO,GAAG,IAAV;AACA;AACD;;AACD;AAAS;AACP,gBAAM,IAAI5I,YAAJ,CAAiB,wDACrB,mCADI,EACiC,aADjC,CAAN;AAED;AAlBH,KAJiC,CAyBjC;;;AACA,UAAM8I,QAAQ,GAAG,KAAKrD,aAAL,CAAmBsD,aAAnB,CAAiC,UAAjC,CAAjB;AACAD,IAAAA,QAAQ,CAACzD,SAAT,GAAqBqD,IAArB;;AAEA,YAAQD,QAAR;AACE,WAAK,aAAL;AAAoB;AAClB,eAAKI,UAAL,CAAgBzD,YAAhB,CAA6B0D,QAAQ,CAACE,OAAtC,EAA+C,IAA/C;AACA;AACD;;AACD,WAAK,YAAL;AAAmB;AACjB,eAAK5D,YAAL,CAAkB0D,QAAQ,CAACE,OAA3B,EAAoC,KAAKlI,UAAzC;AACA;AACD;;AACD,WAAK,WAAL;AAAkB;AAChB,eAAKmI,WAAL,CAAiBH,QAAQ,CAACE,OAA1B;AACA;AACD;;AACD,WAAK,UAAL;AAAiB;AACf,eAAKH,UAAL,CAAgBzD,YAAhB,CAA6B0D,QAAQ,CAACE,OAAtC,EAA+C,KAAKE,WAApD;AACA;AACD;AAhBH;AAkBD;;AAEDC,EAAAA,OAAO,CAACC,SAAD,EAAY;AACjB,UAAMC,OAAO,GAAGpK,SAAS,CAAC,IAAD,CAAzB;AACA,WAAOoK,OAAO,CAACF,OAAR,CAAgBC,SAAhB,EAA2B9J,QAAQ,CAACgK,cAAT,CAAwB,IAAxB,CAA3B,CAAP;AACD;;AAxVgC;;AA2VnClK,KAAK,CAAC+C,WAAW,CAACoH,SAAb,EAAwB7I,wBAAwB,CAAC6I,SAAjD,CAAL;AACAnK,KAAK,CAAC+C,WAAW,CAACoH,SAAb,EAAwB9J,cAAc,CAAC8J,SAAvC,CAAL;AACAnK,KAAK,CAAC+C,WAAW,CAACoH,SAAb,EAAwB7J,aAAa,CAAC6J,SAAtC,CAAL;AAEApH,WAAW,CAACoH,SAAZ,CAAsBC,oBAAtB,GAA6CnK,YAAY,CAAC,UAAUqF,aAAV,EAAyB;AACjF,SAAOnE,+BAA+B,CAACmE,aAAD,EAAgB,IAAhB,CAAtC;AACD,CAFwD,CAAzD;AAIAvC,WAAW,CAACoH,SAAZ,CAAsBE,sBAAtB,GAA+CpK,YAAY,CAAC,UAAUuD,SAAV,EAAqBG,SAArB,EAAgC;AAC1F,SAAOvC,uCAAuC,CAACoC,SAAD,EAAYG,SAAZ,EAAuB,IAAvB,CAA9C;AACD,CAF0D,CAA3D;AAIAZ,WAAW,CAACoH,SAAZ,CAAsBG,sBAAtB,GAA+CrK,YAAY,CAAC,UAAUsK,UAAV,EAAsB;AAChF,SAAOlJ,4BAA4B,CAACkJ,UAAD,EAAa,IAAb,CAAnC;AACD,CAF0D,CAA3D;AAIAxH,WAAW,CAACoH,SAAZ,CAAsBK,OAAtB,GAAgCvK,YAAY,CAAC,UAAU+J,SAAV,EAAqB;AAChE,QAAMC,OAAO,GAAGpK,SAAS,CAAC,IAAD,CAAzB;AAEA,SAAOoK,OAAO,CAACQ,KAAR,CAAcT,SAAd,EAAyB9J,QAAQ,CAACgK,cAAT,CAAwB,IAAxB,CAAzB,CAAP;AACD,CAJ2C,CAA5C;AAMAnH,WAAW,CAACoH,SAAZ,CAAsBO,qBAAtB,GAA8C3H,WAAW,CAACoH,SAAZ,CAAsBK,OAApE;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACfxK,EAAAA,cAAc,EAAE2C;AADD,CAAjB","sourcesContent":["\"use strict\";\nconst { addNwsapi } = require(\"../helpers/selectors\");\nconst { HTML_NS } = require(\"../helpers/namespaces\");\nconst { mixin, memoizeQuery } = require(\"../../utils\");\nconst idlUtils = require(\"../generated/utils\");\nconst NodeImpl = require(\"./Node-impl\").implementation;\nconst ParentNodeImpl = require(\"./ParentNode-impl\").implementation;\nconst ChildNodeImpl = require(\"./ChildNode-impl\").implementation;\nconst attributes = require(\"../attributes\");\nconst namedPropertiesWindow = require(\"../named-properties-window\");\nconst NODE_TYPE = require(\"../node-type\");\nconst { domToHtml } = require(\"../../browser/domtohtml\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst DOMException = require(\"domexception\");\nconst DOMTokenList = require(\"../generated/DOMTokenList\");\nconst attrGenerated = require(\"../generated/Attr\");\nconst NamedNodeMap = require(\"../generated/NamedNodeMap\");\nconst validateNames = require(\"../helpers/validate-names\");\nconst { asciiLowercase } = require(\"../helpers/strings\");\nconst { clone, listOfElementsWithQualifiedName, listOfElementsWithNamespaceAndLocalName,\n  listOfElementsWithClassNames } = require(\"../node\");\nconst NonDocumentTypeChildNode = require(\"./NonDocumentTypeChildNode-impl\").implementation;\n\nfunction clearChildNodes(node) {\n  for (let child = domSymbolTree.firstChild(node); child; child = domSymbolTree.firstChild(node)) {\n    node.removeChild(child);\n  }\n}\n\nfunction setInnerHTML(document, node, html) {\n  // Clear the children first:\n  if (node._templateContents) {\n    clearChildNodes(node._templateContents);\n  } else {\n    clearChildNodes(node);\n  }\n\n  if (node.nodeName === \"#document\") {\n    document._htmlToDom.appendToDocument(html, node);\n  } else {\n    document._htmlToDom.appendToNode(html, node);\n  }\n}\n\nfunction attachId(id, elm, doc) {\n  if (id && elm && doc) {\n    if (!doc._ids[id]) {\n      doc._ids[id] = [];\n    }\n    doc._ids[id].push(elm);\n  }\n}\n\nfunction detachId(id, elm, doc) {\n  if (id && elm && doc) {\n    if (doc._ids && doc._ids[id]) {\n      const elms = doc._ids[id];\n      for (let i = 0; i < elms.length; i++) {\n        if (elms[i] === elm) {\n          elms.splice(i, 1);\n          --i;\n        }\n      }\n      if (elms.length === 0) {\n        delete doc._ids[id];\n      }\n    }\n  }\n}\n\nclass ElementImpl extends NodeImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this.nodeType = NODE_TYPE.ELEMENT_NODE;\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n\n    this._namespaceURI = privateData.namespace || null;\n    this._prefix = null;\n    this._localName = privateData.localName;\n\n    this._attributeList = [];\n    // Used for caching.\n    this._attributesByNameMap = new Map();\n    this._attributes = NamedNodeMap.createImpl([], {\n      element: this\n    });\n  }\n\n  _attach() {\n    namedPropertiesWindow.nodeAttachedToDocument(this);\n\n    const id = this.getAttribute(\"id\");\n    if (id) {\n      attachId(id, this, this._ownerDocument);\n    }\n\n    super._attach();\n  }\n\n  _detach() {\n    super._detach();\n\n    namedPropertiesWindow.nodeDetachedFromDocument(this);\n\n    const id = this.getAttribute(\"id\");\n    if (id) {\n      detachId(id, this, this._ownerDocument);\n    }\n  }\n\n  _attrModified(name, value, oldValue) {\n    this._modified();\n    namedPropertiesWindow.elementAttributeModified(this, name, value, oldValue);\n\n    if (name === \"id\" && this._attached) {\n      const doc = this._ownerDocument;\n      detachId(oldValue, this, doc);\n      attachId(value, this, doc);\n    }\n\n    // update classList\n    if (name === \"class\" && this._classList !== undefined) {\n      this._classList.attrModified();\n    }\n  }\n\n  get namespaceURI() {\n    return this._namespaceURI;\n  }\n  get prefix() {\n    return this._prefix;\n  }\n  get localName() {\n    return this._localName;\n  }\n  get _qualifiedName() {\n    return this._prefix !== null ? this._prefix + \":\" + this._localName : this._localName;\n  }\n  get tagName() {\n    let qualifiedName = this._qualifiedName;\n    if (this.namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n      qualifiedName = qualifiedName.toUpperCase();\n    }\n    return qualifiedName;\n  }\n\n  get attributes() {\n    return this._attributes;\n  }\n\n  get outerHTML() {\n    return domToHtml([this]);\n  }\n\n  set outerHTML(html) {\n    if (html === null) {\n      html = \"\";\n    }\n\n    const parent = domSymbolTree.parent(this);\n    const document = this._ownerDocument;\n\n    if (!parent) {\n      return;\n    }\n\n    let contextElement;\n    if (parent.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n      throw new DOMException(\"Modifications are not allowed for this document\", \"NoModificationAllowedError\");\n    } else if (parent.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE) {\n      contextElement = document.createElementNS(HTML_NS, \"body\");\n    } else if (parent.nodeType === NODE_TYPE.ELEMENT_NODE) {\n      contextElement = clone(parent, undefined, false);\n    } else {\n      throw new TypeError(\"This should never happen\");\n    }\n\n    document._htmlToDom.appendToNode(html, contextElement);\n\n    while (contextElement.firstChild) {\n      parent.insertBefore(contextElement.firstChild, this);\n    }\n\n    parent.removeChild(this);\n  }\n\n  get innerHTML() {\n    // TODO is this necessary? I would have thought this would be handled at a different level.\n    const { tagName } = this;\n    if (tagName === \"SCRIPT\" || tagName === \"STYLE\") {\n      const type = this.getAttribute(\"type\");\n      if (!type || /^text\\//i.test(type) || /\\/javascript$/i.test(type)) {\n        return domToHtml(domSymbolTree.childrenIterator(this));\n      }\n    }\n\n    // In case of <template> we should pass its \"template contents\" fragment as a serialization root if we have one\n    if (this._templateContents) {\n      return domToHtml(domSymbolTree.childrenIterator(this._templateContents));\n    }\n\n    return domToHtml(domSymbolTree.childrenIterator(this));\n  }\n\n  set innerHTML(html) {\n    if (html === null) {\n      html = \"\";\n    }\n\n    setInnerHTML(this.ownerDocument, this, html);\n  }\n\n  get classList() {\n    if (this._classList === undefined) {\n      this._classList = DOMTokenList.createImpl([], {\n        element: this,\n        attributeLocalName: \"class\"\n      });\n    }\n    return this._classList;\n  }\n\n  hasAttributes() {\n    return attributes.hasAttributes(this);\n  }\n\n  getAttributeNames() {\n    return attributes.attributeNames(this);\n  }\n\n  getAttribute(name) {\n    const attr = attributes.getAttributeByName(this, name);\n    if (!attr) {\n      return null;\n    }\n    return attr._value;\n  }\n\n  getAttributeNS(namespace, localName) {\n    const attr = attributes.getAttributeByNameNS(this, namespace, localName);\n    if (!attr) {\n      return null;\n    }\n    return attr._value;\n  }\n\n  setAttribute(name, value) {\n    validateNames.name(name);\n\n    if (this._namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n      name = asciiLowercase(name);\n    }\n\n    const attribute = attributes.getAttributeByName(this, name);\n\n    if (attribute === null) {\n      const newAttr = attrGenerated.createImpl([], { localName: name, value });\n      attributes.appendAttribute(this, newAttr);\n      return;\n    }\n\n    attributes.changeAttribute(this, attribute, value);\n  }\n\n  setAttributeNS(namespace, name, value) {\n    const extracted = validateNames.validateAndExtract(namespace, name);\n\n    attributes.setAttributeValue(this, extracted.localName, value, extracted.prefix, extracted.namespace);\n  }\n\n  removeAttribute(name) {\n    attributes.removeAttributeByName(this, name);\n  }\n\n  removeAttributeNS(namespace, localName) {\n    attributes.removeAttributeByNameNS(this, namespace, localName);\n  }\n\n  hasAttribute(name) {\n    if (this._namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n      name = asciiLowercase(name);\n    }\n\n    return attributes.hasAttributeByName(this, name);\n  }\n\n  hasAttributeNS(namespace, localName) {\n    if (namespace === \"\") {\n      namespace = null;\n    }\n\n    return attributes.hasAttributeByNameNS(this, namespace, localName);\n  }\n\n  getAttributeNode(name) {\n    return attributes.getAttributeByName(this, name);\n  }\n\n  getAttributeNodeNS(namespace, localName) {\n    return attributes.getAttributeByNameNS(this, namespace, localName);\n  }\n\n  setAttributeNode(attr) {\n    return attributes.setAttribute(this, attr);\n  }\n\n  setAttributeNodeNS(attr) {\n    return attributes.setAttribute(this, attr);\n  }\n\n  removeAttributeNode(attr) {\n    if (!attributes.hasAttribute(this, attr)) {\n      throw new DOMException(\"Tried to remove an attribute that was not present\", \"NotFoundError\");\n    }\n\n    attributes.removeAttribute(this, attr);\n\n    return attr;\n  }\n\n  getBoundingClientRect() {\n    return {\n      bottom: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 0\n    };\n  }\n\n  getClientRects() {\n    return [];\n  }\n\n  get scrollWidth() {\n    return 0;\n  }\n\n  get scrollHeight() {\n    return 0;\n  }\n\n  get clientTop() {\n    return 0;\n  }\n\n  get clientLeft() {\n    return 0;\n  }\n\n  get clientWidth() {\n    return 0;\n  }\n\n  get clientHeight() {\n    return 0;\n  }\n\n  // https://w3c.github.io/DOM-Parsing/#dom-element-insertadjacenthtml\n  insertAdjacentHTML(position, text) {\n    position = position.toLowerCase();\n\n    let context;\n    switch (position) {\n      case \"beforebegin\":\n      case \"afterend\": {\n        context = this.parentNode;\n        if (context === null || context.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n          throw new DOMException(\"Cannot insert HTML adjacent to \" +\n            \"parent-less nodes or children of document nodes.\", \"NoModificationAllowedError\");\n        }\n        break;\n      }\n      case \"afterbegin\":\n      case \"beforeend\": {\n        context = this;\n        break;\n      }\n      default: {\n        throw new DOMException(\"Must provide one of \\\"beforebegin\\\", \\\"afterend\\\", \" +\n          \"\\\"afterbegin\\\", or \\\"beforeend\\\".\", \"SyntaxError\");\n      }\n    }\n\n    // TODO: use context for parsing instead of a <template>.\n    const fragment = this.ownerDocument.createElement(\"template\");\n    fragment.innerHTML = text;\n\n    switch (position) {\n      case \"beforebegin\": {\n        this.parentNode.insertBefore(fragment.content, this);\n        break;\n      }\n      case \"afterbegin\": {\n        this.insertBefore(fragment.content, this.firstChild);\n        break;\n      }\n      case \"beforeend\": {\n        this.appendChild(fragment.content);\n        break;\n      }\n      case \"afterend\": {\n        this.parentNode.insertBefore(fragment.content, this.nextSibling);\n        break;\n      }\n    }\n  }\n\n  closest(selectors) {\n    const matcher = addNwsapi(this);\n    return matcher.closest(selectors, idlUtils.wrapperForImpl(this));\n  }\n}\n\nmixin(ElementImpl.prototype, NonDocumentTypeChildNode.prototype);\nmixin(ElementImpl.prototype, ParentNodeImpl.prototype);\nmixin(ElementImpl.prototype, ChildNodeImpl.prototype);\n\nElementImpl.prototype.getElementsByTagName = memoizeQuery(function (qualifiedName) {\n  return listOfElementsWithQualifiedName(qualifiedName, this);\n});\n\nElementImpl.prototype.getElementsByTagNameNS = memoizeQuery(function (namespace, localName) {\n  return listOfElementsWithNamespaceAndLocalName(namespace, localName, this);\n});\n\nElementImpl.prototype.getElementsByClassName = memoizeQuery(function (classNames) {\n  return listOfElementsWithClassNames(classNames, this);\n});\n\nElementImpl.prototype.matches = memoizeQuery(function (selectors) {\n  const matcher = addNwsapi(this);\n\n  return matcher.match(selectors, idlUtils.wrapperForImpl(this));\n});\n\nElementImpl.prototype.webkitMatchesSelector = ElementImpl.prototype.matches;\n\nmodule.exports = {\n  implementation: ElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}