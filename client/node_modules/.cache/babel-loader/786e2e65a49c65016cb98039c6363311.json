{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception\");\n\nclass SVGNumberImpl {\n  constructor(args, privateData) {\n    // Delegate to parent List object for (almost) everything related to reflection.\n    this._parentList = privateData.parentList;\n    this._value = 0;\n  }\n\n  get _readOnly() {\n    if (this._parentList !== undefined) {\n      return this._parentList._readOnly;\n    }\n\n    return false;\n  }\n\n  _synchronize() {\n    if (this._parentList !== undefined) {\n      this._parentList._synchronize();\n    }\n  }\n\n  _reserialize() {\n    if (this._parentList !== undefined) {\n      this._parentList._reserialize();\n    }\n  }\n\n  get value() {\n    this._synchronize();\n\n    return this._value;\n  }\n\n  set value(value) {\n    if (this._readOnly) {\n      throw new DOMException(\"Attempting to modify a read-only SVGNumber\", \"NoModificationAllowedError\");\n    }\n\n    this._value = value;\n\n    this._reserialize();\n  }\n\n}\n\nexports.implementation = SVGNumberImpl;","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/svg/SVGNumber-impl.js"],"names":["DOMException","require","SVGNumberImpl","constructor","args","privateData","_parentList","parentList","_value","_readOnly","undefined","_synchronize","_reserialize","value","exports","implementation"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AAEA,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,EAAoB;AAC7B;AACA,SAAKC,WAAL,GAAmBD,WAAW,CAACE,UAA/B;AACA,SAAKC,MAAL,GAAc,CAAd;AACD;;AAED,MAAIC,SAAJ,GAAgB;AACd,QAAI,KAAKH,WAAL,KAAqBI,SAAzB,EAAoC;AAClC,aAAO,KAAKJ,WAAL,CAAiBG,SAAxB;AACD;;AACD,WAAO,KAAP;AACD;;AAEDE,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKL,WAAL,KAAqBI,SAAzB,EAAoC;AAClC,WAAKJ,WAAL,CAAiBK,YAAjB;AACD;AACF;;AAEDC,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKN,WAAL,KAAqBI,SAAzB,EAAoC;AAClC,WAAKJ,WAAL,CAAiBM,YAAjB;AACD;AACF;;AAED,MAAIC,KAAJ,GAAY;AACV,SAAKF,YAAL;;AACA,WAAO,KAAKH,MAAZ;AACD;;AAED,MAAIK,KAAJ,CAAUA,KAAV,EAAiB;AACf,QAAI,KAAKJ,SAAT,EAAoB;AAClB,YAAM,IAAIT,YAAJ,CAAiB,4CAAjB,EAA+D,4BAA/D,CAAN;AACD;;AACD,SAAKQ,MAAL,GAAcK,KAAd;;AACA,SAAKD,YAAL;AACD;;AArCiB;;AAwCpBE,OAAO,CAACC,cAAR,GAAyBb,aAAzB","sourcesContent":["\"use strict\";\n\nconst DOMException = require(\"domexception\");\n\nclass SVGNumberImpl {\n  constructor(args, privateData) {\n    // Delegate to parent List object for (almost) everything related to reflection.\n    this._parentList = privateData.parentList;\n    this._value = 0;\n  }\n\n  get _readOnly() {\n    if (this._parentList !== undefined) {\n      return this._parentList._readOnly;\n    }\n    return false;\n  }\n\n  _synchronize() {\n    if (this._parentList !== undefined) {\n      this._parentList._synchronize();\n    }\n  }\n\n  _reserialize() {\n    if (this._parentList !== undefined) {\n      this._parentList._reserialize();\n    }\n  }\n\n  get value() {\n    this._synchronize();\n    return this._value;\n  }\n\n  set value(value) {\n    if (this._readOnly) {\n      throw new DOMException(\"Attempting to modify a read-only SVGNumber\", \"NoModificationAllowedError\");\n    }\n    this._value = value;\n    this._reserialize();\n  }\n}\n\nexports.implementation = SVGNumberImpl;\n"]},"metadata":{},"sourceType":"script"}