{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/AddCustomFields.js\";\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormInput from './FormInput';\nimport FormErrorsDisplay from './FormErrorsDisplay';\nexport default function AddCustomFields({\n  addCustomToFieldsFormState,\n  maxPosition\n}) {\n  const [formData, setFormData] = useState({\n    customFieldDesc: '',\n    customFieldValue: '',\n    customFieldPosition: null,\n    errors: []\n  });\n\n  const handleAdd = () => {\n    const {\n      customFieldDesc,\n      customFieldValue,\n      customFieldPosition\n    } = formData;\n\n    if (!customFieldDesc.trim()) {\n      alert('no desc');\n      return;\n    }\n\n    if (!customFieldValue.trim()) {\n      alert('no value');\n      return;\n    } //create customised field\n\n\n    const customField = {\n      _id: uuidv4(),\n      desc: customFieldDesc.trim(),\n      value: customFieldValue.trim(),\n      position: customFieldPosition || maxPosition,\n      show: true,\n      custom: true\n    };\n    addCustomToFieldsFormState(customField); //reset state\n\n    setFormData({\n      customFieldDesc: '',\n      customFieldValue: '',\n      customFieldPosition: null,\n      errors: []\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"tile add-custom-fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Add custom fields to the form.\")), /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    name: \"customFieldDesc\",\n    size: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Description*\"), /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    name: \"customFieldValue\",\n    size: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Value*\"), /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    name: \"customFieldPosition\",\n    size: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Position (1-\", maxPosition, \")\"), formData.errors.length > 0 && /*#__PURE__*/React.createElement(FormErrorsDisplay, {\n    errors: formData.errors,\n    label: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--grey\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Add Item\"));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/AddCustomFields.js"],"names":["React","useState","v4","uuidv4","FormInput","FormErrorsDisplay","AddCustomFields","addCustomToFieldsFormState","maxPosition","formData","setFormData","customFieldDesc","customFieldValue","customFieldPosition","errors","handleAdd","trim","alert","customField","_id","desc","value","position","show","custom","length","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormInput from './FormInput';\nimport FormErrorsDisplay from './FormErrorsDisplay';\n\nexport default function AddCustomFields({\n    addCustomToFieldsFormState,\n    maxPosition,\n}) {\n    const [formData, setFormData] = useState({\n        customFieldDesc: '',\n        customFieldValue: '',\n        customFieldPosition: null,\n        errors: [],\n    });\n    const handleAdd = () => {\n        const {\n            customFieldDesc,\n            customFieldValue,\n            customFieldPosition,\n        } = formData;\n        if (!customFieldDesc.trim()) {\n            alert('no desc');\n            return;\n        }\n        if (!customFieldValue.trim()) {\n            alert('no value');\n            return;\n        }\n        //create customised field\n        const customField = {\n            _id: uuidv4(),\n            desc: customFieldDesc.trim(),\n            value: customFieldValue.trim(),\n            position: customFieldPosition || maxPosition,\n            show: true,\n            custom: true,\n        };\n        addCustomToFieldsFormState(customField);\n        //reset state\n        setFormData({\n            customFieldDesc: '',\n            customFieldValue: '',\n            customFieldPosition: null,\n            errors: [],\n        });\n    };\n    return (\n        <fieldset className='tile add-custom-fields'>\n            <legend>\n                <b>Add custom fields to the form.</b>\n            </legend>\n            <FormInput\n                form={{ formData, setFormData }}\n                name='customFieldDesc'\n                size='auto'\n            >\n                Description*\n            </FormInput>\n            <FormInput\n                form={{ formData, setFormData }}\n                name='customFieldValue'\n                size='auto'\n            >\n                Value*\n            </FormInput>\n            <FormInput\n                form={{ formData, setFormData }}\n                name='customFieldPosition'\n                size='auto'\n            >\n                Position (1-{maxPosition})\n            </FormInput>\n            {formData.errors.length > 0 && (\n                <FormErrorsDisplay errors={formData.errors} label='' />\n            )}\n            <button\n                className='btn btn--grey'\n                onMouseDown={(e) => e.preventDefault()}\n                onClick={handleAdd}\n            >\n                Add Item\n            </button>\n        </fieldset>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}