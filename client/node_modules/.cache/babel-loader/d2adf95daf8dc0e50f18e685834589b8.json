{"ast":null,"code":"export const dateUX = date => {\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return date.toLocaleDateString(undefined, options);\n};\n\nconst isToday = d => {\n  d = new Date(d);\n  const today = new Date();\n  return d.getDate() == today.getDate() && d.getMonth() == today.getMonth() && d.getFullYear() == today.getFullYear();\n};\n\nconst getTime = d => {\n  d = new Date(d);\n  return d.getHours() + ':' + d.getMinutes();\n};\n\nexport const getDateAndTimeUX = date => {\n  var d = new Date();\n  d.setUTCHours(0, 0, 0, 0);\n  console.log(+d);\n  const t = getTime(date);\n  if (isToday(date)) return 'today at ' + t;\n  return dateUX(date) + 'at ' + t;\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/utils/dates.js"],"names":["dateUX","date","options","weekday","year","month","day","toLocaleDateString","undefined","isToday","d","Date","today","getDate","getMonth","getFullYear","getTime","getHours","getMinutes","getDateAndTimeUX","setUTCHours","console","log","t"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAIC,IAAD,IAAU;AAC5B,QAAMC,OAAO,GAAG;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,IAAI,EAAE,SAFM;AAGZC,IAAAA,KAAK,EAAE,MAHK;AAIZC,IAAAA,GAAG,EAAE;AAJO,GAAhB;AAMA,SAAOL,IAAI,CAACM,kBAAL,CAAwBC,SAAxB,EAAmCN,OAAnC,CAAP;AACH,CARM;;AASP,MAAMO,OAAO,GAAIC,CAAD,IAAO;AACnBA,EAAAA,CAAC,GAAG,IAAIC,IAAJ,CAASD,CAAT,CAAJ;AACA,QAAME,KAAK,GAAG,IAAID,IAAJ,EAAd;AACA,SACID,CAAC,CAACG,OAAF,MAAeD,KAAK,CAACC,OAAN,EAAf,IACAH,CAAC,CAACI,QAAF,MAAgBF,KAAK,CAACE,QAAN,EADhB,IAEAJ,CAAC,CAACK,WAAF,MAAmBH,KAAK,CAACG,WAAN,EAHvB;AAKH,CARD;;AASA,MAAMC,OAAO,GAAIN,CAAD,IAAO;AACnBA,EAAAA,CAAC,GAAG,IAAIC,IAAJ,CAASD,CAAT,CAAJ;AACA,SAAOA,CAAC,CAACO,QAAF,KAAe,GAAf,GAAqBP,CAAC,CAACQ,UAAF,EAA5B;AACH,CAHD;;AAIA,OAAO,MAAMC,gBAAgB,GAAIlB,IAAD,IAAU;AACtC,MAAIS,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACAD,EAAAA,CAAC,CAACU,WAAF,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACZ,CAAb;AACA,QAAMa,CAAC,GAAGP,OAAO,CAACf,IAAD,CAAjB;AACA,MAAIQ,OAAO,CAACR,IAAD,CAAX,EAAmB,OAAO,cAAcsB,CAArB;AACnB,SAAOvB,MAAM,CAACC,IAAD,CAAN,GAAe,KAAf,GAAuBsB,CAA9B;AACH,CAPM","sourcesContent":["export const dateUX = (date) => {\n    const options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    };\n    return date.toLocaleDateString(undefined, options);\n};\nconst isToday = (d) => {\n    d = new Date(d);\n    const today = new Date();\n    return (\n        d.getDate() == today.getDate() &&\n        d.getMonth() == today.getMonth() &&\n        d.getFullYear() == today.getFullYear()\n    );\n};\nconst getTime = (d) => {\n    d = new Date(d);\n    return d.getHours() + ':' + d.getMinutes();\n};\nexport const getDateAndTimeUX = (date) => {\n    var d = new Date();\n    d.setUTCHours(0, 0, 0, 0);\n    console.log(+d);\n    const t = getTime(date);\n    if (isToday(date)) return 'today at ' + t;\n    return dateUX(date) + 'at ' + t;\n};\n"]},"metadata":{},"sourceType":"module"}