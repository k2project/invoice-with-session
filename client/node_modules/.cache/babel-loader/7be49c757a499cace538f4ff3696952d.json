{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst CharacterData = require(\"./CharacterData.js\");\n\nfunction ProcessingInstruction() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(ProcessingInstruction.prototype, CharacterData.interface.prototype);\nObject.setPrototypeOf(ProcessingInstruction, CharacterData.interface);\nObject.defineProperty(ProcessingInstruction, \"prototype\", {\n  value: ProcessingInstruction.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(ProcessingInstruction.prototype, \"target\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"target\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(ProcessingInstruction.prototype, Symbol.toStringTag, {\n  value: \"ProcessingInstruction\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'ProcessingInstruction'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ProcessingInstruction.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(ProcessingInstruction.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    CharacterData._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: ProcessingInstruction,\n  expose: {\n    Window: {\n      ProcessingInstruction\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/ProcessingInstruction-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/ProcessingInstruction.js"],"names":["conversions","require","utils","impl","implSymbol","CharacterData","ProcessingInstruction","TypeError","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","get","module","exports","is","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","expose","Window"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,IAAI,GAAGD,KAAK,CAACE,UAAnB;;AACA,MAAMC,aAAa,GAAGJ,OAAO,CAAC,oBAAD,CAA7B;;AAEA,SAASK,qBAAT,GAAiC;AAC/B,QAAM,IAAIC,SAAJ,CAAc,qBAAd,CAAN;AACD;;AAEDC,MAAM,CAACC,cAAP,CAAsBH,qBAAqB,CAACI,SAA5C,EAAuDL,aAAa,CAACM,SAAd,CAAwBD,SAA/E;AACAF,MAAM,CAACC,cAAP,CAAsBH,qBAAtB,EAA6CD,aAAa,CAACM,SAA3D;AAEAH,MAAM,CAACI,cAAP,CAAsBN,qBAAtB,EAA6C,WAA7C,EAA0D;AACxDO,EAAAA,KAAK,EAAEP,qBAAqB,CAACI,SAD2B;AAExDI,EAAAA,QAAQ,EAAE,KAF8C;AAGxDC,EAAAA,UAAU,EAAE,KAH4C;AAIxDC,EAAAA,YAAY,EAAE;AAJ0C,CAA1D;AAOAR,MAAM,CAACI,cAAP,CAAsBN,qBAAqB,CAACI,SAA5C,EAAuD,QAAvD,EAAiE;AAC/DO,EAAAA,GAAG,GAAG;AACJ,QAAI,CAAC,IAAD,IAAS,CAACC,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKJ,IAAL,EAAW,QAAX,CAAP;AACD,GAP8D;;AAS/DY,EAAAA,UAAU,EAAE,IATmD;AAU/DC,EAAAA,YAAY,EAAE;AAViD,CAAjE;AAaAR,MAAM,CAACI,cAAP,CAAsBN,qBAAqB,CAACI,SAA5C,EAAuDW,MAAM,CAACC,WAA9D,EAA2E;AACzET,EAAAA,KAAK,EAAE,uBADkE;AAEzEC,EAAAA,QAAQ,EAAE,KAF+D;AAGzEC,EAAAA,UAAU,EAAE,KAH6D;AAIzEC,EAAAA,YAAY,EAAE;AAJ2D,CAA3E;AAOA,MAAMO,KAAK,GAAG;AACZ;AACA;AACA;AACAC,EAAAA,oBAAoB,EAAE,EAJV;;AAKZJ,EAAAA,EAAE,CAACK,GAAD,EAAM;AACN,QAAIA,GAAJ,EAAS;AACP,UAAIvB,KAAK,CAACwB,MAAN,CAAaD,GAAb,EAAkBtB,IAAlB,KAA2BsB,GAAG,CAACtB,IAAD,CAAH,YAAqBwB,IAAI,CAACC,cAAzD,EAAyE;AACvE,eAAO,IAAP;AACD;;AACD,WAAK,MAAMC,WAAX,IAA0BX,MAAM,CAACC,OAAP,CAAeK,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACJ,GAAD,CAAf,EAAsB;AACpB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAjBW;;AAkBZK,EAAAA,MAAM,CAACL,GAAD,EAAM;AACV,QAAIA,GAAJ,EAAS;AACP,UAAIA,GAAG,YAAYE,IAAI,CAACC,cAAxB,EAAwC;AACtC,eAAO,IAAP;AACD;;AAED,YAAMG,OAAO,GAAG7B,KAAK,CAAC8B,cAAN,CAAqBP,GAArB,CAAhB;;AACA,WAAK,MAAMI,WAAX,IAA0BX,MAAM,CAACC,OAAP,CAAeK,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACE,OAAD,CAAf,EAA0B;AACxB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAhCW;;AAiCZE,EAAAA,OAAO,CAACR,GAAD,EAAM;AAAES,IAAAA,OAAO,GAAG;AAAZ,MAAqC,EAA3C,EAA+C;AACpD,QAAIhB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkBK,GAAlB,CAAJ,EAA4B;AAC1B,aAAOvB,KAAK,CAACiC,cAAN,CAAqBV,GAArB,CAAP;AACD;;AACD,UAAM,IAAIlB,SAAJ,CAAe,GAAE2B,OAAQ,0CAAzB,CAAN;AACD,GAtCW;;AAwCZE,EAAAA,MAAM,CAACC,eAAD,EAAkBC,WAAlB,EAA+B;AACnC,QAAIb,GAAG,GAAGjB,MAAM,CAAC4B,MAAP,CAAc9B,qBAAqB,CAACI,SAApC,CAAV;AACAe,IAAAA,GAAG,GAAG,KAAKc,KAAL,CAAWd,GAAX,EAAgBY,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOb,GAAP;AACD,GA5CW;;AA6CZe,EAAAA,UAAU,CAACH,eAAD,EAAkBC,WAAlB,EAA+B;AACvC,QAAIb,GAAG,GAAGjB,MAAM,CAAC4B,MAAP,CAAc9B,qBAAqB,CAACI,SAApC,CAAV;AACAe,IAAAA,GAAG,GAAG,KAAKc,KAAL,CAAWd,GAAX,EAAgBY,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOpC,KAAK,CAACiC,cAAN,CAAqBV,GAArB,CAAP;AACD,GAjDW;;AAkDZgB,EAAAA,cAAc,CAAChB,GAAD,EAAM;AAClBpB,IAAAA,aAAa,CAACoC,cAAd,CAA6BhB,GAA7B;AACD,GApDW;;AAqDZc,EAAAA,KAAK,CAACd,GAAD,EAAMY,eAAN,EAAuBC,WAAvB,EAAoC;AACvC,QAAI,CAACA,WAAL,EAAkBA,WAAW,GAAG,EAAd;AAElBA,IAAAA,WAAW,CAACP,OAAZ,GAAsBN,GAAtB;;AAEA,SAAKgB,cAAL,CAAoBhB,GAApB;;AACAjB,IAAAA,MAAM,CAACI,cAAP,CAAsBa,GAAtB,EAA2BtB,IAA3B,EAAiC;AAC/BU,MAAAA,KAAK,EAAE,IAAIc,IAAI,CAACC,cAAT,CAAwBS,eAAxB,EAAyCC,WAAzC,CADwB;AAE/BxB,MAAAA,QAAQ,EAAE,KAFqB;AAG/BC,MAAAA,UAAU,EAAE,KAHmB;AAI/BC,MAAAA,YAAY,EAAE;AAJiB,KAAjC;AAOAS,IAAAA,GAAG,CAACtB,IAAD,CAAH,CAAUD,KAAK,CAACwC,aAAhB,IAAiCjB,GAAjC;;AACA,QAAIE,IAAI,CAACgB,IAAT,EAAe;AACbhB,MAAAA,IAAI,CAACgB,IAAL,CAAUlB,GAAG,CAACtB,IAAD,CAAb,EAAqBmC,WAArB;AACD;;AACD,WAAOb,GAAP;AACD,GAvEW;;AAwEZd,EAAAA,SAAS,EAAEL,qBAxEC;AAyEZsC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AAAEvC,MAAAA;AAAF;AADF;AAzEI,CAAd,C,CA4EG;;AACHY,MAAM,CAACC,OAAP,GAAiBI,KAAjB;;AAEA,MAAMI,IAAI,GAAG1B,OAAO,CAAC,wCAAD,CAApB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst CharacterData = require(\"./CharacterData.js\");\n\nfunction ProcessingInstruction() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(ProcessingInstruction.prototype, CharacterData.interface.prototype);\nObject.setPrototypeOf(ProcessingInstruction, CharacterData.interface);\n\nObject.defineProperty(ProcessingInstruction, \"prototype\", {\n  value: ProcessingInstruction.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(ProcessingInstruction.prototype, \"target\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"target\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(ProcessingInstruction.prototype, Symbol.toStringTag, {\n  value: \"ProcessingInstruction\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'ProcessingInstruction'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ProcessingInstruction.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(ProcessingInstruction.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    CharacterData._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: ProcessingInstruction,\n  expose: {\n    Window: { ProcessingInstruction }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/ProcessingInstruction-impl.js\");\n"]},"metadata":{},"sourceType":"script"}