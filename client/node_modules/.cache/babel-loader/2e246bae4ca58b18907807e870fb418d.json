{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nfunction NodeIterator() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(NodeIterator, \"prototype\", {\n  value: NodeIterator.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nNodeIterator.prototype.nextNode = function nextNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].nextNode());\n};\n\nNodeIterator.prototype.previousNode = function previousNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].previousNode());\n};\n\nNodeIterator.prototype.detach = function detach() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].detach();\n};\n\nObject.defineProperty(NodeIterator.prototype, \"root\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"root\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"root\"]);\n    });\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NodeIterator.prototype, \"referenceNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"referenceNode\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NodeIterator.prototype, \"pointerBeforeReferenceNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"pointerBeforeReferenceNode\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NodeIterator.prototype, \"whatToShow\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"whatToShow\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NodeIterator.prototype, \"filter\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"filter\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NodeIterator.prototype, Symbol.toStringTag, {\n  value: \"NodeIterator\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'NodeIterator'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: NodeIterator,\n  expose: {\n    Window: {\n      NodeIterator\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../traversal/NodeIterator-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/NodeIterator.js"],"names":["conversions","require","utils","impl","implSymbol","NodeIterator","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","nextNode","module","exports","is","tryWrapperForImpl","previousNode","detach","get","getSameObject","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","interface","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nfunction NodeIterator() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(NodeIterator, \"prototype\", {\n  value: NodeIterator.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nNodeIterator.prototype.nextNode = function nextNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].nextNode());\n};\n\nNodeIterator.prototype.previousNode = function previousNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].previousNode());\n};\n\nNodeIterator.prototype.detach = function detach() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].detach();\n};\n\nObject.defineProperty(NodeIterator.prototype, \"root\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"root\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"root\"]);\n    });\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NodeIterator.prototype, \"referenceNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"referenceNode\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NodeIterator.prototype, \"pointerBeforeReferenceNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"pointerBeforeReferenceNode\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NodeIterator.prototype, \"whatToShow\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"whatToShow\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NodeIterator.prototype, \"filter\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"filter\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NodeIterator.prototype, Symbol.toStringTag, {\n  value: \"NodeIterator\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'NodeIterator'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: NodeIterator,\n  expose: {\n    Window: { NodeIterator }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../traversal/NodeIterator-impl.js\");\n"]},"metadata":{},"sourceType":"script"}