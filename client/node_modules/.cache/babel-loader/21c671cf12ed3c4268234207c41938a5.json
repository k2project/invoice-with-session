{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nfunction NonDocumentTypeChildNode() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(NonDocumentTypeChildNode, \"prototype\", {\n  value: NonDocumentTypeChildNode.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(NonDocumentTypeChildNode.prototype, \"previousElementSibling\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"previousElementSibling\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NonDocumentTypeChildNode.prototype, \"nextElementSibling\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"nextElementSibling\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NonDocumentTypeChildNode.prototype, Symbol.toStringTag, {\n  value: \"NonDocumentTypeChildNode\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'NonDocumentTypeChildNode'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NonDocumentTypeChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NonDocumentTypeChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: NonDocumentTypeChildNode,\n  expose: {}\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/NonDocumentTypeChildNode-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/NonDocumentTypeChildNode.js"],"names":["conversions","require","utils","impl","implSymbol","NonDocumentTypeChildNode","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","get","module","exports","is","tryWrapperForImpl","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","interface","expose"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nfunction NonDocumentTypeChildNode() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(NonDocumentTypeChildNode, \"prototype\", {\n  value: NonDocumentTypeChildNode.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(NonDocumentTypeChildNode.prototype, \"previousElementSibling\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"previousElementSibling\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NonDocumentTypeChildNode.prototype, \"nextElementSibling\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"nextElementSibling\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NonDocumentTypeChildNode.prototype, Symbol.toStringTag, {\n  value: \"NonDocumentTypeChildNode\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'NonDocumentTypeChildNode'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NonDocumentTypeChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NonDocumentTypeChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: NonDocumentTypeChildNode,\n  expose: {}\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/NonDocumentTypeChildNode-impl.js\");\n"]},"metadata":{},"sourceType":"script"}