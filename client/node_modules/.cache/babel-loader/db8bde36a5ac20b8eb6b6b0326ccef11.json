{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocHeader.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport settingsIcon from '../../../../imgs/icons/cogs.png';\nimport updateIcon from '../../../../imgs/icons/updateIcon.png';\n\nconst InvoiceDocHeader = ({\n  profile\n}) => {\n  const [settings, setSettings] = useState(false);\n  const profileDetails = profile.details.map(input => {\n    if (input.label === 'Name' && input.addToInvoice) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: input._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }\n      }, input.value));\n    } else if (input.addToInvoice) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: input._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 20\n        }\n      }, input.value);\n    }\n  });\n  const COLORS = [['#000', 'black'], ['#5F7C8A', 'grey'], ['#785447', 'brown'], ['#FF5623', 'bright-orange'], ['#EB9346', 'orange'], ['#FFC108', 'yellow'], ['#CDDD39', 'yellow-green'], ['#8BC34A', 'light green'], ['#4BAF50', 'green'], ['#009688', 'dark-green'], ['#01BCD5', 'see blue'], ['#03A9F4', 'light-blue'], ['#2065A8', 'blue'], ['#203354', 'dark-blue'], ['#3F50B6', 'dark-purple'], ['#673BB7', 'purple'], ['#9C27B0', 'purple-pink'], ['#E91F63', 'pink'], ['#D5133A', 'dark-pink'], ['#F44337', 'red']];\n  const colorPicker = COLORS.map(color => /*#__PURE__*/React.createElement(\"li\", {\n    key: 'color-picker-' + color[0],\n    style: {\n      backgroundColor: `${color[0]}`\n    },\n    title: color[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, console.log('.color-' + color[1] + '{background-color:' + color[0] + '}'), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"color[1]\"))));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, settings && /*#__PURE__*/React.createElement(\"section\", {\n    className: \"color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Choose invoice color theme.\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"aria-labelledby\": \"color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, colorPicker), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close\",\n    onClick: () => setSettings(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"icon_iSettings\",\n    title: \"Change invoice settings\",\n    onClick: () => setSettings(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: settingsIcon,\n    alt: \"Invoice settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"invoice\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"txt--right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"icon_iProfile\",\n    title: \"Change Profile details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: updateIcon,\n    alt: \"Change Profile details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, profileDetails))));\n};\n\nInvoiceDocHeader.propTypes = {};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps)(InvoiceDocHeader);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocHeader.js"],"names":["React","useState","useEffect","Fragment","PropTypes","connect","settingsIcon","updateIcon","InvoiceDocHeader","profile","settings","setSettings","profileDetails","details","map","input","label","addToInvoice","_id","value","COLORS","colorPicker","color","backgroundColor","console","log","propTypes","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport settingsIcon from '../../../../imgs/icons/cogs.png';\nimport updateIcon from '../../../../imgs/icons/updateIcon.png';\n\nconst InvoiceDocHeader = ({ profile }) => {\n    const [settings, setSettings] = useState(false);\n    const profileDetails = profile.details.map((input) => {\n        if (input.label === 'Name' && input.addToInvoice) {\n            return (\n                <li key={input._id}>\n                    <b>{input.value}</b>\n                </li>\n            );\n        } else if (input.addToInvoice) {\n            return <li key={input._id}>{input.value}</li>;\n        }\n    });\n\n    const COLORS = [\n        ['#000', 'black'],\n        ['#5F7C8A', 'grey'],\n        ['#785447', 'brown'],\n        ['#FF5623', 'bright-orange'],\n        ['#EB9346', 'orange'],\n        ['#FFC108', 'yellow'],\n        ['#CDDD39', 'yellow-green'],\n        ['#8BC34A', 'light green'],\n        ['#4BAF50', 'green'],\n        ['#009688', 'dark-green'],\n        ['#01BCD5', 'see blue'],\n        ['#03A9F4', 'light-blue'],\n        ['#2065A8', 'blue'],\n        ['#203354', 'dark-blue'],\n        ['#3F50B6', 'dark-purple'],\n        ['#673BB7', 'purple'],\n        ['#9C27B0', 'purple-pink'],\n        ['#E91F63', 'pink'],\n        ['#D5133A', 'dark-pink'],\n        ['#F44337', 'red'],\n    ];\n    const colorPicker = COLORS.map((color) => (\n        <li\n            key={'color-picker-' + color[0]}\n            style={{ backgroundColor: `${color[0]}` }}\n            title={color[0]}\n        >\n            <button>\n                {console.log(\n                    '.color-' + color[1] + '{background-color:' + color[0] + '}'\n                )}\n                <span className='sr-only'>color[1]</span>\n            </button>\n        </li>\n    ));\n    return (\n        <Fragment>\n            {settings && (\n                <section className='color-picker'>\n                    <h3 id='color-picker'>Choose invoice color theme.</h3>\n                    <ul aria-labelledby='color-picker'>{colorPicker}</ul>\n                    <button\n                        className='close'\n                        onClick={() => setSettings(false)}\n                    >\n                        &times;\n                    </button>\n                </section>\n            )}\n            <header>\n                <button\n                    className='icon_iSettings'\n                    title='Change invoice settings'\n                    onClick={() => setSettings(true)}\n                >\n                    <img src={settingsIcon} alt='Invoice settings' />\n                </button>\n                <div>\n                    <h1>invoice</h1>\n                </div>\n                <div className='txt--right'>\n                    <button\n                        className='icon_iProfile'\n                        title='Change Profile details'\n                    >\n                        <img src={updateIcon} alt='Change Profile details' />\n                    </button>\n                    <ul>{profileDetails}</ul>\n                </div>\n            </header>\n        </Fragment>\n    );\n};\n\nInvoiceDocHeader.propTypes = {};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps)(InvoiceDocHeader);\n"]},"metadata":{},"sourceType":"module"}