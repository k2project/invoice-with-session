{"ast":null,"code":"import axios from 'axios';\nimport { dialogBox } from '../../alerts/alertsFuns';\nexport const alertUnsavedChanges = async (initilState, state, setStateTab, setUpdates, history) => {\n  if (JSON.stringify(state) !== JSON.stringify(initilState)) {\n    history.push('/dashboard/profile');\n    setStateTab('form');\n    const unblockRouting = history.block();\n    const msg = `You have some unsaved changes. What would you like to do?`;\n    const cancelBtnText = 'Discharge changes';\n    const confirmBtnText = 'Return to the form!';\n\n    const confirmCb = () => {\n      unblockRouting();\n    };\n\n    const cancelCb = () => {\n      //discharge all changes and clear app changes status\n      // window.location.reload();\n      console.log(history);\n    };\n\n    dialogBox({\n      msg,\n      cancelBtnText,\n      confirmBtnText,\n      confirmCb,\n      cancelCb\n    });\n  } else {\n    //no chnages\n    setUpdates(null);\n  }\n};\nexport const saveChangesOnLeave = async (initilState, state, getState, http //api call\n) => {\n  try {\n    if (JSON.stringify(state) !== JSON.stringify(initilState)) {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      await axios.post(http, JSON.stringify(state), config);\n      await getState();\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/utils/handleUnsavedChanges.js"],"names":["axios","dialogBox","alertUnsavedChanges","initilState","state","setStateTab","setUpdates","history","JSON","stringify","push","unblockRouting","block","msg","cancelBtnText","confirmBtnText","confirmCb","cancelCb","console","log","saveChangesOnLeave","getState","http","config","headers","post","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,OAC/BC,WAD+B,EAE/BC,KAF+B,EAG/BC,WAH+B,EAI/BC,UAJ+B,EAK/BC,OAL+B,KAM9B;AACD,MAAIC,IAAI,CAACC,SAAL,CAAeL,KAAf,MAA0BI,IAAI,CAACC,SAAL,CAAeN,WAAf,CAA9B,EAA2D;AACvDI,IAAAA,OAAO,CAACG,IAAR,CAAa,oBAAb;AACAL,IAAAA,WAAW,CAAC,MAAD,CAAX;AACA,UAAMM,cAAc,GAAGJ,OAAO,CAACK,KAAR,EAAvB;AAEA,UAAMC,GAAG,GAAI,2DAAb;AACA,UAAMC,aAAa,GAAG,mBAAtB;AACA,UAAMC,cAAc,GAAG,qBAAvB;;AACA,UAAMC,SAAS,GAAG,MAAM;AACpBL,MAAAA,cAAc;AACjB,KAFD;;AAGA,UAAMM,QAAQ,GAAG,MAAM;AACnB;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACH,KAJD;;AAMAN,IAAAA,SAAS,CAAC;AACNY,MAAAA,GADM;AAENC,MAAAA,aAFM;AAGNC,MAAAA,cAHM;AAINC,MAAAA,SAJM;AAKNC,MAAAA;AALM,KAAD,CAAT;AAOH,GAxBD,MAwBO;AACH;AACAX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,CAnCM;AAqCP,OAAO,MAAMc,kBAAkB,GAAG,OAC9BjB,WAD8B,EAE9BC,KAF8B,EAG9BiB,QAH8B,EAI9BC,IAJ8B,CAIzB;AAJyB,KAK7B;AACD,MAAI;AACA,QAAId,IAAI,CAACC,SAAL,CAAeL,KAAf,MAA0BI,IAAI,CAACC,SAAL,CAAeN,WAAf,CAA9B,EAA2D;AACvD,YAAMoB,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADE,OAAf;AAKA,YAAMxB,KAAK,CAACyB,IAAN,CAAWH,IAAX,EAAiBd,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAjB,EAAwCmB,MAAxC,CAAN;AACA,YAAMF,QAAQ,EAAd;AACH;AACJ,GAVD,CAUE,OAAOK,GAAP,EAAY;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH;AACJ,CAnBM","sourcesContent":["import axios from 'axios';\nimport { dialogBox } from '../../alerts/alertsFuns';\n\nexport const alertUnsavedChanges = async (\n    initilState,\n    state,\n    setStateTab,\n    setUpdates,\n    history\n) => {\n    if (JSON.stringify(state) !== JSON.stringify(initilState)) {\n        history.push('/dashboard/profile');\n        setStateTab('form');\n        const unblockRouting = history.block();\n\n        const msg = `You have some unsaved changes. What would you like to do?`;\n        const cancelBtnText = 'Discharge changes';\n        const confirmBtnText = 'Return to the form!';\n        const confirmCb = () => {\n            unblockRouting();\n        };\n        const cancelCb = () => {\n            //discharge all changes and clear app changes status\n            // window.location.reload();\n            console.log(history);\n        };\n\n        dialogBox({\n            msg,\n            cancelBtnText,\n            confirmBtnText,\n            confirmCb,\n            cancelCb,\n        });\n    } else {\n        //no chnages\n        setUpdates(null);\n    }\n};\n\nexport const saveChangesOnLeave = async (\n    initilState,\n    state,\n    getState,\n    http //api call\n) => {\n    try {\n        if (JSON.stringify(state) !== JSON.stringify(initilState)) {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            await axios.post(http, JSON.stringify(state), config);\n            await getState();\n        }\n    } catch (err) {\n        console.log(err);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}