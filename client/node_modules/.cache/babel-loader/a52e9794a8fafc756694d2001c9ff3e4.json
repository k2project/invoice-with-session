{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst resourceLoader = require(\"../../browser/resource-loader\");\n\nconst {\n  Canvas,\n  reflectURLAttribute\n} = require(\"../../utils\");\n\nclass HTMLImageElementImpl extends HTMLElementImpl {\n  _attrModified(name, value, oldVal) {\n    if (name === \"src\" && value !== oldVal) {\n      const document = this._ownerDocument;\n\n      if (Canvas && document.implementation._hasFeature(\"FetchExternalResources\", \"img\")) {\n        let error;\n\n        if (!this._image) {\n          this._image = new Canvas.Image(); // Install an error handler that just remembers the error. It is then\n          // thrown in the callback of resourceLoader.load() below.\n\n          this._image.onerror = function (err) {\n            error = err;\n          };\n        }\n\n        this._currentSrc = null;\n\n        if (this.hasAttribute(\"src\")) {\n          resourceLoader.load(this, this.src, {}, (data, url, response) => {\n            if (response && response.statusCode !== undefined && response.statusCode !== 200) {\n              throw new Error(\"Status code: \" + response.statusCode);\n            }\n\n            error = null;\n            this._image.source = data;\n\n            if (error) {\n              throw new Error(error);\n            }\n\n            this._currentSrc = value;\n          });\n        } else {\n          this._image.source = undefined;\n        }\n      }\n    }\n\n    super._attrModified(name, value, oldVal);\n  }\n\n  get _accept() {\n    return \"image/png,image/*;q=0.8,*/*;q=0.5\";\n  }\n\n  get src() {\n    return reflectURLAttribute(this, \"src\");\n  }\n\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n\n  get srcset() {\n    return conversions.USVString(this.getAttribute(\"srcset\"));\n  }\n\n  set srcset(value) {\n    this.setAttribute(\"srcset\", value);\n  }\n\n  get height() {\n    // Just like on browsers, if no width / height is defined, we fall back on the\n    // dimensions of the internal image data.\n    return this.hasAttribute(\"height\") ? conversions[\"unsigned long\"](this.getAttribute(\"height\")) : this.naturalHeight;\n  }\n\n  set height(V) {\n    this.setAttribute(\"height\", String(V));\n  }\n\n  get width() {\n    return this.hasAttribute(\"width\") ? conversions[\"unsigned long\"](this.getAttribute(\"width\")) : this.naturalWidth;\n  }\n\n  set width(V) {\n    this.setAttribute(\"width\", String(V));\n  }\n\n  get naturalHeight() {\n    return this._image ? this._image.height : 0;\n  }\n\n  get naturalWidth() {\n    return this._image ? this._image.width : 0;\n  }\n\n  get complete() {\n    return Boolean(this._image && this._image.complete);\n  }\n\n  get currentSrc() {\n    return this._currentSrc || \"\";\n  }\n\n  get lowsrc() {\n    return reflectURLAttribute(this, \"lowsrc\");\n  }\n\n  set lowsrc(value) {\n    this.setAttribute(\"lowsrc\", value);\n  }\n\n  get longDesc() {\n    return reflectURLAttribute(this, \"longdesc\");\n  }\n\n  set longDesc(value) {\n    this.setAttribute(\"longdesc\", value);\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLImageElementImpl\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLImageElement-impl.js"],"names":["conversions","require","HTMLElementImpl","implementation","resourceLoader","Canvas","reflectURLAttribute","HTMLImageElementImpl","_attrModified","name","value","oldVal","document","_ownerDocument","_hasFeature","error","_image","Image","onerror","err","_currentSrc","hasAttribute","load","src","data","url","response","statusCode","undefined","Error","source","_accept","setAttribute","srcset","USVString","getAttribute","height","naturalHeight","V","String","width","naturalWidth","complete","Boolean","currentSrc","lowsrc","longDesc","module","exports"],"mappings":"AAAA;;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,oBAAD,CAAP,CAA8BE,cAAtD;;AACA,MAAMC,cAAc,GAAGH,OAAO,CAAC,+BAAD,CAA9B;;AACA,MAAM;AAAEI,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAkCL,OAAO,CAAC,aAAD,CAA/C;;AAEA,MAAMM,oBAAN,SAAmCL,eAAnC,CAAmD;AACjDM,EAAAA,aAAa,CAACC,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsB;AACjC,QAAIF,IAAI,KAAK,KAAT,IAAkBC,KAAK,KAAKC,MAAhC,EAAwC;AACtC,YAAMC,QAAQ,GAAG,KAAKC,cAAtB;;AACA,UAAIR,MAAM,IAAIO,QAAQ,CAACT,cAAT,CAAwBW,WAAxB,CAAoC,wBAApC,EAA8D,KAA9D,CAAd,EAAoF;AAClF,YAAIC,KAAJ;;AACA,YAAI,CAAC,KAAKC,MAAV,EAAkB;AAChB,eAAKA,MAAL,GAAc,IAAIX,MAAM,CAACY,KAAX,EAAd,CADgB,CAEhB;AACA;;AACA,eAAKD,MAAL,CAAYE,OAAZ,GAAsB,UAAUC,GAAV,EAAe;AACnCJ,YAAAA,KAAK,GAAGI,GAAR;AACD,WAFD;AAGD;;AACD,aAAKC,WAAL,GAAmB,IAAnB;;AACA,YAAI,KAAKC,YAAL,CAAkB,KAAlB,CAAJ,EAA8B;AAC5BjB,UAAAA,cAAc,CAACkB,IAAf,CAAoB,IAApB,EAA0B,KAAKC,GAA/B,EAAoC,EAApC,EAAwC,CAACC,IAAD,EAAOC,GAAP,EAAYC,QAAZ,KAAyB;AAC/D,gBAAIA,QAAQ,IAAIA,QAAQ,CAACC,UAAT,KAAwBC,SAApC,IAAiDF,QAAQ,CAACC,UAAT,KAAwB,GAA7E,EAAkF;AAChF,oBAAM,IAAIE,KAAJ,CAAU,kBAAkBH,QAAQ,CAACC,UAArC,CAAN;AACD;;AACDZ,YAAAA,KAAK,GAAG,IAAR;AACA,iBAAKC,MAAL,CAAYc,MAAZ,GAAqBN,IAArB;;AACA,gBAAIT,KAAJ,EAAW;AACT,oBAAM,IAAIc,KAAJ,CAAUd,KAAV,CAAN;AACD;;AACD,iBAAKK,WAAL,GAAmBV,KAAnB;AACD,WAVD;AAWD,SAZD,MAYO;AACL,eAAKM,MAAL,CAAYc,MAAZ,GAAqBF,SAArB;AACD;AACF;AACF;;AAED,UAAMpB,aAAN,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,MAAjC;AACD;;AAED,MAAIoB,OAAJ,GAAc;AACZ,WAAO,mCAAP;AACD;;AAED,MAAIR,GAAJ,GAAU;AACR,WAAOjB,mBAAmB,CAAC,IAAD,EAAO,KAAP,CAA1B;AACD;;AAED,MAAIiB,GAAJ,CAAQb,KAAR,EAAe;AACb,SAAKsB,YAAL,CAAkB,KAAlB,EAAyBtB,KAAzB;AACD;;AAED,MAAIuB,MAAJ,GAAa;AACX,WAAOjC,WAAW,CAACkC,SAAZ,CAAsB,KAAKC,YAAL,CAAkB,QAAlB,CAAtB,CAAP;AACD;;AAED,MAAIF,MAAJ,CAAWvB,KAAX,EAAkB;AAChB,SAAKsB,YAAL,CAAkB,QAAlB,EAA4BtB,KAA5B;AACD;;AAED,MAAI0B,MAAJ,GAAa;AACX;AACA;AACA,WAAO,KAAKf,YAAL,CAAkB,QAAlB,IACArB,WAAW,CAAC,eAAD,CAAX,CAA6B,KAAKmC,YAAL,CAAkB,QAAlB,CAA7B,CADA,GAEA,KAAKE,aAFZ;AAGD;;AAED,MAAID,MAAJ,CAAWE,CAAX,EAAc;AACZ,SAAKN,YAAL,CAAkB,QAAlB,EAA4BO,MAAM,CAACD,CAAD,CAAlC;AACD;;AAED,MAAIE,KAAJ,GAAY;AACV,WAAO,KAAKnB,YAAL,CAAkB,OAAlB,IACArB,WAAW,CAAC,eAAD,CAAX,CAA6B,KAAKmC,YAAL,CAAkB,OAAlB,CAA7B,CADA,GAEA,KAAKM,YAFZ;AAGD;;AAED,MAAID,KAAJ,CAAUF,CAAV,EAAa;AACX,SAAKN,YAAL,CAAkB,OAAlB,EAA2BO,MAAM,CAACD,CAAD,CAAjC;AACD;;AAED,MAAID,aAAJ,GAAoB;AAClB,WAAO,KAAKrB,MAAL,GAAc,KAAKA,MAAL,CAAYoB,MAA1B,GAAmC,CAA1C;AACD;;AAED,MAAIK,YAAJ,GAAmB;AACjB,WAAO,KAAKzB,MAAL,GAAc,KAAKA,MAAL,CAAYwB,KAA1B,GAAkC,CAAzC;AACD;;AAED,MAAIE,QAAJ,GAAe;AACb,WAAOC,OAAO,CAAC,KAAK3B,MAAL,IAAe,KAAKA,MAAL,CAAY0B,QAA5B,CAAd;AACD;;AAED,MAAIE,UAAJ,GAAiB;AACf,WAAO,KAAKxB,WAAL,IAAoB,EAA3B;AACD;;AAED,MAAIyB,MAAJ,GAAa;AACX,WAAOvC,mBAAmB,CAAC,IAAD,EAAO,QAAP,CAA1B;AACD;;AAED,MAAIuC,MAAJ,CAAWnC,KAAX,EAAkB;AAChB,SAAKsB,YAAL,CAAkB,QAAlB,EAA4BtB,KAA5B;AACD;;AAED,MAAIoC,QAAJ,GAAe;AACb,WAAOxC,mBAAmB,CAAC,IAAD,EAAO,UAAP,CAA1B;AACD;;AAED,MAAIwC,QAAJ,CAAapC,KAAb,EAAoB;AAClB,SAAKsB,YAAL,CAAkB,UAAlB,EAA8BtB,KAA9B;AACD;;AA5GgD;;AA+GnDqC,MAAM,CAACC,OAAP,GAAiB;AACf7C,EAAAA,cAAc,EAAEI;AADD,CAAjB","sourcesContent":["\"use strict\";\nconst conversions = require(\"webidl-conversions\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst resourceLoader = require(\"../../browser/resource-loader\");\nconst { Canvas, reflectURLAttribute } = require(\"../../utils\");\n\nclass HTMLImageElementImpl extends HTMLElementImpl {\n  _attrModified(name, value, oldVal) {\n    if (name === \"src\" && value !== oldVal) {\n      const document = this._ownerDocument;\n      if (Canvas && document.implementation._hasFeature(\"FetchExternalResources\", \"img\")) {\n        let error;\n        if (!this._image) {\n          this._image = new Canvas.Image();\n          // Install an error handler that just remembers the error. It is then\n          // thrown in the callback of resourceLoader.load() below.\n          this._image.onerror = function (err) {\n            error = err;\n          };\n        }\n        this._currentSrc = null;\n        if (this.hasAttribute(\"src\")) {\n          resourceLoader.load(this, this.src, {}, (data, url, response) => {\n            if (response && response.statusCode !== undefined && response.statusCode !== 200) {\n              throw new Error(\"Status code: \" + response.statusCode);\n            }\n            error = null;\n            this._image.source = data;\n            if (error) {\n              throw new Error(error);\n            }\n            this._currentSrc = value;\n          });\n        } else {\n          this._image.source = undefined;\n        }\n      }\n    }\n\n    super._attrModified(name, value, oldVal);\n  }\n\n  get _accept() {\n    return \"image/png,image/*;q=0.8,*/*;q=0.5\";\n  }\n\n  get src() {\n    return reflectURLAttribute(this, \"src\");\n  }\n\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n\n  get srcset() {\n    return conversions.USVString(this.getAttribute(\"srcset\"));\n  }\n\n  set srcset(value) {\n    this.setAttribute(\"srcset\", value);\n  }\n\n  get height() {\n    // Just like on browsers, if no width / height is defined, we fall back on the\n    // dimensions of the internal image data.\n    return this.hasAttribute(\"height\") ?\n           conversions[\"unsigned long\"](this.getAttribute(\"height\")) :\n           this.naturalHeight;\n  }\n\n  set height(V) {\n    this.setAttribute(\"height\", String(V));\n  }\n\n  get width() {\n    return this.hasAttribute(\"width\") ?\n           conversions[\"unsigned long\"](this.getAttribute(\"width\")) :\n           this.naturalWidth;\n  }\n\n  set width(V) {\n    this.setAttribute(\"width\", String(V));\n  }\n\n  get naturalHeight() {\n    return this._image ? this._image.height : 0;\n  }\n\n  get naturalWidth() {\n    return this._image ? this._image.width : 0;\n  }\n\n  get complete() {\n    return Boolean(this._image && this._image.complete);\n  }\n\n  get currentSrc() {\n    return this._currentSrc || \"\";\n  }\n\n  get lowsrc() {\n    return reflectURLAttribute(this, \"lowsrc\");\n  }\n\n  set lowsrc(value) {\n    this.setAttribute(\"lowsrc\", value);\n  }\n\n  get longDesc() {\n    return reflectURLAttribute(this, \"longdesc\");\n  }\n\n  set longDesc(value) {\n    this.setAttribute(\"longdesc\", value);\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLImageElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}