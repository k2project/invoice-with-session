{"ast":null,"code":"export const dateUX = date => {\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return date.toLocaleDateString('en-US', options);\n};\n\nconst isToday = d => {\n  d = new Date(d);\n  const today = new Date();\n  return d.getDate() == today.getDate() && d.getMonth() == today.getMonth() && d.getFullYear() == today.getFullYear();\n};\n\nconst getTime = d => {\n  d = new Date(d);\n  let hr = d.getHours();\n  let min = d.getMinutes();\n\n  if (min < 10) {\n    min = '0' + min;\n  }\n\n  var ampm = 'am';\n\n  if (hr > 12) {\n    hr -= 12;\n    ampm = 'pm';\n  }\n\n  return hr + ':' + min + ampm;\n};\n\nconst msPassedToday = () => {\n  const t = new Date();\n  return t.getMilliseconds() + t.getSeconds() * 1000 + t.getMinutes() * 6e4 + t.getHours() * 3.6e6;\n};\n\nconst wasYesterday = date => {\n  const msInADay = 8.64e7;\n  const msToday = +msPassedToday();\n  date = new Date(date).getTime();\n  const today = new Date().getTime();\n  return date > today - msToday - msInADay && date < today - msToday;\n};\n\nexport const getDateAndTimeUX = date => {\n  const t = getTime(date);\n  if (isToday(date)) return ' today at ' + t;\n  if (wasYesterday(date)) return ' yesterday at ' + t;\n  return ' on ' + dateUX(date) + ' at ' + t;\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/utils/dates.js"],"names":["dateUX","date","options","weekday","year","month","day","toLocaleDateString","isToday","d","Date","today","getDate","getMonth","getFullYear","getTime","hr","getHours","min","getMinutes","ampm","msPassedToday","t","getMilliseconds","getSeconds","wasYesterday","msInADay","msToday","getDateAndTimeUX"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAIC,IAAD,IAAU;AAC5B,QAAMC,OAAO,GAAG;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,IAAI,EAAE,SAFM;AAGZC,IAAAA,KAAK,EAAE,MAHK;AAIZC,IAAAA,GAAG,EAAE;AAJO,GAAhB;AAMA,SAAOL,IAAI,CAACM,kBAAL,CAAwB,OAAxB,EAAiCL,OAAjC,CAAP;AACH,CARM;;AASP,MAAMM,OAAO,GAAIC,CAAD,IAAO;AACnBA,EAAAA,CAAC,GAAG,IAAIC,IAAJ,CAASD,CAAT,CAAJ;AACA,QAAME,KAAK,GAAG,IAAID,IAAJ,EAAd;AACA,SACID,CAAC,CAACG,OAAF,MAAeD,KAAK,CAACC,OAAN,EAAf,IACAH,CAAC,CAACI,QAAF,MAAgBF,KAAK,CAACE,QAAN,EADhB,IAEAJ,CAAC,CAACK,WAAF,MAAmBH,KAAK,CAACG,WAAN,EAHvB;AAKH,CARD;;AASA,MAAMC,OAAO,GAAIN,CAAD,IAAO;AACnBA,EAAAA,CAAC,GAAG,IAAIC,IAAJ,CAASD,CAAT,CAAJ;AACA,MAAIO,EAAE,GAAGP,CAAC,CAACQ,QAAF,EAAT;AACA,MAAIC,GAAG,GAAGT,CAAC,CAACU,UAAF,EAAV;;AACA,MAAID,GAAG,GAAG,EAAV,EAAc;AACVA,IAAAA,GAAG,GAAG,MAAMA,GAAZ;AACH;;AACD,MAAIE,IAAI,GAAG,IAAX;;AACA,MAAIJ,EAAE,GAAG,EAAT,EAAa;AACTA,IAAAA,EAAE,IAAI,EAAN;AACAI,IAAAA,IAAI,GAAG,IAAP;AACH;;AACD,SAAOJ,EAAE,GAAG,GAAL,GAAWE,GAAX,GAAiBE,IAAxB;AACH,CAbD;;AAcA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAMC,CAAC,GAAG,IAAIZ,IAAJ,EAAV;AACA,SACIY,CAAC,CAACC,eAAF,KACAD,CAAC,CAACE,UAAF,KAAiB,IADjB,GAEAF,CAAC,CAACH,UAAF,KAAiB,GAFjB,GAGAG,CAAC,CAACL,QAAF,KAAe,KAJnB;AAMH,CARD;;AASA,MAAMQ,YAAY,GAAIxB,IAAD,IAAU;AAC3B,QAAMyB,QAAQ,GAAG,MAAjB;AACA,QAAMC,OAAO,GAAG,CAACN,aAAa,EAA9B;AACApB,EAAAA,IAAI,GAAG,IAAIS,IAAJ,CAAST,IAAT,EAAec,OAAf,EAAP;AACA,QAAMJ,KAAK,GAAG,IAAID,IAAJ,GAAWK,OAAX,EAAd;AACA,SAAOd,IAAI,GAAGU,KAAK,GAAGgB,OAAR,GAAkBD,QAAzB,IAAqCzB,IAAI,GAAGU,KAAK,GAAGgB,OAA3D;AACH,CAND;;AAOA,OAAO,MAAMC,gBAAgB,GAAI3B,IAAD,IAAU;AACtC,QAAMqB,CAAC,GAAGP,OAAO,CAACd,IAAD,CAAjB;AACA,MAAIO,OAAO,CAACP,IAAD,CAAX,EAAmB,OAAO,eAAeqB,CAAtB;AACnB,MAAIG,YAAY,CAACxB,IAAD,CAAhB,EAAwB,OAAO,mBAAmBqB,CAA1B;AACxB,SAAO,SAAStB,MAAM,CAACC,IAAD,CAAf,GAAwB,MAAxB,GAAiCqB,CAAxC;AACH,CALM","sourcesContent":["export const dateUX = (date) => {\n    const options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    };\n    return date.toLocaleDateString('en-US', options);\n};\nconst isToday = (d) => {\n    d = new Date(d);\n    const today = new Date();\n    return (\n        d.getDate() == today.getDate() &&\n        d.getMonth() == today.getMonth() &&\n        d.getFullYear() == today.getFullYear()\n    );\n};\nconst getTime = (d) => {\n    d = new Date(d);\n    let hr = d.getHours();\n    let min = d.getMinutes();\n    if (min < 10) {\n        min = '0' + min;\n    }\n    var ampm = 'am';\n    if (hr > 12) {\n        hr -= 12;\n        ampm = 'pm';\n    }\n    return hr + ':' + min + ampm;\n};\nconst msPassedToday = () => {\n    const t = new Date();\n    return (\n        t.getMilliseconds() +\n        t.getSeconds() * 1000 +\n        t.getMinutes() * 6e4 +\n        t.getHours() * 3.6e6\n    );\n};\nconst wasYesterday = (date) => {\n    const msInADay = 8.64e7;\n    const msToday = +msPassedToday();\n    date = new Date(date).getTime();\n    const today = new Date().getTime();\n    return date > today - msToday - msInADay && date < today - msToday;\n};\nexport const getDateAndTimeUX = (date) => {\n    const t = getTime(date);\n    if (isToday(date)) return ' today at ' + t;\n    if (wasYesterday(date)) return ' yesterday at ' + t;\n    return ' on ' + dateUX(date) + ' at ' + t;\n};\n"]},"metadata":{},"sourceType":"module"}