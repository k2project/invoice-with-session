{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nfunction HTMLDataListElement() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(HTMLDataListElement.prototype, HTMLElement.interface.prototype);\nObject.setPrototypeOf(HTMLDataListElement, HTMLElement.interface);\nObject.defineProperty(HTMLDataListElement, \"prototype\", {\n  value: HTMLDataListElement.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(HTMLDataListElement.prototype, Symbol.toStringTag, {\n  value: \"HTMLDataListElement\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLDataListElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLDataListElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLDataListElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLDataListElement,\n  expose: {\n    Window: {\n      HTMLDataListElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLDataListElement-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/HTMLDataListElement.js"],"names":["conversions","require","utils","impl","implSymbol","HTMLElement","HTMLDataListElement","TypeError","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","Symbol","toStringTag","iface","_mixedIntoPredicates","is","obj","hasOwn","Impl","implementation","isMixedInto","module","exports","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nfunction HTMLDataListElement() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(HTMLDataListElement.prototype, HTMLElement.interface.prototype);\nObject.setPrototypeOf(HTMLDataListElement, HTMLElement.interface);\n\nObject.defineProperty(HTMLDataListElement, \"prototype\", {\n  value: HTMLDataListElement.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(HTMLDataListElement.prototype, Symbol.toStringTag, {\n  value: \"HTMLDataListElement\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLDataListElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLDataListElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLDataListElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLDataListElement,\n  expose: {\n    Window: { HTMLDataListElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLDataListElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}