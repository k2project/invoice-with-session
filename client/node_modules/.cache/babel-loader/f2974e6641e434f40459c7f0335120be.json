{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/NavSubmenu.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\n\nconst NavSubmenu = ({\n  companies\n}) => {\n  useEffect(() => {\n    //grade sublink bg shade\n    //orange color rgb: (235,147,70)\n    const subLinks = document.querySelectorAll('.dashboard-subnav__link ');\n    const max = subLinks.length;\n    Array.from(subLinks).forEach((el, index) => {\n      let opacity = (max - index) / max + 0.1;\n      el.style.backgroundColor = `rgba(235,147,70,${opacity})`;\n    }); //show links when url -> /dashboard/companies/\n\n    if (/^\\/dashboard\\/companies/.test(window.location.pathname)) {\n      subLinks.forEach((link, index) => {\n        link.style.display = 'flex';\n        link.style.top = `-${index * 10}px`;\n        setTimeout(() => {\n          link.style.top = '0px';\n        }, index * 500);\n      });\n    } else {\n      subLinks.forEach(link => link.style.display = 'none');\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dashboard-subnav__list\",\n    \"aria-label\": \"companies list - dashboard submenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, companies.map(company => {\n    const {\n      _id,\n      details\n    } = company;\n    const name = details.find(input => input.label === 'Name').value;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: _id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/dashboard/companies/${_id}`,\n      className: \"dashboard-subnav__link tile \",\n      activeClassName: \"dashboard-subnav__link--is-active\",\n      onMouseDown: e => e.preventDefault(),\n      onClick: () => {\n        // document\n        //     .getElementById('companies-link')\n        //     .classList.add(\n        //         'dashboard__link--is-active'\n        //     );\n        setAlert(`${name} is now desplayed on the page `, 'success');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, name));\n  }));\n};\n\nNavSubmenu.propTypes = {\n  companies: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  companies: state.companies.companies\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(NavSubmenu);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/NavSubmenu.js"],"names":["React","useEffect","PropTypes","NavLink","Link","connect","setAlert","NavSubmenu","companies","subLinks","document","querySelectorAll","max","length","Array","from","forEach","el","index","opacity","style","backgroundColor","test","window","location","pathname","link","display","top","setTimeout","map","company","_id","details","name","find","input","label","value","e","preventDefault","propTypes","array","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\n\nconst NavSubmenu = ({ companies }) => {\n    useEffect(() => {\n        //grade sublink bg shade\n        //orange color rgb: (235,147,70)\n        const subLinks = document.querySelectorAll('.dashboard-subnav__link ');\n        const max = subLinks.length;\n        Array.from(subLinks).forEach((el, index) => {\n            let opacity = (max - index) / max + 0.1;\n            el.style.backgroundColor = `rgba(235,147,70,${opacity})`;\n        });\n        //show links when url -> /dashboard/companies/\n        if (/^\\/dashboard\\/companies/.test(window.location.pathname)) {\n            subLinks.forEach((link, index) => {\n                link.style.display = 'flex';\n                link.style.top = `-${index * 10}px`;\n                setTimeout(() => {\n                    link.style.top = '0px';\n                }, index * 500);\n            });\n        } else {\n            subLinks.forEach((link) => (link.style.display = 'none'));\n        }\n    });\n\n    return (\n        <ul\n            className='dashboard-subnav__list'\n            aria-label='companies list - dashboard submenu'\n        >\n            {companies.map((company) => {\n                const { _id, details } = company;\n                const name = details.find((input) => input.label === 'Name')\n                    .value;\n                return (\n                    <li key={_id}>\n                        <Link\n                            to={`/dashboard/companies/${_id}`}\n                            className='dashboard-subnav__link tile '\n                            activeClassName='dashboard-subnav__link--is-active'\n                            onMouseDown={(e) => e.preventDefault()}\n                            onClick={() => {\n                                // document\n                                //     .getElementById('companies-link')\n                                //     .classList.add(\n                                //         'dashboard__link--is-active'\n                                //     );\n                                setAlert(\n                                    `${name} is now desplayed on the page `,\n                                    'success'\n                                );\n                            }}\n                        >\n                            {name}\n                        </Link>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n\nNavSubmenu.propTypes = {\n    companies: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n    companies: state.companies.companies,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavSubmenu);\n"]},"metadata":{},"sourceType":"module"}