{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyUpdate.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { companyInitDetails } from '../addCompany/companyInitDetails';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { getInputValueByLabel } from '../../components/form/utils/customFormQueries';\nimport { getAllCompanies } from '../../redux/actions/companies';\nexport const CompanyUpdate = ({\n  company,\n  getAllCompanies\n}) => {\n  let companyName = getInputValueByLabel(company.details, 'Name');\n  const formData = {\n    details: company.details,\n    http: '/api/companies/',\n    url: '/dashboard/companies/',\n    cb: getAllCompanies,\n    msg: `${companyName || 'Company'} has been updated successfully.`\n  };\n  return /*#__PURE__*/React.createElement(CustomBuiltForm, {\n    data: formData || companyInitDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  });\n};\nCompanyUpdate.propTypes = {\n  company: PropTypes.object.isRequired,\n  getAllCompanies: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  company: state.companies.company\n});\n\nconst mapDispatchToProps = {\n  getAllCompanies\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyUpdate);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyUpdate.js"],"names":["React","useEffect","Fragment","PropTypes","connect","companyInitDetails","CustomBuiltForm","getInputValueByLabel","getAllCompanies","CompanyUpdate","company","companyName","details","formData","http","url","cb","msg","propTypes","object","isRequired","func","mapStateToProps","state","companies","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,SAASC,oBAAT,QAAqC,+CAArC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWF,EAAAA;AAAX,CAAD,KAAkC;AAC3D,MAAIG,WAAW,GAAGJ,oBAAoB,CAACG,OAAO,CAACE,OAAT,EAAkB,MAAlB,CAAtC;AAEA,QAAMC,QAAQ,GAAG;AACbD,IAAAA,OAAO,EAAEF,OAAO,CAACE,OADJ;AAEbE,IAAAA,IAAI,EAAE,iBAFO;AAGbC,IAAAA,GAAG,EAAE,uBAHQ;AAIbC,IAAAA,EAAE,EAAER,eAJS;AAKbS,IAAAA,GAAG,EAAG,GAAEN,WAAW,IAAI,SAAU;AALpB,GAAjB;AAOA,sBAAO,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEE,QAAQ,IAAIR,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAXM;AAYPI,aAAa,CAACS,SAAd,GAA0B;AACtBR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,MAAV,CAAiBC,UADJ;AAEtBZ,EAAAA,eAAe,EAAEL,SAAS,CAACkB;AAFL,CAA1B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCb,EAAAA,OAAO,EAAEa,KAAK,CAACC,SAAN,CAAgBd;AADO,CAAZ,CAAxB;;AAIA,MAAMe,kBAAkB,GAAG;AACvBjB,EAAAA;AADuB,CAA3B;AAIA,eAAeJ,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,aAA7C,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { companyInitDetails } from '../addCompany/companyInitDetails';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { getInputValueByLabel } from '../../components/form/utils/customFormQueries';\nimport { getAllCompanies } from '../../redux/actions/companies';\n\nexport const CompanyUpdate = ({ company, getAllCompanies }) => {\n    let companyName = getInputValueByLabel(company.details, 'Name');\n\n    const formData = {\n        details: company.details,\n        http: '/api/companies/',\n        url: '/dashboard/companies/',\n        cb: getAllCompanies,\n        msg: `${companyName || 'Company'} has been updated successfully.`,\n    };\n    return <CustomBuiltForm data={formData || companyInitDetails} />;\n};\nCompanyUpdate.propTypes = {\n    company: PropTypes.object.isRequired,\n    getAllCompanies: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    company: state.companies.company,\n});\n\nconst mapDispatchToProps = {\n    getAllCompanies,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyUpdate);\n"]},"metadata":{},"sourceType":"module"}