{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/components/TasksDisplayTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../../redux/actions/messages';\nimport { setCurrentTask } from '../../../redux/actions/session';\nimport { updateCompanyArr } from '../../../redux/actions/companies';\nimport arrowIcon from '../../../imgs/icons/arrow.png';\nimport updateIcon from '../../../imgs/icons/updateIcon.png';\nimport deleteIcon from '../../../imgs/icons/deleteIcon.png';\nimport calendarIcon from '../../../imgs/icons/calendar.png';\nimport { moveItemUpOrDown, toggleIncludedInInvoice, deleteItem } from '../utils/displayTableFun';\nimport { date_DD_MM_YYYY } from '../../calendar/dates';\n\nconst TasksDisplayTable = ({\n  currentCompany,\n  tasks,\n  updateCompanyArr,\n  currentTask,\n  setCurrentTask,\n  setAlert\n}) => {\n  const [tableState, setTableState] = useState([]);\n  useEffect(() => {\n    setTableState(tasks);\n    console.log(document.querySelector('tr button'));\n  }, [tasks]);\n  useEffect(() => {\n    const trArr = Array.from(document.querySelectorAll('.tasks-table tr'));\n\n    if (currentTask) {\n      trArr.forEach(tr => {\n        if (tr.getAttribute('id') !== currentTask._id) {\n          tr.style.display = 'none';\n        }\n      });\n    } else {\n      trArr.forEach(tr => tr.style.display = 'grid');\n    }\n  }, [currentTask]);\n\n  const updateState = tasks => {\n    updateCompanyArr('tasks', tasks, currentCompany);\n  };\n\n  const updateTask = (e, task) => {\n    setCurrentTask(task);\n    const firstInput = document.querySelector('.task-form #description');\n    firstInput.focus();\n    firstInput.scrollIntoView();\n  };\n\n  const deleteTask = async (e, id) => {\n    setCurrentTask(null);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      await axios.put(`/api/companies/task/${currentCompany}`, JSON.stringify({\n        id\n      }), config);\n      deleteItem(id, tableState, setTableState, updateState);\n      setAlert('Task has been deleted successfully.', 'success', null, false);\n    } catch (err) {\n      setAlert(\"We are sorry, but couldn't delete the task.\", 'danger', null, false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"tasks-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"caption\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Current tasks list.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Use arrows to move items up and down the list. By default all items will be included in a new invoice form and remove from the list once the invoice is created.\")), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"sr-only\",\n    id: \"task-table-tr-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Created at\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Task description\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Item Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Rate\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Tax\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Add task to a new invoice\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Move Item Up\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Move Item Down\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Update Task\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Delete Task\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    id: \"tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, tableState.map((item, index, arr) => /*#__PURE__*/React.createElement(\"tr\", {\n    \"data-details-index\": index,\n    key: item._id,\n    className: \"tile\",\n    id: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__date\",\n    title: date_DD_MM_YYYY(item.createdAt),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: calendarIcon,\n    alt: `Created at ${date_DD_MM_YYYY(item.createdAt)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, date_DD_MM_YYYY(item.createdAt).slice(0, 2))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, item.description), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, item.rate), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, item.tax), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__btn update\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    title: \"Update task\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: e => {\n      updateTask(e, item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: updateIcon,\n    alt: \"Update task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__btn delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    title: \"Delete task\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: e => {\n      deleteTask(e, item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: deleteIcon,\n    alt: \"Delete task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__btn included\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    title: item.addToInvoice ? 'Item will be included in the new invoice.' : ' Item will NOT be included in the new invoice.',\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => {\n      toggleIncludedInInvoice(index, tableState, setTableState, updateState);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, item.addToInvoice ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 37\n    }\n  }, \"+\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  }, \"-\"))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, index !== 0 && /*#__PURE__*/React.createElement(\"button\", {\n    onMouseDown: e => e.preventDefault(),\n    className: \"arrow-up\",\n    title: \"Move item up\",\n    onClick: e => moveItemUpOrDown(e, 'up', tableState, setTableState, updateState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: arrowIcon,\n    alt: \"move item up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, index !== arr.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onMouseDown: e => e.preventDefault(),\n    className: \"arrow-down\",\n    title: \"Move item down\",\n    onClick: e => moveItemUpOrDown(e, 'down', tableState, setTableState, updateState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: arrowIcon,\n    alt: \"move item up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  })))))));\n};\n\nTasksDisplayTable.propTypes = {\n  currentCompany: PropTypes.string,\n  tasks: PropTypes.array,\n  setAlert: PropTypes.func,\n  setCurrentTask: PropTypes.func,\n  updateCompanyArr: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  currentCompany: state.session.currentCompany,\n  currentTask: state.session.currentTask,\n  tasks: state.companies.find(c => c._id === state.session.currentCompany).tasks\n});\n\nconst mapDispatchToProps = {\n  setAlert,\n  updateCompanyArr,\n  setCurrentTask\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksDisplayTable);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/components/TasksDisplayTable.js"],"names":["React","useState","useEffect","PropTypes","axios","connect","setAlert","setCurrentTask","updateCompanyArr","arrowIcon","updateIcon","deleteIcon","calendarIcon","moveItemUpOrDown","toggleIncludedInInvoice","deleteItem","date_DD_MM_YYYY","TasksDisplayTable","currentCompany","tasks","currentTask","tableState","setTableState","console","log","document","querySelector","trArr","Array","from","querySelectorAll","forEach","tr","getAttribute","_id","style","display","updateState","updateTask","e","task","firstInput","focus","scrollIntoView","deleteTask","id","config","headers","put","JSON","stringify","err","map","item","index","arr","createdAt","slice","description","qty","rate","tax","preventDefault","addToInvoice","length","propTypes","string","array","func","mapStateToProps","state","session","companies","find","c","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../../redux/actions/messages';\nimport { setCurrentTask } from '../../../redux/actions/session';\nimport { updateCompanyArr } from '../../../redux/actions/companies';\nimport arrowIcon from '../../../imgs/icons/arrow.png';\nimport updateIcon from '../../../imgs/icons/updateIcon.png';\nimport deleteIcon from '../../../imgs/icons/deleteIcon.png';\nimport calendarIcon from '../../../imgs/icons/calendar.png';\nimport {\n    moveItemUpOrDown,\n    toggleIncludedInInvoice,\n    deleteItem,\n} from '../utils/displayTableFun';\nimport { date_DD_MM_YYYY } from '../../calendar/dates';\n\nconst TasksDisplayTable = ({\n    currentCompany,\n    tasks,\n    updateCompanyArr,\n    currentTask,\n    setCurrentTask,\n    setAlert,\n}) => {\n    const [tableState, setTableState] = useState([]);\n    useEffect(() => {\n        setTableState(tasks);\n        console.log(document.querySelector('tr button'));\n    }, [tasks]);\n    useEffect(() => {\n        const trArr = Array.from(document.querySelectorAll('.tasks-table tr'));\n        if (currentTask) {\n            trArr.forEach((tr) => {\n                if (tr.getAttribute('id') !== currentTask._id) {\n                    tr.style.display = 'none';\n                }\n            });\n        } else {\n            trArr.forEach((tr) => (tr.style.display = 'grid'));\n        }\n    }, [currentTask]);\n\n    const updateState = (tasks) => {\n        updateCompanyArr('tasks', tasks, currentCompany);\n    };\n    const updateTask = (e, task) => {\n        setCurrentTask(task);\n        const firstInput = document.querySelector('.task-form #description');\n        firstInput.focus();\n        firstInput.scrollIntoView();\n    };\n    const deleteTask = async (e, id) => {\n        setCurrentTask(null);\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            await axios.put(\n                `/api/companies/task/${currentCompany}`,\n                JSON.stringify({ id }),\n                config\n            );\n            deleteItem(id, tableState, setTableState, updateState);\n            setAlert(\n                'Task has been deleted successfully.',\n                'success',\n                null,\n                false\n            );\n        } catch (err) {\n            setAlert(\n                \"We are sorry, but couldn't delete the task.\",\n                'danger',\n                null,\n                false\n            );\n        }\n    };\n\n    return (\n        <table className='tasks-table'>\n            <caption>\n                <b>Current tasks list.</b>\n                <p>\n                    Use arrows to move items up and down the list. By default\n                    all items will be included in a new invoice form and remove\n                    from the list once the invoice is created.\n                </p>\n            </caption>\n            <thead>\n                <tr className='sr-only' id='task-table-tr-head'>\n                    <th scope='col'>Created at</th>\n                    <th scope='col'>Task description</th>\n                    <th scope='col'>Item Quantity</th>\n                    <th scope='col'>Rate</th>\n                    <th scope='col'>Tax</th>\n                    <th scope='col'>Add task to a new invoice</th>\n                    <th scope='col'>Move Item Up</th>\n                    <th scope='col'>Move Item Down</th>\n                    <th scope='col'>Update Task</th>\n                    <th scope='col'>Delete Task</th>\n                </tr>\n            </thead>\n            <tbody id='tbody'>\n                {tableState.map((item, index, arr) => (\n                    <tr\n                        data-details-index={index}\n                        key={item._id}\n                        className='tile'\n                        id={item._id}\n                    >\n                        <td\n                            className='td__date'\n                            title={date_DD_MM_YYYY(item.createdAt)}\n                        >\n                            <img\n                                src={calendarIcon}\n                                alt={`Created at ${date_DD_MM_YYYY(\n                                    item.createdAt\n                                )}`}\n                            />\n                            <span aria-hidden='true'>\n                                {date_DD_MM_YYYY(item.createdAt).slice(0, 2)}\n                            </span>\n                        </td>\n                        <th scope='row'>{item.description}</th>\n                        <td className='td__value'>{item.qty}</td>\n                        <td className='td__value'>{item.rate}</td>\n                        <td className='td__value'>{item.tax}</td>\n                        <td className='td__btn update'>\n                            <button\n                                title='Update task'\n                                onMouseDown={(e) => e.preventDefault()}\n                                onClick={(e) => {\n                                    updateTask(e, item);\n                                }}\n                            >\n                                <img src={updateIcon} alt='Update task' />\n                            </button>\n                        </td>\n                        <td className='td__btn delete'>\n                            <button\n                                title='Delete task'\n                                onMouseDown={(e) => e.preventDefault()}\n                                onClick={(e) => {\n                                    deleteTask(e, item._id);\n                                }}\n                            >\n                                <img src={deleteIcon} alt='Delete task' />\n                            </button>\n                        </td>\n                        <td className='td__btn included'>\n                            <button\n                                title={\n                                    item.addToInvoice\n                                        ? 'Item will be included in the new invoice.'\n                                        : ' Item will NOT be included in the new invoice.'\n                                }\n                                onMouseDown={(e) => e.preventDefault()}\n                                onClick={() => {\n                                    toggleIncludedInInvoice(\n                                        index,\n                                        tableState,\n                                        setTableState,\n                                        updateState\n                                    );\n                                }}\n                            >\n                                {item.addToInvoice ? (\n                                    <span>&#43;</span>\n                                ) : (\n                                    <span>&#45;</span>\n                                )}\n                            </button>\n                        </td>\n                        <td className='td__btn'>\n                            {index !== 0 && (\n                                <button\n                                    onMouseDown={(e) => e.preventDefault()}\n                                    className='arrow-up'\n                                    title='Move item up'\n                                    onClick={(e) =>\n                                        moveItemUpOrDown(\n                                            e,\n                                            'up',\n                                            tableState,\n                                            setTableState,\n                                            updateState\n                                        )\n                                    }\n                                >\n                                    <img src={arrowIcon} alt='move item up' />\n                                </button>\n                            )}\n                        </td>\n                        <td className='td__btn'>\n                            {index !== arr.length - 1 && (\n                                <button\n                                    onMouseDown={(e) => e.preventDefault()}\n                                    className='arrow-down'\n                                    title='Move item down'\n                                    onClick={(e) =>\n                                        moveItemUpOrDown(\n                                            e,\n                                            'down',\n                                            tableState,\n                                            setTableState,\n                                            updateState\n                                        )\n                                    }\n                                >\n                                    <img src={arrowIcon} alt='move item up' />\n                                </button>\n                            )}\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n};\nTasksDisplayTable.propTypes = {\n    currentCompany: PropTypes.string,\n    tasks: PropTypes.array,\n    setAlert: PropTypes.func,\n    setCurrentTask: PropTypes.func,\n    updateCompanyArr: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    currentCompany: state.session.currentCompany,\n    currentTask: state.session.currentTask,\n    tasks: state.companies.find((c) => c._id === state.session.currentCompany)\n        .tasks,\n});\nconst mapDispatchToProps = {\n    setAlert,\n    updateCompanyArr,\n    setCurrentTask,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksDisplayTable);\n"]},"metadata":{},"sourceType":"module"}