{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst {\n  childrenByHTMLLocalName\n} = require(\"../helpers/traversal\");\n\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\n\nconst DOMException = require(\"domexception\");\n\nclass HTMLTableSectionElementImpl extends HTMLElementImpl {\n  get rows() {\n    if (!this._rows) {\n      this._rows = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => childrenByHTMLLocalName(this, \"tr\")\n      });\n    }\n\n    return this._rows;\n  }\n\n  insertRow(index) {\n    if (index < -1 || index > this.rows.length) {\n      throw new DOMException(\"Cannot insert a row at an index that is less than -1 or greater than the number of \" + \"existing rows\", \"IndexSizeError\");\n    }\n\n    const tr = this._ownerDocument.createElement(\"tr\");\n\n    if (index === -1 || index === this.rows.length) {\n      this.appendChild(tr);\n    } else {\n      const beforeTR = this.rows.item(index);\n      this.insertBefore(tr, beforeTR);\n    }\n\n    return tr;\n  }\n\n  deleteRow(index) {\n    if (index < -1 || index >= this.rows.length) {\n      throw new DOMException(`Cannot delete a row at index ${index}, where no row exists`, \"IndexSizeError\");\n    }\n\n    if (index === -1) {\n      if (this.rows.length > 0) {\n        const tr = this.rows.item(this.rows.length - 1);\n        this.removeChild(tr);\n      }\n    } else {\n      const tr = this.rows.item(index);\n      this.removeChild(tr);\n    }\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLTableSectionElementImpl\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableSectionElement-impl.js"],"names":["HTMLElementImpl","require","implementation","childrenByHTMLLocalName","HTMLCollection","DOMException","HTMLTableSectionElementImpl","rows","_rows","createImpl","element","query","insertRow","index","length","tr","_ownerDocument","createElement","appendChild","beforeTR","item","insertBefore","deleteRow","removeChild","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,cAAtD;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA8BF,OAAO,CAAC,sBAAD,CAA3C;;AACA,MAAMG,cAAc,GAAGH,OAAO,CAAC,6BAAD,CAA9B;;AACA,MAAMI,YAAY,GAAGJ,OAAO,CAAC,cAAD,CAA5B;;AAEA,MAAMK,2BAAN,SAA0CN,eAA1C,CAA0D;AACxD,MAAIO,IAAJ,GAAW;AACT,QAAI,CAAC,KAAKC,KAAV,EAAiB;AACf,WAAKA,KAAL,GAAaJ,cAAc,CAACK,UAAf,CAA0B,EAA1B,EAA8B;AACzCC,QAAAA,OAAO,EAAE,IADgC;AAEzCC,QAAAA,KAAK,EAAE,MAAMR,uBAAuB,CAAC,IAAD,EAAO,IAAP;AAFK,OAA9B,CAAb;AAID;;AACD,WAAO,KAAKK,KAAZ;AACD;;AAEDI,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACf,QAAIA,KAAK,GAAG,CAAC,CAAT,IAAcA,KAAK,GAAG,KAAKN,IAAL,CAAUO,MAApC,EAA4C;AAC1C,YAAM,IAAIT,YAAJ,CAAiB,wFACrB,eADI,EACa,gBADb,CAAN;AAED;;AAED,UAAMU,EAAE,GAAG,KAAKC,cAAL,CAAoBC,aAApB,CAAkC,IAAlC,CAAX;;AAEA,QAAIJ,KAAK,KAAK,CAAC,CAAX,IAAgBA,KAAK,KAAK,KAAKN,IAAL,CAAUO,MAAxC,EAAgD;AAC9C,WAAKI,WAAL,CAAiBH,EAAjB;AACD,KAFD,MAEO;AACL,YAAMI,QAAQ,GAAG,KAAKZ,IAAL,CAAUa,IAAV,CAAeP,KAAf,CAAjB;AACA,WAAKQ,YAAL,CAAkBN,EAAlB,EAAsBI,QAAtB;AACD;;AAED,WAAOJ,EAAP;AACD;;AAEDO,EAAAA,SAAS,CAACT,KAAD,EAAQ;AACf,QAAIA,KAAK,GAAG,CAAC,CAAT,IAAcA,KAAK,IAAI,KAAKN,IAAL,CAAUO,MAArC,EAA6C;AAC3C,YAAM,IAAIT,YAAJ,CAAkB,gCAA+BQ,KAAM,uBAAvD,EAA+E,gBAA/E,CAAN;AACD;;AAED,QAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,UAAI,KAAKN,IAAL,CAAUO,MAAV,GAAmB,CAAvB,EAA0B;AACxB,cAAMC,EAAE,GAAG,KAAKR,IAAL,CAAUa,IAAV,CAAe,KAAKb,IAAL,CAAUO,MAAV,GAAmB,CAAlC,CAAX;AACA,aAAKS,WAAL,CAAiBR,EAAjB;AACD;AACF,KALD,MAKO;AACL,YAAMA,EAAE,GAAG,KAAKR,IAAL,CAAUa,IAAV,CAAeP,KAAf,CAAX;AACA,WAAKU,WAAL,CAAiBR,EAAjB;AACD;AACF;;AA3CuD;;AA8C1DS,MAAM,CAACC,OAAP,GAAiB;AACfvB,EAAAA,cAAc,EAAEI;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { childrenByHTMLLocalName } = require(\"../helpers/traversal\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst DOMException = require(\"domexception\");\n\nclass HTMLTableSectionElementImpl extends HTMLElementImpl {\n  get rows() {\n    if (!this._rows) {\n      this._rows = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => childrenByHTMLLocalName(this, \"tr\")\n      });\n    }\n    return this._rows;\n  }\n\n  insertRow(index) {\n    if (index < -1 || index > this.rows.length) {\n      throw new DOMException(\"Cannot insert a row at an index that is less than -1 or greater than the number of \" +\n        \"existing rows\", \"IndexSizeError\");\n    }\n\n    const tr = this._ownerDocument.createElement(\"tr\");\n\n    if (index === -1 || index === this.rows.length) {\n      this.appendChild(tr);\n    } else {\n      const beforeTR = this.rows.item(index);\n      this.insertBefore(tr, beforeTR);\n    }\n\n    return tr;\n  }\n\n  deleteRow(index) {\n    if (index < -1 || index >= this.rows.length) {\n      throw new DOMException(`Cannot delete a row at index ${index}, where no row exists`, \"IndexSizeError\");\n    }\n\n    if (index === -1) {\n      if (this.rows.length > 0) {\n        const tr = this.rows.item(this.rows.length - 1);\n        this.removeChild(tr);\n      }\n    } else {\n      const tr = this.rows.item(index);\n      this.removeChild(tr);\n    }\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLTableSectionElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}