{"ast":null,"code":"\"use strict\";\n\nconst Event = require(\"../generated/Event.js\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nclass HTMLDetailsElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._taskQueue = null;\n  }\n\n  _dispatchToggleEvent() {\n    this._taskQueue = null;\n\n    this._dispatch(Event.createImpl([\"toggle\", {\n      bubbles: false,\n      cancelable: false\n    }], {\n      isTrusted: true\n    }));\n  }\n\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue);\n\n    if (name === \"open\" && this._taskQueue === null) {\n      // Check that the attribute is added or removed, not merely changed\n      if (value !== oldValue && value !== null && oldValue === null || value === null && oldValue !== null) {\n        this._taskQueue = setTimeout(this._dispatchToggleEvent.bind(this), 0);\n      }\n    }\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLDetailsElementImpl\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDetailsElement-impl.js"],"names":["Event","require","HTMLElementImpl","implementation","HTMLDetailsElementImpl","constructor","args","privateData","_taskQueue","_dispatchToggleEvent","_dispatch","createImpl","bubbles","cancelable","isTrusted","_attrModified","name","value","oldValue","setTimeout","bind","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAArB;;AAEA,MAAMC,eAAe,GAAGD,OAAO,CAAC,oBAAD,CAAP,CAA8BE,cAAtD;;AAEA,MAAMC,sBAAN,SAAqCF,eAArC,CAAqD;AACnDG,EAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,EAAoB;AAC7B,UAAMD,IAAN,EAAYC,WAAZ;AAEA,SAAKC,UAAL,GAAkB,IAAlB;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKD,UAAL,GAAkB,IAAlB;;AAEA,SAAKE,SAAL,CAAeV,KAAK,CAACW,UAAN,CACb,CACE,QADF,EAEE;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,UAAU,EAAE;AAA9B,KAFF,CADa,EAKb;AAAEC,MAAAA,SAAS,EAAE;AAAb,KALa,CAAf;AAOD;;AAEDC,EAAAA,aAAa,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAwB;AACnC,UAAMH,aAAN,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,QAAjC;;AAEA,QAAIF,IAAI,KAAK,MAAT,IAAmB,KAAKR,UAAL,KAAoB,IAA3C,EAAiD;AAC/C;AACA,UAAKS,KAAK,KAAKC,QAAV,IAAsBD,KAAK,KAAK,IAAhC,IAAwCC,QAAQ,KAAK,IAAtD,IACCD,KAAK,KAAK,IAAV,IAAkBC,QAAQ,KAAK,IADpC,EAC2C;AACzC,aAAKV,UAAL,GAAkBW,UAAU,CAAC,KAAKV,oBAAL,CAA0BW,IAA1B,CAA+B,IAA/B,CAAD,EAAuC,CAAvC,CAA5B;AACD;AACF;AACF;;AA7BkD;;AAgCrDC,MAAM,CAACC,OAAP,GAAiB;AACfnB,EAAAA,cAAc,EAAEC;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst Event = require(\"../generated/Event.js\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nclass HTMLDetailsElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this._taskQueue = null;\n  }\n\n  _dispatchToggleEvent() {\n    this._taskQueue = null;\n\n    this._dispatch(Event.createImpl(\n      [\n        \"toggle\",\n        { bubbles: false, cancelable: false }\n      ],\n      { isTrusted: true }\n    ));\n  }\n\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue);\n\n    if (name === \"open\" && this._taskQueue === null) {\n      // Check that the attribute is added or removed, not merely changed\n      if ((value !== oldValue && value !== null && oldValue === null) ||\n          (value === null && oldValue !== null)) {\n        this._taskQueue = setTimeout(this._dispatchToggleEvent.bind(this), 0);\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLDetailsElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}