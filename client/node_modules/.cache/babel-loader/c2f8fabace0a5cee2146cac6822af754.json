{"ast":null,"code":"export const formErrorsStyling = arr => {\n  //when password doesnt meet required parameters and doesnt match the confirmation aria on first password gets overide by 'don't match' msg\n  //uniqueErr allows to display first error msg on first password 'Password must be at least 8 characters long and must contain a number and a capital letter.'\n  const uniqueErr = [];\n  arr.length > 0 && arr.forEach(err => {\n    if (err.param) {\n      if (!uniqueErr.includes(err.param)) {\n        uniqueErr.push(err.param);\n        const input = document.getElementById(err.param); // console.log(err.param, input);\n\n        input.classList.add('form__input--err');\n        input.setAttribute('aria-label', `Error:${err.msg}`);\n      }\n    }\n  });\n};\nexport const customInputOnChange = (e, id, formState, setFormState, errors, setErrors) => {\n  // const inputs = document.querySelectorAll('.ci--on-change');\n  const index = formState.findIndex(el => el._id === id);\n  console.log(formState);\n  console.log(inputs, index);\n  formState[index].value = e.target.value;\n  setFormState([...formState]); //remove errors styling related to the input\n  //update errors array\n\n  e.target.classList.remove('form__input--err');\n  e.target.removeAttribute('aria-label');\n  setErrors(errors.filter(err => err.param !== id));\n};\nexport const inputOnChange = (e, state, stateUpdate) => {\n  const name = e.target.name; //remove errors styling related to the input\n  //empty errors array\n\n  e.target.classList.remove('form__input--err');\n  e.target.removeAttribute('aria-label');\n  const errors = state.errors.filter(err => err.param !== name);\n  stateUpdate({ ...state,\n    [name]: e.target.value,\n    errors\n  });\n};\nexport const checkboxOnChange = (e, state, stateUpdate) => {\n  const name = e.target.name; //remove errors styling related to the input\n  //empty errors array\n\n  e.target.classList.remove('form__input--err');\n  e.target.removeAttribute('aria-label');\n  e.target.value = e.target.checked;\n  const errors = state.errors.filter(err => err.param !== name);\n  stateUpdate({ ...state,\n    [name]: e.target.checked,\n    errors\n  });\n};\nexport const updateStateErrors = async (form, state, updateState, errors) => {\n  if (errors) {\n    await updateState({ ...state,\n      errors: [...state.errors, ...errors]\n    });\n    const errorsLinks = form.querySelectorAll('.form__errs a');\n    if (errorsLinks.length > 0) errorsLinks[0].focus();\n    formErrorsStyling(errors);\n  }\n};\nexport const objHasAllPropertyEmpty = obj => {\n  let res = true;\n\n  if (Object.values(obj).length > 0) {\n    Object.values(obj).forEach(value => {\n      if (value) {\n        res = false;\n        return;\n      }\n\n      res = true;\n    });\n  }\n\n  return res;\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/utils/formFuns.js"],"names":["formErrorsStyling","arr","uniqueErr","length","forEach","err","param","includes","push","input","document","getElementById","classList","add","setAttribute","msg","customInputOnChange","e","id","formState","setFormState","errors","setErrors","index","findIndex","el","_id","console","log","inputs","value","target","remove","removeAttribute","filter","inputOnChange","state","stateUpdate","name","checkboxOnChange","checked","updateStateErrors","form","updateState","errorsLinks","querySelectorAll","focus","objHasAllPropertyEmpty","obj","res","Object","values"],"mappings":"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","sourcesContent":["export const formErrorsStyling = (arr) => {\n    //when password doesnt meet required parameters and doesnt match the confirmation aria on first password gets overide by 'don't match' msg\n    //uniqueErr allows to display first error msg on first password 'Password must be at least 8 characters long and must contain a number and a capital letter.'\n    const uniqueErr = [];\n    arr.length > 0 &&\n        arr.forEach((err) => {\n            if (err.param) {\n                if (!uniqueErr.includes(err.param)) {\n                    uniqueErr.push(err.param);\n                    const input = document.getElementById(err.param);\n                    // console.log(err.param, input);\n                    input.classList.add('form__input--err');\n                    input.setAttribute('aria-label', `Error:${err.msg}`);\n                }\n            }\n        });\n};\nexport const customInputOnChange = (\n    e,\n    id,\n    formState,\n    setFormState,\n    errors,\n    setErrors\n) => {\n    // const inputs = document.querySelectorAll('.ci--on-change');\n    const index = formState.findIndex((el) => el._id === id);\n    console.log(formState);\n    console.log(inputs, index);\n\n    formState[index].value = e.target.value;\n    setFormState([...formState]);\n    //remove errors styling related to the input\n    //update errors array\n    e.target.classList.remove('form__input--err');\n    e.target.removeAttribute('aria-label');\n    setErrors(errors.filter((err) => err.param !== id));\n};\nexport const inputOnChange = (e, state, stateUpdate) => {\n    const name = e.target.name;\n    //remove errors styling related to the input\n    //empty errors array\n    e.target.classList.remove('form__input--err');\n    e.target.removeAttribute('aria-label');\n    const errors = state.errors.filter((err) => err.param !== name);\n    stateUpdate({\n        ...state,\n        [name]: e.target.value,\n        errors,\n    });\n};\nexport const checkboxOnChange = (e, state, stateUpdate) => {\n    const name = e.target.name;\n    //remove errors styling related to the input\n    //empty errors array\n    e.target.classList.remove('form__input--err');\n    e.target.removeAttribute('aria-label');\n    e.target.value = e.target.checked;\n    const errors = state.errors.filter((err) => err.param !== name);\n    stateUpdate({\n        ...state,\n        [name]: e.target.checked,\n        errors,\n    });\n};\nexport const updateStateErrors = async (form, state, updateState, errors) => {\n    if (errors) {\n        await updateState({\n            ...state,\n            errors: [...state.errors, ...errors],\n        });\n        const errorsLinks = form.querySelectorAll('.form__errs a');\n        if (errorsLinks.length > 0) errorsLinks[0].focus();\n        formErrorsStyling(errors);\n    }\n};\n\nexport const objHasAllPropertyEmpty = (obj) => {\n    let res = true;\n    if (Object.values(obj).length > 0) {\n        Object.values(obj).forEach((value) => {\n            if (value) {\n                res = false;\n                return;\n            }\n            res = true;\n        });\n    }\n    return res;\n};\n"]},"metadata":{},"sourceType":"module"}