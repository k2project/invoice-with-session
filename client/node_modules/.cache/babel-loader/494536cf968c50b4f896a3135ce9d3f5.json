{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/account/ChangePassword.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\nimport { endSession } from '../../redux/actions/session';\nimport axios from 'axios';\nimport FormInput from '../../components/form/components/FormInput';\nimport FormErrorsDisplay from '../../components/form/components/FormErrorsDisplay';\nimport { formErrorsStyling } from '../../components/form/utils/formFuns';\n\nconst ChangePassword = ({\n  setAlert,\n  endSession\n}) => {\n  const changePassword = async e => {\n    e.preventDefault();\n    const {\n      currentPassword,\n      newPassword,\n      newPasswordConfirmation\n    } = formData;\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const body = JSON.stringify({\n        currentPassword,\n        newPassword,\n        newPasswordConfirmation\n      });\n      await axios.put('/api/user/change-password', body, config);\n      endSession();\n      setAlert('Your password has been changed successfully. Please sign up with a new password.', 'success', 'login page', false);\n      setFormData(initState);\n    } catch (err) {\n      setFormData({ ...formData,\n        errors: err.response.data.errors\n      });\n    }\n  };\n\n  const initState = {\n    currentPassword: '',\n    newPassword: '',\n    newPasswordConfirmation: '',\n    errors: []\n  };\n  const [formData, setFormData] = useState(initState);\n  useEffect(() => {\n    formErrorsStyling(formData.errors);\n  }, [formData.errors]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"change-password account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Change your user password.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Make sure it's at least 7 characters including a number and an uppercase letter.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Upon a successful update you will be redirected to the login page to sign in with the new credentials.\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"tile\",\n    onSubmit: changePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    type: \"password\",\n    name: \"currentPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Enter your current password.\"), /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    type: \"password\",\n    name: \"newPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Enter a new password.\"), /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    type: \"password\",\n    name: \"newPasswordConfirmation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Confirm the new password.\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--danger btn--sibling\",\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Change password\"), (formData.currentPassword.length > 0 || formData.newPassword.length > 0 || formData.newPasswordConfirmation.length > 0) && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => setFormData(initState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Cancel\")), formData.errors.length > 0 && /*#__PURE__*/React.createElement(FormErrorsDisplay, {\n    errors: formData.errors,\n    label: \"Delete account form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }));\n};\n\nChangePassword.propTypes = {\n  setAlert: PropTypes.func,\n  endSession: PropTypes.func\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  setAlert,\n  endSession\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/account/ChangePassword.js"],"names":["React","useEffect","useState","PropTypes","connect","setAlert","endSession","axios","FormInput","FormErrorsDisplay","formErrorsStyling","ChangePassword","changePassword","e","preventDefault","currentPassword","newPassword","newPasswordConfirmation","formData","config","headers","body","JSON","stringify","put","setFormData","initState","err","errors","response","data","length","propTypes","func","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\nimport { endSession } from '../../redux/actions/session';\nimport axios from 'axios';\nimport FormInput from '../../components/form/components/FormInput';\nimport FormErrorsDisplay from '../../components/form/components/FormErrorsDisplay';\nimport { formErrorsStyling } from '../../components/form/utils/formFuns';\n\nconst ChangePassword = ({ setAlert, endSession }) => {\n    const changePassword = async (e) => {\n        e.preventDefault();\n        const {\n            currentPassword,\n            newPassword,\n            newPasswordConfirmation,\n        } = formData;\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n\n            const body = JSON.stringify({\n                currentPassword,\n                newPassword,\n                newPasswordConfirmation,\n            });\n\n            await axios.put('/api/user/change-password', body, config);\n            endSession();\n            setAlert(\n                'Your password has been changed successfully. Please sign up with a new password.',\n                'success',\n                'login page',\n                false\n            );\n            setFormData(initState);\n        } catch (err) {\n            setFormData({\n                ...formData,\n                errors: err.response.data.errors,\n            });\n        }\n    };\n    const initState = {\n        currentPassword: '',\n        newPassword: '',\n        newPasswordConfirmation: '',\n        errors: [],\n    };\n    const [formData, setFormData] = useState(initState);\n    useEffect(() => {\n        formErrorsStyling(formData.errors);\n    }, [formData.errors]);\n    return (\n        <section className='change-password account'>\n            <h2>Change your user password.</h2>\n            <p>\n                Make sure it's at least 7 characters including a number and an\n                uppercase letter.\n            </p>\n            <p>\n                Upon a successful update you will be redirected to the login\n                page to sign in with the new credentials.\n            </p>\n\n            <form className='tile' onSubmit={changePassword}>\n                <FormInput\n                    form={{ formData, setFormData }}\n                    type='password'\n                    name='currentPassword'\n                >\n                    Enter your current password.\n                </FormInput>\n                <FormInput\n                    form={{ formData, setFormData }}\n                    type='password'\n                    name='newPassword'\n                >\n                    Enter a new password.\n                </FormInput>\n                <FormInput\n                    form={{ formData, setFormData }}\n                    type='password'\n                    name='newPasswordConfirmation'\n                >\n                    Confirm the new password.\n                </FormInput>\n                <button\n                    className='btn btn--danger btn--sibling'\n                    onMouseDown={(e) => e.preventDefault()}\n                >\n                    Change password\n                </button>\n                {(formData.currentPassword.length > 0 ||\n                    formData.newPassword.length > 0 ||\n                    formData.newPasswordConfirmation.length > 0) && (\n                    <button\n                        className='btn'\n                        onMouseDown={(e) => e.preventDefault()}\n                        onClick={() => setFormData(initState)}\n                    >\n                        Cancel\n                    </button>\n                )}\n            </form>\n            {formData.errors.length > 0 && (\n                <FormErrorsDisplay\n                    errors={formData.errors}\n                    label='Delete account form'\n                />\n            )}\n        </section>\n    );\n};\n\nChangePassword.propTypes = {\n    setAlert: PropTypes.func,\n    endSession: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = {\n    setAlert,\n    endSession,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}