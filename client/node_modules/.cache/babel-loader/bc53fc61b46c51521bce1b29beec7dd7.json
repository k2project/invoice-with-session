{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport { setUpdates } from '../../redux/actions/updates';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges';\n\nclass ProfileUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChanges = this.handleChanges.bind(this);\n    this.clearInitState = this.clearInitState.bind(this);\n    this.updateInitStateToReduxStateOnSubmit = this.updateInitStateToReduxStateOnSubmit.bind(this);\n  }\n\n  handleChanges() {\n    console.log(this.props.authenticated);\n    if (this.props.authenticated) alertUnsavedChanges(this.props.initialState, //initial state\n    this.props.profile.details, //redux updated state\n    '/dashboard/profile?tab=update', this.props.setUpdates, this.props.history);\n  }\n\n  updateInitStateToReduxStateOnSubmit() {\n    this.props.setUpdates(this.props.profile.details);\n  }\n\n  clearInitState() {\n    //on submit clear app updates\n    this.props.setUpdates(null);\n  }\n\n  componentDidMount() {\n    if (this.props.initialState === null) this.props.setUpdates(JSON.parse(JSON.stringify(this.props.profile.details)));\n    window.addEventListener('beforeunload', this.props.clearInitState);\n  }\n\n  componentWillUnmount() {\n    //auth err and logout won't trigger fun\n    if (this.props.authenticated) this.handleChanges();\n    window.removeEventListener('beforeunload', this.props.clearInitState);\n  }\n\n  render() {\n    const formData = {\n      inputs: this.props.profile.details,\n      http: '/api/profile',\n      url: '/dashboard/profile',\n      cb: this.props.getProfile,\n      updateInitStateToReduxStateOnSubmit: this.updateInitStateToReduxStateOnSubmit,\n      //stops firing alertUnsavedChanges on submit\n      msg: 'Your profile has been updated successfully.'\n    };\n    return /*#__PURE__*/React.createElement(CustomBuiltForm, {\n      data: formData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nProfileUpdate.propTypes = {\n  authenticated: PropTypes.bool,\n  details: PropTypes.array,\n  getProfile: PropTypes.func,\n  setAlert: PropTypes.func,\n  setUpdates: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.session.authenticated,\n  profile: state.profile,\n  initialState: state.updates.initialState\n});\n\nconst mapDispatchToProps = {\n  getProfile,\n  setUpdates\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileUpdate));","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js"],"names":["React","Component","withRouter","PropTypes","CustomBuiltForm","connect","getProfile","setUpdates","alertUnsavedChanges","ProfileUpdate","constructor","props","handleChanges","bind","clearInitState","updateInitStateToReduxStateOnSubmit","console","log","authenticated","initialState","profile","details","history","componentDidMount","JSON","parse","stringify","window","addEventListener","componentWillUnmount","removeEventListener","render","formData","inputs","http","url","cb","msg","propTypes","bool","array","func","setAlert","mapStateToProps","state","session","updates","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport { setUpdates } from '../../redux/actions/updates';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges';\n\nclass ProfileUpdate extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChanges = this.handleChanges.bind(this);\n        this.clearInitState = this.clearInitState.bind(this);\n        this.updateInitStateToReduxStateOnSubmit = this.updateInitStateToReduxStateOnSubmit.bind(\n            this\n        );\n    }\n    handleChanges() {\n        console.log(this.props.authenticated);\n        if (this.props.authenticated)\n            alertUnsavedChanges(\n                this.props.initialState, //initial state\n                this.props.profile.details, //redux updated state\n                '/dashboard/profile?tab=update',\n                this.props.setUpdates,\n                this.props.history\n            );\n    }\n    updateInitStateToReduxStateOnSubmit() {\n        this.props.setUpdates(this.props.profile.details);\n    }\n    clearInitState() {\n        //on submit clear app updates\n        this.props.setUpdates(null);\n    }\n    componentDidMount() {\n        if (this.props.initialState === null)\n            this.props.setUpdates(\n                JSON.parse(JSON.stringify(this.props.profile.details))\n            );\n        window.addEventListener('beforeunload', this.props.clearInitState);\n    }\n    componentWillUnmount() {\n        //auth err and logout won't trigger fun\n        if (this.props.authenticated) this.handleChanges();\n        window.removeEventListener('beforeunload', this.props.clearInitState);\n    }\n    render() {\n        const formData = {\n            inputs: this.props.profile.details,\n            http: '/api/profile',\n            url: '/dashboard/profile',\n            cb: this.props.getProfile,\n            updateInitStateToReduxStateOnSubmit: this\n                .updateInitStateToReduxStateOnSubmit, //stops firing alertUnsavedChanges on submit\n            msg: 'Your profile has been updated successfully.',\n        };\n        return <CustomBuiltForm data={formData} />;\n    }\n}\n\nProfileUpdate.propTypes = {\n    authenticated: PropTypes.bool,\n    details: PropTypes.array,\n    getProfile: PropTypes.func,\n    setAlert: PropTypes.func,\n    setUpdates: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    authenticated: state.session.authenticated,\n    profile: state.profile,\n    initialState: state.updates.initialState,\n});\nconst mapDispatchToProps = {\n    getProfile,\n    setUpdates,\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ProfileUpdate));\n"]},"metadata":{},"sourceType":"module"}