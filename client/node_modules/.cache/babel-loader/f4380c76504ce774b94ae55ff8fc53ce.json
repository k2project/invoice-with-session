{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js\";\nimport React, { useEffect, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport { setProfileTab, setSessionUpdatesStatus } from '../../redux/actions/session';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges'; // class ProfileUpdate extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             //deep copy of the redux state on component load\n//             details: JSON.parse(JSON.stringify(props.profile.details)),\n//         };\n//         this.handleChanges = this.handleChanges.bind(this);\n//     }\n//     handleChanges() {\n//         alertUnsavedChanges(\n//             this.state.details, //initial state\n//             this.props.profile.details, //redux updated state\n//             this.props.setProfileTab,\n//             '/dashboard/profile',\n//             this.props.history\n//         );\n//     }\n//     componentDidMount() {\n//         window.addEventListener('beforeunload', this.handleChanges);\n//     }\n//     componentWillUnmount() {\n//         this.handleChanges();\n//         window.removeEventListener('beforeunload', this.handleChanges);\n//     }\n//     render() {\n//         const formData = {\n//             details: this.props.profile.details,\n//             http: '/api/profile',\n//             url: '/dashboard/profile',\n//             cb: this.props.getProfile,\n//             msg: 'Your profile has been updated successfully.',\n//         };\n//         return <CustomBuiltForm data={formData} />;\n//     }\n// }\n\nconst ProfileUpdate = ({\n  profile: {\n    details\n  },\n  getProfile,\n  setProfileTab,\n  setSessionUpdatesStatus,\n  history\n}) => {\n  const formData = {\n    details,\n    http: '/api/profile',\n    url: '/dashboard/profile',\n    cb: getProfile,\n    msg: 'Your profile has been updated successfully.'\n  }; //handle unsaved changes\n\n  useEffect(() => {\n    const initialDetails = JSON.parse(JSON.stringify(details));\n    return () => {\n      alertUnsavedChanges(initialDetails, details, setProfileTab, setSessionUpdatesStatus, '/dashboard/profile', history);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(CustomBuiltForm, {\n    data: formData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }\n  });\n};\n\nProfileUpdate.propTypes = {\n  details: PropTypes.array,\n  getProfile: PropTypes.func,\n  setAlert: PropTypes.func,\n  setProfileTab: PropTypes.func,\n  setSessionUpdatesStatus: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nconst mapDispatchToProps = {\n  getProfile,\n  setProfileTab,\n  setSessionUpdatesStatus\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileUpdate));","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js"],"names":["React","useEffect","Component","withRouter","PropTypes","CustomBuiltForm","connect","getProfile","setProfileTab","setSessionUpdatesStatus","alertUnsavedChanges","ProfileUpdate","profile","details","history","formData","http","url","cb","msg","initialDetails","JSON","parse","stringify","propTypes","array","func","setAlert","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SACIC,aADJ,EAEIC,uBAFJ,QAGO,6BAHP;AAIA,SAASC,mBAAT,QAAoC,kDAApC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG,CAAC;AACnBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF,GADU;AAEnBN,EAAAA,UAFmB;AAGnBC,EAAAA,aAHmB;AAInBC,EAAAA,uBAJmB;AAKnBK,EAAAA;AALmB,CAAD,KAMhB;AACF,QAAMC,QAAQ,GAAG;AACbF,IAAAA,OADa;AAEbG,IAAAA,IAAI,EAAE,cAFO;AAGbC,IAAAA,GAAG,EAAE,oBAHQ;AAIbC,IAAAA,EAAE,EAAEX,UAJS;AAKbY,IAAAA,GAAG,EAAE;AALQ,GAAjB,CADE,CAQF;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,OAAf,CAAX,CAAvB;AACA,WAAO,MAAM;AACTH,MAAAA,mBAAmB,CACfU,cADe,EAEfP,OAFe,EAGfL,aAHe,EAIfC,uBAJe,EAKf,oBALe,EAMfK,OANe,CAAnB;AAQH,KATD;AAUH,GAZQ,EAYN,EAZM,CAAT;AAaA,sBAAO,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CA7BD;;AA+BAJ,aAAa,CAACa,SAAd,GAA0B;AACtBX,EAAAA,OAAO,EAAET,SAAS,CAACqB,KADG;AAEtBlB,EAAAA,UAAU,EAAEH,SAAS,CAACsB,IAFA;AAGtBC,EAAAA,QAAQ,EAAEvB,SAAS,CAACsB,IAHE;AAItBlB,EAAAA,aAAa,EAAEJ,SAAS,CAACsB,IAJH;AAKtBjB,EAAAA,uBAAuB,EAAEL,SAAS,CAACsB;AALb,CAA1B;;AAOA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCjB,EAAAA,OAAO,EAAEiB,KAAK,CAACjB;AADiB,CAAZ,CAAxB;;AAGA,MAAMkB,kBAAkB,GAAG;AACvBvB,EAAAA,UADuB;AAEvBC,EAAAA,aAFuB;AAGvBC,EAAAA;AAHuB,CAA3B;AAKA,eAAeH,OAAO,CAClBsB,eADkB,EAElBE,kBAFkB,CAAP,CAGb3B,UAAU,CAACQ,aAAD,CAHG,CAAf","sourcesContent":["import React, { useEffect, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport {\n    setProfileTab,\n    setSessionUpdatesStatus,\n} from '../../redux/actions/session';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges';\n\n// class ProfileUpdate extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             //deep copy of the redux state on component load\n//             details: JSON.parse(JSON.stringify(props.profile.details)),\n//         };\n//         this.handleChanges = this.handleChanges.bind(this);\n//     }\n//     handleChanges() {\n//         alertUnsavedChanges(\n//             this.state.details, //initial state\n//             this.props.profile.details, //redux updated state\n//             this.props.setProfileTab,\n//             '/dashboard/profile',\n//             this.props.history\n//         );\n//     }\n//     componentDidMount() {\n//         window.addEventListener('beforeunload', this.handleChanges);\n//     }\n//     componentWillUnmount() {\n//         this.handleChanges();\n//         window.removeEventListener('beforeunload', this.handleChanges);\n//     }\n//     render() {\n//         const formData = {\n//             details: this.props.profile.details,\n//             http: '/api/profile',\n//             url: '/dashboard/profile',\n//             cb: this.props.getProfile,\n//             msg: 'Your profile has been updated successfully.',\n//         };\n//         return <CustomBuiltForm data={formData} />;\n//     }\n// }\nconst ProfileUpdate = ({\n    profile: { details },\n    getProfile,\n    setProfileTab,\n    setSessionUpdatesStatus,\n    history,\n}) => {\n    const formData = {\n        details,\n        http: '/api/profile',\n        url: '/dashboard/profile',\n        cb: getProfile,\n        msg: 'Your profile has been updated successfully.',\n    };\n    //handle unsaved changes\n    useEffect(() => {\n        const initialDetails = JSON.parse(JSON.stringify(details));\n        return () => {\n            alertUnsavedChanges(\n                initialDetails,\n                details,\n                setProfileTab,\n                setSessionUpdatesStatus,\n                '/dashboard/profile',\n                history\n            );\n        };\n    }, []);\n    return <CustomBuiltForm data={formData} />;\n};\n\nProfileUpdate.propTypes = {\n    details: PropTypes.array,\n    getProfile: PropTypes.func,\n    setAlert: PropTypes.func,\n    setProfileTab: PropTypes.func,\n    setSessionUpdatesStatus: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\nconst mapDispatchToProps = {\n    getProfile,\n    setProfileTab,\n    setSessionUpdatesStatus,\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ProfileUpdate));\n"]},"metadata":{},"sourceType":"module"}