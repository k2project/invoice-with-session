{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/Profile.js\";\nimport React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Page from '../../components/page/Page';\nimport ProfileSubmenu from './ProfileSubmenu';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/CustomBuiltForm';\nimport infoIcon from '../../imgs/icons/infoIcon.png';\nimport { getProfile } from '../../redux/actions/profile';\n\nconst Profile = ({\n  profile: {\n    details,\n    createdAt,\n    updatedAt\n  },\n  getProfile\n}) => {\n  //detaisl | form\n  const [currentTab, setCurrentTab] = useState('details'); //show form on first login and until its created\n\n  const updated = createdAt !== updatedAt;\n  const formData = {\n    details,\n    http: '/api/profile',\n    url: '/dashboard/profile',\n    cb: getProfile\n  };\n  return /*#__PURE__*/React.createElement(Page, {\n    title: \"Profile Page.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, !updated && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile tile--info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: infoIcon,\n    alt: \"\",\n    className: \"icon--md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }), ' ', /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"Please create your profile.\")), /*#__PURE__*/React.createElement(CustomBuiltForm, {\n    data: { ...formData,\n      msg: 'Your profile has been created successfully.'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  })), updated && /*#__PURE__*/React.createElement(ProfileSubmenu, {\n    setCurrentTab: setCurrentTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }), updated && currentTab === 'details' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile tile--md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"details\"), updated && currentTab === 'form' && /*#__PURE__*/React.createElement(CustomBuiltForm, {\n    data: { ...formData,\n      msg: 'Your profile has been updated successfully.'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }));\n};\n\nProfile.propTypes = {\n  profile: PropTypes.object,\n  getProfile: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nconst mapDispatchToProps = {\n  getProfile\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/Profile.js"],"names":["React","useState","Fragment","PropTypes","connect","Page","ProfileSubmenu","CustomBuiltForm","infoIcon","getProfile","Profile","profile","details","createdAt","updatedAt","currentTab","setCurrentTab","updated","formData","http","url","cb","msg","propTypes","object","func","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,gBAAP;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACbC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,GADI;AAEbL,EAAAA;AAFa,CAAD,KAGV;AACF;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,SAAD,CAA5C,CAFE,CAGF;;AACA,QAAMgB,OAAO,GAAGJ,SAAS,KAAKC,SAA9B;AACA,QAAMI,QAAQ,GAAG;AACbN,IAAAA,OADa;AAEbO,IAAAA,IAAI,EAAE,cAFO;AAGbC,IAAAA,GAAG,EAAE,oBAHQ;AAIbC,IAAAA,EAAE,EAAEZ;AAJS,GAAjB;AAOA,sBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACQ,OAAD,iBACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAET,QAAV;AAAoB,IAAA,GAAG,EAAC,EAAxB;AAA2B,IAAA,SAAS,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EACuD,GADvD,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFJ,CADJ,eAKI,oBAAC,eAAD;AACI,IAAA,IAAI,EAAE,EACF,GAAGU,QADD;AAEFI,MAAAA,GAAG,EAAE;AAFH,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAFR,EAeKL,OAAO,iBAAI,oBAAC,cAAD;AAAgB,IAAA,aAAa,EAAED,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfhB,EAgBKC,OAAO,IAAIF,UAAU,KAAK,SAA1B,iBACG;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBR,EAmBKE,OAAO,IAAIF,UAAU,KAAK,MAA1B,iBACG,oBAAC,eAAD;AACI,IAAA,IAAI,EAAE,EACF,GAAGG,QADD;AAEFI,MAAAA,GAAG,EAAE;AAFH,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBR,CADJ;AA8BH,CA7CD;;AA+CAZ,OAAO,CAACa,SAAR,GAAoB;AAChBZ,EAAAA,OAAO,EAAER,SAAS,CAACqB,MADH;AAEhBf,EAAAA,UAAU,EAAEN,SAAS,CAACsB;AAFN,CAApB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChChB,EAAAA,OAAO,EAAEgB,KAAK,CAAChB;AADiB,CAAZ,CAAxB;;AAGA,MAAMiB,kBAAkB,GAAG;AACvBnB,EAAAA;AADuB,CAA3B;AAGA,eAAeL,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,OAA7C,CAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Page from '../../components/page/Page';\nimport ProfileSubmenu from './ProfileSubmenu';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/CustomBuiltForm';\nimport infoIcon from '../../imgs/icons/infoIcon.png';\nimport { getProfile } from '../../redux/actions/profile';\n\nconst Profile = ({\n    profile: { details, createdAt, updatedAt },\n    getProfile,\n}) => {\n    //detaisl | form\n    const [currentTab, setCurrentTab] = useState('details');\n    //show form on first login and until its created\n    const updated = createdAt !== updatedAt;\n    const formData = {\n        details,\n        http: '/api/profile',\n        url: '/dashboard/profile',\n        cb: getProfile,\n    };\n\n    return (\n        <Page title='Profile Page.'>\n            {!updated && (\n                <Fragment>\n                    <div className='tile tile--info'>\n                        <img src={infoIcon} alt='' className='icon--md' />{' '}\n                        <h2>Please create your profile.</h2>\n                    </div>\n                    <CustomBuiltForm\n                        data={{\n                            ...formData,\n                            msg: 'Your profile has been created successfully.',\n                        }}\n                    />\n                </Fragment>\n            )}\n            {updated && <ProfileSubmenu setCurrentTab={setCurrentTab} />}\n            {updated && currentTab === 'details' && (\n                <div className='tile tile--md'>details</div>\n            )}\n            {updated && currentTab === 'form' && (\n                <CustomBuiltForm\n                    data={{\n                        ...formData,\n                        msg: 'Your profile has been updated successfully.',\n                    }}\n                />\n            )}\n        </Page>\n    );\n};\n\nProfile.propTypes = {\n    profile: PropTypes.object,\n    getProfile: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\nconst mapDispatchToProps = {\n    getProfile,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}