{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/Header.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { setAlert } from '../../redux/actions/messages';\nimport { logoutCurrentUser } from '../../redux/actions/user';\nimport { dateUX, getDateAndTimeUX } from '../../utils/dates';\nexport const Header = ({\n  setAlert,\n  logoutCurrentUser,\n  lastLogin,\n  updated\n}) => {\n  const messages = [`Today is ${dateUX(new Date())}.`, `${updated ? `Welcome back! Your last login was${getDateAndTimeUX(lastLogin)}.` : 'Welcome to <b class=\"font-logo\">invoice</b> . Please create your profile.'}`, 'Happy <b class=\"font-logo\">invoicing</b> !'];\n  const srMessages = messages.map((message, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: `header-message-${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, message);\n  });\n  let interval;\n\n  const runInterval = () => {\n    const tile = document.querySelector('.header__messages');\n    let i = 0;\n    tile.innerHTML = `<span>${messages[1]}</span>`;\n    interval = setInterval(() => {\n      tile.innerHTML = '';\n      tile.innerHTML = `<span>${messages[i]}</span>`;\n      i++;\n      if (i === messages.length) i = 0;\n    }, 5000);\n  };\n\n  useEffect(() => {\n    const tile = document.querySelector('.header__messages');\n    runInterval();\n    tile.addEventListener('mouseenter', () => {\n      clearInterval(interval);\n    });\n    tile.addEventListener('mouseleave', runInterval);\n    return () => {\n      clearInterval(interval);\n      tile.removeEventListener('mouseenter', () => {\n        clearInterval(interval);\n      });\n      tile.removeEventListener('mouseleave', runInterval);\n    };\n  }, []);\n\n  const logout = async () => {\n    try {\n      await axios.delete('/api/user');\n      setAlert('You have been logged out successfully.', 'success', 'login page', false);\n      logoutCurrentUser();\n    } catch (err) {\n      console.log('logout err', err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard/profile\",\n    onMouseDown: e => e.preventDefault(),\n    className: \"header__logo tile\",\n    onClick: () => {\n      setAlert(`Profile's settings have been now desplayed on the page `, 'success');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"invoice\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"tile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Your daily dashboard messages.\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, srMessages)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header__messages\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"header__logout tile\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Sign Out\"));\n};\nHeader.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  logoutCurrentUser: PropTypes.func.isRequired,\n  lastLogin: PropTypes.string,\n  updated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  lastLogin: state.user.lastLogin,\n  updated: state.profile.updated\n});\n\nconst mapDispatchToProps = {\n  setAlert,\n  logoutCurrentUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/Header.js"],"names":["React","useEffect","PropTypes","Link","connect","axios","setAlert","logoutCurrentUser","dateUX","getDateAndTimeUX","Header","lastLogin","updated","messages","Date","srMessages","map","message","i","interval","runInterval","tile","document","querySelector","innerHTML","setInterval","length","addEventListener","clearInterval","removeEventListener","logout","delete","err","console","log","e","preventDefault","propTypes","func","isRequired","string","bool","mapStateToProps","state","user","profile","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,MAAT,EAAiBC,gBAAjB,QAAyC,mBAAzC;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEJ,EAAAA,QAAF;AAAYC,EAAAA,iBAAZ;AAA+BI,EAAAA,SAA/B;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AAC3E,QAAMC,QAAQ,GAAG,CACZ,YAAWL,MAAM,CAAC,IAAIM,IAAJ,EAAD,CAAa,GADlB,EAEZ,GACGF,OAAO,GACA,oCAAmCH,gBAAgB,CAChDE,SADgD,CAElD,GAHD,GAID,2EACT,EARY,EAUb,4CAVa,CAAjB;AAYA,QAAMI,UAAU,GAAGF,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC5C,wBAAO;AAAI,MAAA,GAAG,EAAG,kBAAiBA,CAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCD,OAAjC,CAAP;AACH,GAFkB,CAAnB;AAGA,MAAIE,QAAJ;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtB,UAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAb;AACA,QAAIL,CAAC,GAAG,CAAR;AACAG,IAAAA,IAAI,CAACG,SAAL,GAAkB,SAAQX,QAAQ,CAAC,CAAD,CAAI,SAAtC;AACAM,IAAAA,QAAQ,GAAGM,WAAW,CAAC,MAAM;AACzBJ,MAAAA,IAAI,CAACG,SAAL,GAAiB,EAAjB;AACAH,MAAAA,IAAI,CAACG,SAAL,GAAkB,SAAQX,QAAQ,CAACK,CAAD,CAAI,SAAtC;AACAA,MAAAA,CAAC;AACD,UAAIA,CAAC,KAAKL,QAAQ,CAACa,MAAnB,EAA2BR,CAAC,GAAG,CAAJ;AAC9B,KALqB,EAKnB,IALmB,CAAtB;AAMH,GAVD;;AAYAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoB,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAb;AACAH,IAAAA,WAAW;AACXC,IAAAA,IAAI,CAACM,gBAAL,CAAsB,YAAtB,EAAoC,MAAM;AACtCC,MAAAA,aAAa,CAACT,QAAD,CAAb;AACH,KAFD;AAGAE,IAAAA,IAAI,CAACM,gBAAL,CAAsB,YAAtB,EAAoCP,WAApC;AAEA,WAAO,MAAM;AACTQ,MAAAA,aAAa,CAACT,QAAD,CAAb;AACAE,MAAAA,IAAI,CAACQ,mBAAL,CAAyB,YAAzB,EAAuC,MAAM;AACzCD,QAAAA,aAAa,CAACT,QAAD,CAAb;AACH,OAFD;AAGAE,MAAAA,IAAI,CAACQ,mBAAL,CAAyB,YAAzB,EAAuCT,WAAvC;AACH,KAND;AAOH,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAMU,MAAM,GAAG,YAAY;AACvB,QAAI;AACA,YAAMzB,KAAK,CAAC0B,MAAN,CAAa,WAAb,CAAN;AACAzB,MAAAA,QAAQ,CACJ,wCADI,EAEJ,SAFI,EAGJ,YAHI,EAIJ,KAJI,CAAR;AAMAC,MAAAA,iBAAiB;AACpB,KATD,CASE,OAAOyB,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;AACH;AACJ,GAbD;;AAeA,sBACI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,EAAE,EAAC,oBADP;AAEI,IAAA,WAAW,EAAGG,CAAD,IAAOA,CAAC,CAACC,cAAF,EAFxB;AAGI,IAAA,SAAS,EAAC,mBAHd;AAII,IAAA,OAAO,EAAE,MAAM;AACX9B,MAAAA,QAAQ,CACH,yDADG,EAEJ,SAFI,CAAR;AAIH,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAcI;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKS,UAAL,CAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,mBAAY,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAdJ,eAqBI;AACI,IAAA,SAAS,EAAC,qBADd;AAEI,IAAA,WAAW,EAAGoB,CAAD,IAAOA,CAAC,CAACC,cAAF,EAFxB;AAGI,IAAA,OAAO,EAAEN,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ,CADJ;AA+BH,CA5FM;AA8FPpB,MAAM,CAAC2B,SAAP,GAAmB;AACf/B,EAAAA,QAAQ,EAAEJ,SAAS,CAACoC,IAAV,CAAeC,UADV;AAEfhC,EAAAA,iBAAiB,EAAEL,SAAS,CAACoC,IAAV,CAAeC,UAFnB;AAGf5B,EAAAA,SAAS,EAAET,SAAS,CAACsC,MAHN;AAIf5B,EAAAA,OAAO,EAAEV,SAAS,CAACuC;AAJJ,CAAnB;;AAMA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChChC,EAAAA,SAAS,EAAEgC,KAAK,CAACC,IAAN,CAAWjC,SADU;AAEhCC,EAAAA,OAAO,EAAE+B,KAAK,CAACE,OAAN,CAAcjC;AAFS,CAAZ,CAAxB;;AAIA,MAAMkC,kBAAkB,GAAG;AACvBxC,EAAAA,QADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAKA,eAAeH,OAAO,CAACsC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CpC,MAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { setAlert } from '../../redux/actions/messages';\nimport { logoutCurrentUser } from '../../redux/actions/user';\nimport { dateUX, getDateAndTimeUX } from '../../utils/dates';\n\nexport const Header = ({ setAlert, logoutCurrentUser, lastLogin, updated }) => {\n    const messages = [\n        `Today is ${dateUX(new Date())}.`,\n        `${\n            updated\n                ? `Welcome back! Your last login was${getDateAndTimeUX(\n                      lastLogin\n                  )}.`\n                : 'Welcome to <b class=\"font-logo\">invoice</b> . Please create your profile.'\n        }`,\n\n        'Happy <b class=\"font-logo\">invoicing</b> !',\n    ];\n    const srMessages = messages.map((message, i) => {\n        return <li key={`header-message-${i}`}>{message}</li>;\n    });\n    let interval;\n    const runInterval = () => {\n        const tile = document.querySelector('.header__messages');\n        let i = 0;\n        tile.innerHTML = `<span>${messages[1]}</span>`;\n        interval = setInterval(() => {\n            tile.innerHTML = '';\n            tile.innerHTML = `<span>${messages[i]}</span>`;\n            i++;\n            if (i === messages.length) i = 0;\n        }, 5000);\n    };\n\n    useEffect(() => {\n        const tile = document.querySelector('.header__messages');\n        runInterval();\n        tile.addEventListener('mouseenter', () => {\n            clearInterval(interval);\n        });\n        tile.addEventListener('mouseleave', runInterval);\n\n        return () => {\n            clearInterval(interval);\n            tile.removeEventListener('mouseenter', () => {\n                clearInterval(interval);\n            });\n            tile.removeEventListener('mouseleave', runInterval);\n        };\n    }, []);\n\n    const logout = async () => {\n        try {\n            await axios.delete('/api/user');\n            setAlert(\n                'You have been logged out successfully.',\n                'success',\n                'login page',\n                false\n            );\n            logoutCurrentUser();\n        } catch (err) {\n            console.log('logout err', err);\n        }\n    };\n\n    return (\n        <header className='header'>\n            <Link\n                to='/dashboard/profile'\n                onMouseDown={(e) => e.preventDefault()}\n                className='header__logo tile'\n                onClick={() => {\n                    setAlert(\n                        `Profile's settings have been now desplayed on the page `,\n                        'success'\n                    );\n                }}\n            >\n                invoice\n            </Link>\n            <section className='tile'>\n                <div className='sr-only'>\n                    <h2>Your daily dashboard messages.</h2>\n                    <ul>{srMessages}</ul>\n                </div>\n                <div className='header__messages' aria-hidden='true'></div>\n            </section>\n            <button\n                className='header__logout tile'\n                onMouseDown={(e) => e.preventDefault()}\n                onClick={logout}\n            >\n                Sign Out\n            </button>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    logoutCurrentUser: PropTypes.func.isRequired,\n    lastLogin: PropTypes.string,\n    updated: PropTypes.bool,\n};\nconst mapStateToProps = (state) => ({\n    lastLogin: state.user.lastLogin,\n    updated: state.profile.updated,\n});\nconst mapDispatchToProps = {\n    setAlert,\n    logoutCurrentUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}