{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocItems.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentTask } from '../../../../redux/actions/session';\nimport TaskDisplayTable from '../../../../components/form/components/TasksDisplayTable';\nimport { amountDisplayWithComas } from '../../../../components/form/utils/validations';\nimport TaskForm from '../../../../components/form/forms/TaskForm';\nimport plusIcon from '../../../../imgs/icons/plusIcon.png';\nimport updateIcon from '../../../../imgs/icons/updateIcon.png';\nimport tasksIcon from '../../../../imgs/icons/tasksIcon.png';\n\nconst InvoiceDocItems = ({\n  tasks,\n  setCurrentTask,\n  currentTask\n}) => {\n  //if invoice update add invoice's tasks to the company's tasks arr\n  //display recepient details in the invoice\n  const tasksDetails = tasks.filter(t => t.addToInvoice).map(t => {\n    //before tax\n    let amount = amountDisplayWithComas(t.amount);\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: `i-list-${t._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"invoice__td-desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, t.description), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"invoice__td-qty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, t.qty), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"invoice__td-rate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, t.rate), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"invoice__td-amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, amount), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"invoice__td-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"invoice__btn invice__btn--rel\",\n      title: \"Update Items\",\n      onMouseDown: e => e.preventDefault(),\n      onClick: () => open_task_form_update(t),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: updateIcon,\n      alt: \"Update Items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }))));\n  });\n  const [showTasks, setShowTasks] = useState(true);\n\n  const open_tasks = async () => {\n    if (showTasks === true || tasks.length === 0) return setShowTasks(false);\n    await setShowTasks(true);\n    document.querySelector('.tasks-table tbody').focus();\n  };\n\n  const [showTaskForm, setShowTaskForm] = useState(true);\n\n  const open_task_form = async () => {\n    //toggle show form only when the plus icon clicked again\n    //if form opened for update already, clear inputs\n    setCurrentTask(null);\n    if (!currentTask && showTaskForm === true) return setShowTaskForm(false);\n    await setShowTaskForm(true); //set focus on first button for screen reader users\n\n    document.querySelector('.invoice__task-form input').focus();\n  };\n\n  const open_task_form_update = async task => {\n    //toggle show form on click of the same item update button\n    //different item change input value accordingly\n    if (currentTask && task._id === currentTask._id) {\n      setCurrentTask(null);\n      return setShowTaskForm(false);\n    }\n\n    if (task) await setCurrentTask(task);\n    await setShowTaskForm(true); //set focus on first button for screen reader users\n\n    document.querySelector('.invoice__task-form input').focus();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__items-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Invoice items display.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, tasks.length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"invoice__btn icon_iTasks\",\n    title: \"Display All Items\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: open_tasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tasksIcon,\n    alt: \"Display All Items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"caption\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Invoice item list.\")), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"invoice__td-dec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, \"DESCRIPTION\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"invoice__td-qty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, \"QTY\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"invoice__td-rate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, \"RATE\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"invoice__td-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, \"AMOUNT\")), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"invoice__td-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, \"Update button\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"invoice__items-tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, tasksDetails)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__items-btm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"invoice__btn icon_iAdd-task\",\n    title: \"Add a new item.\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: open_task_form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: plusIcon,\n    alt: \"Add a new item.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  })))), showTasks && tasks.length > 0 && /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Change \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 32\n    }\n  }, \"items list\"), \".\"), /*#__PURE__*/React.createElement(TaskDisplayTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    onClick: () => setShowTasks(false),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"))), showTaskForm && /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__task-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, \"Task Form.\"), \"Add or update an item.\"), /*#__PURE__*/React.createElement(TaskForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    onClick: () => setShowTaskForm(false),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"))));\n};\n\nInvoiceDocItems.propTypes = {\n  tasks: PropTypes.array,\n  setCurrentTask: PropTypes.func,\n  currentTask: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.companies.find(c => c._id === state.session.currentCompany).tasks,\n  currentTask: state.session.currentTask\n});\n\nconst mapDispatchToProps = {\n  setCurrentTask\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocItems);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocItems.js"],"names":["React","useState","useEffect","Fragment","PropTypes","connect","setCurrentTask","TaskDisplayTable","amountDisplayWithComas","TaskForm","plusIcon","updateIcon","tasksIcon","InvoiceDocItems","tasks","currentTask","tasksDetails","filter","t","addToInvoice","map","amount","_id","description","qty","rate","e","preventDefault","open_task_form_update","showTasks","setShowTasks","open_tasks","length","document","querySelector","focus","showTaskForm","setShowTaskForm","open_task_form","task","propTypes","array","func","object","mapStateToProps","state","companies","find","c","session","currentCompany","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentTask } from '../../../../redux/actions/session';\nimport TaskDisplayTable from '../../../../components/form/components/TasksDisplayTable';\nimport { amountDisplayWithComas } from '../../../../components/form/utils/validations';\nimport TaskForm from '../../../../components/form/forms/TaskForm';\nimport plusIcon from '../../../../imgs/icons/plusIcon.png';\nimport updateIcon from '../../../../imgs/icons/updateIcon.png';\nimport tasksIcon from '../../../../imgs/icons/tasksIcon.png';\n\nconst InvoiceDocItems = ({ tasks, setCurrentTask, currentTask }) => {\n    //if invoice update add invoice's tasks to the company's tasks arr\n    //display recepient details in the invoice\n    const tasksDetails = tasks\n        .filter((t) => t.addToInvoice)\n        .map((t) => {\n            //before tax\n            let amount = amountDisplayWithComas(t.amount);\n            return (\n                <tr key={`i-list-${t._id}`}>\n                    <th scope='row' className='invoice__td-desc'>\n                        {t.description}\n                    </th>\n                    <td className='invoice__td-qty'>{t.qty}</td>\n                    <td className='invoice__td-rate'>{t.rate}</td>\n                    {/* <td className='invoice__td-tax'>{t.tax}</td> */}\n                    <td className='invoice__td-amount'>{amount}</td>\n                    <td className='invoice__td-btn'>\n                        <button\n                            type='button'\n                            className='invoice__btn invice__btn--rel'\n                            title='Update Items'\n                            onMouseDown={(e) => e.preventDefault()}\n                            onClick={() => open_task_form_update(t)}\n                        >\n                            <img src={updateIcon} alt='Update Items' />\n                        </button>\n                    </td>\n                </tr>\n            );\n        });\n\n    const [showTasks, setShowTasks] = useState(true);\n    const open_tasks = async () => {\n        if (showTasks === true || tasks.length === 0)\n            return setShowTasks(false);\n        await setShowTasks(true);\n        document.querySelector('.tasks-table tbody').focus();\n    };\n\n    const [showTaskForm, setShowTaskForm] = useState(true);\n    const open_task_form = async () => {\n        //toggle show form only when the plus icon clicked again\n        //if form opened for update already, clear inputs\n        setCurrentTask(null);\n        if (!currentTask && showTaskForm === true)\n            return setShowTaskForm(false);\n        await setShowTaskForm(true);\n        //set focus on first button for screen reader users\n        document.querySelector('.invoice__task-form input').focus();\n    };\n    const open_task_form_update = async (task) => {\n        //toggle show form on click of the same item update button\n        //different item change input value accordingly\n        if (currentTask && task._id === currentTask._id) {\n            setCurrentTask(null);\n            return setShowTaskForm(false);\n        }\n        if (task) await setCurrentTask(task);\n        await setShowTaskForm(true);\n        //set focus on first button for screen reader users\n        document.querySelector('.invoice__task-form input').focus();\n    };\n\n    return (\n        <div className='invoice__items-box'>\n            <section className='invoice__items'>\n                <h2 className='sr-only'>Invoice items display.</h2>\n                <div>\n                    {tasks.length > 0 && (\n                        <button\n                            type='button'\n                            className='invoice__btn icon_iTasks'\n                            title='Display All Items'\n                            onMouseDown={(e) => e.preventDefault()}\n                            onClick={open_tasks}\n                        >\n                            <img src={tasksIcon} alt='Display All Items' />\n                        </button>\n                    )}\n                </div>\n            </section>\n            <section className='invoice__items'>\n                <table>\n                    <caption className='sr-only'>\n                        <b>Invoice item list.</b>\n                    </caption>\n                    <thead>\n                        <tr>\n                            <th scope='col' className='invoice__td-dec'>\n                                <b>DESCRIPTION</b>\n                            </th>\n                            <th scope='col' className='invoice__td-qty'>\n                                <b>QTY</b>\n                            </th>\n                            <th scope='col' className='invoice__td-rate'>\n                                <b>RATE</b>\n                            </th>\n                            {/* <th scope='col' className='invoice__td-tax'>\n                                <b>TAX</b>\n                            </th> */}\n                            <th scope='col' className='invoice__td-amount'>\n                                <b>AMOUNT</b>\n                            </th>\n                            <th className='invoice__td-btn'>\n                                <b className='sr-only'>Update button</b>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody className='invoice__items-tbody'>\n                        {tasksDetails}\n                    </tbody>\n                </table>\n                <div className='invoice__items-btm'>\n                    <button\n                        type='button'\n                        className='invoice__btn icon_iAdd-task'\n                        title='Add a new item.'\n                        onMouseDown={(e) => e.preventDefault()}\n                        onClick={open_task_form}\n                    >\n                        <img src={plusIcon} alt='Add a new item.' />\n                    </button>\n                </div>\n            </section>\n\n            {showTasks && tasks.length > 0 && (\n                <section className='invoice__tasks'>\n                    <h3 className='sr-only'>\n                        Change <strong>items list</strong>.\n                    </h3>\n                    <TaskDisplayTable />\n                    <button\n                        type='button'\n                        className='close'\n                        onClick={() => setShowTasks(false)}\n                        onMouseDown={(e) => e.preventDefault()}\n                    >\n                        <span>&times;</span>\n                    </button>\n                </section>\n            )}\n\n            {showTaskForm && (\n                <section className='invoice__task-form'>\n                    <h3 className='sr-only'>\n                        <strong>Task Form.</strong>Add or update an item.\n                    </h3>\n                    <TaskForm />\n                    <button\n                        type='button'\n                        className='close'\n                        onClick={() => setShowTaskForm(false)}\n                        onMouseDown={(e) => e.preventDefault()}\n                    >\n                        <span>&times;</span>\n                    </button>\n                </section>\n            )}\n        </div>\n    );\n};\n\nInvoiceDocItems.propTypes = {\n    tasks: PropTypes.array,\n    setCurrentTask: PropTypes.func,\n    currentTask: PropTypes.object,\n};\nconst mapStateToProps = (state) => ({\n    tasks: state.companies.find((c) => c._id === state.session.currentCompany)\n        .tasks,\n    currentTask: state.session.currentTask,\n});\nconst mapDispatchToProps = {\n    setCurrentTask,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocItems);\n"]},"metadata":{},"sourceType":"module"}