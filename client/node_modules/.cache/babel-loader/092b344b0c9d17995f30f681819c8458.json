{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Calendar.scss';\nimport { DAYS, DAYS_LEAP, DAYS_OF_THE_WEEK, MONTHS } from './dates';\nexport function Calendar() {\n  const today = new Date();\n  const [date, setDate] = useState(today);\n  const [day, setDay] = useState(date.getDate());\n  const [month, setMonth] = useState(date.getMonth());\n  const [year, setYear] = useState(date.getFullYear());\n  const [startDay, setStartDay] = useState(getStartDayOfMonth(date));\n  useEffect(() => {\n    setDay(date.getDate());\n    setMonth(date.getMonth());\n    setYear(date.getFullYear());\n    setStartDay(getStartDayOfMonth(date));\n  }, [date]);\n\n  function getStartDayOfMonth(date) {\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  }\n\n  const days = isLeapYear ? DAYS_LEAP : DAYS;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setDate(new Date(year, month - 1, day)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, MONTHS[month], \" \", year), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setDate(new Date(year, month + 1, day)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Next\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, DAYS_OF_THE_WEEK.map(d => /*#__PURE__*/React.createElement(\"span\", {\n    key: d,\n    className: \"day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, d))), Array(days[month] + (startDay - 1)).fill(null).map((_, index) => {\n    const d = index - (startDay - 2);\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"day\",\n      key: index,\n      isToday: d === today.getDate(),\n      isSelected: d === day,\n      onClick: () => setDate(new Date(year, month, d)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, d > 0 ? d : '');\n  })));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js"],"names":["React","useState","useEffect","DAYS","DAYS_LEAP","DAYS_OF_THE_WEEK","MONTHS","Calendar","today","Date","date","setDate","day","setDay","getDate","month","setMonth","getMonth","year","setYear","getFullYear","startDay","setStartDay","getStartDayOfMonth","getDay","isLeapYear","days","map","d","Array","fill","_","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Calendar.scss';\nimport { DAYS, DAYS_LEAP, DAYS_OF_THE_WEEK, MONTHS } from './dates';\n\nexport function Calendar() {\n    const today = new Date();\n    const [date, setDate] = useState(today);\n    const [day, setDay] = useState(date.getDate());\n    const [month, setMonth] = useState(date.getMonth());\n    const [year, setYear] = useState(date.getFullYear());\n    const [startDay, setStartDay] = useState(getStartDayOfMonth(date));\n\n    useEffect(() => {\n        setDay(date.getDate());\n        setMonth(date.getMonth());\n        setYear(date.getFullYear());\n        setStartDay(getStartDayOfMonth(date));\n    }, [date]);\n\n    function getStartDayOfMonth(date) {\n        return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    const days = isLeapYear ? DAYS_LEAP : DAYS;\n\n    return (\n        <div>\n            <div>\n                <button onClick={() => setDate(new Date(year, month - 1, day))}>\n                    Prev\n                </button>\n                <div>\n                    {MONTHS[month]} {year}\n                </div>\n                <button onClick={() => setDate(new Date(year, month + 1, day))}>\n                    Next\n                </button>\n            </div>\n            <div>\n                {DAYS_OF_THE_WEEK.map((d) => (\n                    <span key={d} className='day'>\n                        <strong>{d}</strong>\n                    </span>\n                ))}\n                {Array(days[month] + (startDay - 1))\n                    .fill(null)\n                    .map((_, index) => {\n                        const d = index - (startDay - 2);\n                        return (\n                            <span\n                                className='day'\n                                key={index}\n                                isToday={d === today.getDate()}\n                                isSelected={d === day}\n                                onClick={() =>\n                                    setDate(new Date(year, month, d))\n                                }\n                            >\n                                {d > 0 ? d : ''}\n                            </span>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}