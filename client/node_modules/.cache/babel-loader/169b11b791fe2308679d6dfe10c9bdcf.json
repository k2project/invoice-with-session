{"ast":null,"code":"/* This program is free software. It comes without any warranty, to\n     * the extent permitted by applicable law. You can redistribute it\n     * and/or modify it under the terms of the Do What The Fuck You Want\n     * To Public License, Version 2, as published by Sam Hocevar. See\n     * http://www.wtfpl.net/ for more details. */\n'use strict';\n\nmodule.exports = leftPad;\nvar cache = ['', ' ', '  ', '   ', '    ', '     ', '      ', '       ', '        ', '         '];\n\nfunction leftPad(str, len, ch) {\n  // convert `str` to a `string`\n  str = str + ''; // `len` is the `pad`'s length now\n\n  len = len - str.length; // doesn't need to pad\n\n  if (len <= 0) return str; // `ch` defaults to `' '`\n\n  if (!ch && ch !== 0) ch = ' '; // convert `ch` to a `string` cuz it could be a number\n\n  ch = ch + ''; // cache common use cases\n\n  if (ch === ' ' && len < 10) return cache[len] + str; // `pad` starts with an empty string\n\n  var pad = ''; // loop\n\n  while (true) {\n    // add `ch` to `pad` if `len` is odd\n    if (len & 1) pad += ch; // divide `len` by 2, ditch the remainder\n\n    len >>= 1; // \"double\" the `ch` so this operation count grows logarithmically on `len`\n    // each time `ch` is \"doubled\", the `len` would need to be \"doubled\" too\n    // similar to finding a value in binary search tree, hence O(log(n))\n\n    if (len) ch += ch; // `len` is 0, exit the loop\n    else break;\n  } // pad `str`!\n\n\n  return pad + str;\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/left-pad/index.js"],"names":["module","exports","leftPad","cache","str","len","ch","length","pad"],"mappings":"AAAA;;;;;AAKA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA,IAAIC,KAAK,GAAG,CACV,EADU,EAEV,GAFU,EAGV,IAHU,EAIV,KAJU,EAKV,MALU,EAMV,OANU,EAOV,QAPU,EAQV,SARU,EASV,UATU,EAUV,WAVU,CAAZ;;AAaA,SAASD,OAAT,CAAkBE,GAAlB,EAAuBC,GAAvB,EAA4BC,EAA5B,EAAgC;AAC9B;AACAF,EAAAA,GAAG,GAAGA,GAAG,GAAG,EAAZ,CAF8B,CAG9B;;AACAC,EAAAA,GAAG,GAAGA,GAAG,GAAGD,GAAG,CAACG,MAAhB,CAJ8B,CAK9B;;AACA,MAAIF,GAAG,IAAI,CAAX,EAAc,OAAOD,GAAP,CANgB,CAO9B;;AACA,MAAI,CAACE,EAAD,IAAOA,EAAE,KAAK,CAAlB,EAAqBA,EAAE,GAAG,GAAL,CARS,CAS9B;;AACAA,EAAAA,EAAE,GAAGA,EAAE,GAAG,EAAV,CAV8B,CAW9B;;AACA,MAAIA,EAAE,KAAK,GAAP,IAAcD,GAAG,GAAG,EAAxB,EAA4B,OAAOF,KAAK,CAACE,GAAD,CAAL,GAAaD,GAApB,CAZE,CAa9B;;AACA,MAAII,GAAG,GAAG,EAAV,CAd8B,CAe9B;;AACA,SAAO,IAAP,EAAa;AACX;AACA,QAAIH,GAAG,GAAG,CAAV,EAAaG,GAAG,IAAIF,EAAP,CAFF,CAGX;;AACAD,IAAAA,GAAG,KAAK,CAAR,CAJW,CAKX;AACA;AACA;;AACA,QAAIA,GAAJ,EAASC,EAAE,IAAIA,EAAN,CAAT,CACA;AADA,SAEK;AACN,GA3B6B,CA4B9B;;;AACA,SAAOE,GAAG,GAAGJ,GAAb;AACD","sourcesContent":["/* This program is free software. It comes without any warranty, to\n     * the extent permitted by applicable law. You can redistribute it\n     * and/or modify it under the terms of the Do What The Fuck You Want\n     * To Public License, Version 2, as published by Sam Hocevar. See\n     * http://www.wtfpl.net/ for more details. */\n'use strict';\nmodule.exports = leftPad;\n\nvar cache = [\n  '',\n  ' ',\n  '  ',\n  '   ',\n  '    ',\n  '     ',\n  '      ',\n  '       ',\n  '        ',\n  '         '\n];\n\nfunction leftPad (str, len, ch) {\n  // convert `str` to a `string`\n  str = str + '';\n  // `len` is the `pad`'s length now\n  len = len - str.length;\n  // doesn't need to pad\n  if (len <= 0) return str;\n  // `ch` defaults to `' '`\n  if (!ch && ch !== 0) ch = ' ';\n  // convert `ch` to a `string` cuz it could be a number\n  ch = ch + '';\n  // cache common use cases\n  if (ch === ' ' && len < 10) return cache[len] + str;\n  // `pad` starts with an empty string\n  var pad = '';\n  // loop\n  while (true) {\n    // add `ch` to `pad` if `len` is odd\n    if (len & 1) pad += ch;\n    // divide `len` by 2, ditch the remainder\n    len >>= 1;\n    // \"double\" the `ch` so this operation count grows logarithmically on `len`\n    // each time `ch` is \"doubled\", the `len` would need to be \"doubled\" too\n    // similar to finding a value in binary search tree, hence O(log(n))\n    if (len) ch += ch;\n    // `len` is 0, exit the loop\n    else break;\n  }\n  // pad `str`!\n  return pad + str;\n}\n"]},"metadata":{},"sourceType":"script"}