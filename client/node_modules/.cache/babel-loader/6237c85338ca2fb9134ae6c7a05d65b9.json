{"ast":null,"code":"\"use strict\";\n\nconst {\n  mixin\n} = require(\"../../utils\");\n\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\n\nconst NODE_TYPE = require(\"../node-type\");\n\nconst NodeImpl = require(\"./Node-impl\").implementation;\n\nconst NonElementParentNodeImpl = require(\"./NonElementParentNode-impl\").implementation;\n\nconst ParentNodeImpl = require(\"./ParentNode-impl\").implementation;\n\nclass DocumentFragmentImpl extends NodeImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this.nodeType = NODE_TYPE.DOCUMENT_FRAGMENT_NODE;\n  } // This is implemented separately for Document (which has a _ids cache) and DocumentFragment (which does not).\n\n\n  getElementById(id) {\n    if (id === \"\") {\n      return null;\n    }\n\n    for (const descendant of domSymbolTree.treeIterator(this)) {\n      if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE && descendant.getAttributeNS(null, \"id\") === id) {\n        return descendant;\n      }\n    }\n\n    return null;\n  }\n\n}\n\nmixin(DocumentFragmentImpl.prototype, NonElementParentNodeImpl.prototype);\nmixin(DocumentFragmentImpl.prototype, ParentNodeImpl.prototype);\nmodule.exports = {\n  implementation: DocumentFragmentImpl\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/DocumentFragment-impl.js"],"names":["mixin","require","domSymbolTree","NODE_TYPE","NodeImpl","implementation","NonElementParentNodeImpl","ParentNodeImpl","DocumentFragmentImpl","constructor","args","privateData","nodeType","DOCUMENT_FRAGMENT_NODE","getElementById","id","descendant","treeIterator","ELEMENT_NODE","getAttributeNS","prototype","module","exports"],"mappings":"AAAA;;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAYC,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,OAAO,CAAC,+BAAD,CAAjC;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,cAAD,CAAzB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,aAAD,CAAP,CAAuBI,cAAxC;;AACA,MAAMC,wBAAwB,GAAGL,OAAO,CAAC,6BAAD,CAAP,CAAuCI,cAAxE;;AACA,MAAME,cAAc,GAAGN,OAAO,CAAC,mBAAD,CAAP,CAA6BI,cAApD;;AAEA,MAAMG,oBAAN,SAAmCJ,QAAnC,CAA4C;AAC1CK,EAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,EAAoB;AAC7B,UAAMD,IAAN,EAAYC,WAAZ;AAEA,SAAKC,QAAL,GAAgBT,SAAS,CAACU,sBAA1B;AACD,GALyC,CAO1C;;;AACAC,EAAAA,cAAc,CAACC,EAAD,EAAK;AACjB,QAAIA,EAAE,KAAK,EAAX,EAAe;AACb,aAAO,IAAP;AACD;;AAED,SAAK,MAAMC,UAAX,IAAyBd,aAAa,CAACe,YAAd,CAA2B,IAA3B,CAAzB,EAA2D;AACzD,UAAID,UAAU,CAACJ,QAAX,KAAwBT,SAAS,CAACe,YAAlC,IAAkDF,UAAU,CAACG,cAAX,CAA0B,IAA1B,EAAgC,IAAhC,MAA0CJ,EAAhG,EAAoG;AAClG,eAAOC,UAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD;;AApByC;;AAuB5ChB,KAAK,CAACQ,oBAAoB,CAACY,SAAtB,EAAiCd,wBAAwB,CAACc,SAA1D,CAAL;AACApB,KAAK,CAACQ,oBAAoB,CAACY,SAAtB,EAAiCb,cAAc,CAACa,SAAhD,CAAL;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA,cAAc,EAAEG;AADD,CAAjB","sourcesContent":["\"use strict\";\nconst { mixin } = require(\"../../utils\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst NodeImpl = require(\"./Node-impl\").implementation;\nconst NonElementParentNodeImpl = require(\"./NonElementParentNode-impl\").implementation;\nconst ParentNodeImpl = require(\"./ParentNode-impl\").implementation;\n\nclass DocumentFragmentImpl extends NodeImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this.nodeType = NODE_TYPE.DOCUMENT_FRAGMENT_NODE;\n  }\n\n  // This is implemented separately for Document (which has a _ids cache) and DocumentFragment (which does not).\n  getElementById(id) {\n    if (id === \"\") {\n      return null;\n    }\n\n    for (const descendant of domSymbolTree.treeIterator(this)) {\n      if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE && descendant.getAttributeNS(null, \"id\") === id) {\n        return descendant;\n      }\n    }\n\n    return null;\n  }\n}\n\nmixin(DocumentFragmentImpl.prototype, NonElementParentNodeImpl.prototype);\nmixin(DocumentFragmentImpl.prototype, ParentNodeImpl.prototype);\n\nmodule.exports = {\n  implementation: DocumentFragmentImpl\n};\n"]},"metadata":{},"sourceType":"script"}