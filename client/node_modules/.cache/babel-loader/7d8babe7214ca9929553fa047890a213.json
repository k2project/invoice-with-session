{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/NewInvoice.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport InvoiceDoc from './invoiceDoc/InvoiceDoc';\nimport NewInvoiceSubmit from './NewInvoiceSubmit';\n\nclass NewInvoice extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChanges = this.handleChanges.bind(this);\n    this.clearInitState = this.clearInitState.bind(this);\n    this.updateInitStateToReduxStateOnSubmit = this.updateInitStateToReduxStateOnSubmit.bind(this);\n  }\n\n  handleChanges() {\n    alertUnsavedChanges( // this.props.initialState, //initial state\n    this.props.company.details, //redux updated state\n    `/dashboard/companies/${this.props.company._id}?tab=update`, // this.props.setUpdates,\n    this.props.history);\n  }\n\n  updateInitStateToReduxStateOnSubmit() {// this.props.setUpdates(this.props.company.details);\n  }\n\n  clearInitState() {//on submit clear app updates\n    // this.props.setUpdates(null);\n  }\n\n  componentDidMount() {\n    // if (this.props.initialState === null)\n    // this.props.setUpdates(\n    //     JSON.parse(JSON.stringify(this.props.company.details))\n    // );\n    window.addEventListener('beforeunload', this.props.clearInitState);\n  }\n\n  componentWillUnmount() {\n    //auth err and logout won't trigger fun\n    if (this.props.authenticated) this.handleChanges();\n    window.removeEventListener('beforeunload', this.props.clearInitState);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"company-invoice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Create a new invoice.\"), /*#__PURE__*/React.createElement(InvoiceDoc, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NewInvoiceSubmit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nNewInvoice.propTypes = {\n  authenticated: PropTypes.bool,\n  company: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.session.authenticated,\n  company: state.companies.find(c => c._id === state.session.currentCompany)\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NewInvoice));","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/NewInvoice.js"],"names":["React","useState","PropTypes","withRouter","connect","InvoiceDoc","NewInvoiceSubmit","NewInvoice","Component","constructor","props","handleChanges","bind","clearInitState","updateInitStateToReduxStateOnSubmit","alertUnsavedChanges","company","details","_id","history","componentDidMount","window","addEventListener","componentWillUnmount","authenticated","removeEventListener","render","propTypes","bool","object","mapStateToProps","state","session","companies","find","c","currentCompany","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,UAAN,SAAyBC,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,mCAAL,GAA2C,KAAKA,mCAAL,CAAyCF,IAAzC,CACvC,IADuC,CAA3C;AAGH;;AACDD,EAAAA,aAAa,GAAG;AACZI,IAAAA,mBAAmB,EACf;AACA,SAAKL,KAAL,CAAWM,OAAX,CAAmBC,OAFJ,EAEa;AAC3B,4BAAuB,KAAKP,KAAL,CAAWM,OAAX,CAAmBE,GAAI,aAHhC,EAIf;AACA,SAAKR,KAAL,CAAWS,OALI,CAAnB;AAOH;;AACDL,EAAAA,mCAAmC,GAAG,CAClC;AACH;;AACDD,EAAAA,cAAc,GAAG,CACb;AACA;AACH;;AACDO,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACA;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwC,KAAKZ,KAAL,CAAWG,cAAnD;AACH;;AACDU,EAAAA,oBAAoB,GAAG;AACnB;AACA,QAAI,KAAKb,KAAL,CAAWc,aAAf,EAA8B,KAAKb,aAAL;AAC9BU,IAAAA,MAAM,CAACI,mBAAP,CAA2B,cAA3B,EAA2C,KAAKf,KAAL,CAAWG,cAAtD;AACH;;AACDa,EAAAA,MAAM,GAAG;AACL,wBACI;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AA7C8B;;AAgDnCnB,UAAU,CAACoB,SAAX,GAAuB;AACnBH,EAAAA,aAAa,EAAEtB,SAAS,CAAC0B,IADN;AAEnBZ,EAAAA,OAAO,EAAEd,SAAS,CAAC2B;AAFA,CAAvB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,aAAa,EAAEO,KAAK,CAACC,OAAN,CAAcR,aADG;AAEhCR,EAAAA,OAAO,EAAEe,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CACJC,CAAD,IAAOA,CAAC,CAACjB,GAAF,KAAUa,KAAK,CAACC,OAAN,CAAcI,cAD1B;AAFuB,CAAZ,CAAxB;;AAOA,MAAMC,kBAAkB,GAAG,EAA3B;AAEA,eAAejC,OAAO,CAClB0B,eADkB,EAElBO,kBAFkB,CAAP,CAGblC,UAAU,CAACI,UAAD,CAHG,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport InvoiceDoc from './invoiceDoc/InvoiceDoc';\nimport NewInvoiceSubmit from './NewInvoiceSubmit';\n\nclass NewInvoice extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChanges = this.handleChanges.bind(this);\n        this.clearInitState = this.clearInitState.bind(this);\n        this.updateInitStateToReduxStateOnSubmit = this.updateInitStateToReduxStateOnSubmit.bind(\n            this\n        );\n    }\n    handleChanges() {\n        alertUnsavedChanges(\n            // this.props.initialState, //initial state\n            this.props.company.details, //redux updated state\n            `/dashboard/companies/${this.props.company._id}?tab=update`,\n            // this.props.setUpdates,\n            this.props.history\n        );\n    }\n    updateInitStateToReduxStateOnSubmit() {\n        // this.props.setUpdates(this.props.company.details);\n    }\n    clearInitState() {\n        //on submit clear app updates\n        // this.props.setUpdates(null);\n    }\n    componentDidMount() {\n        // if (this.props.initialState === null)\n        // this.props.setUpdates(\n        //     JSON.parse(JSON.stringify(this.props.company.details))\n        // );\n        window.addEventListener('beforeunload', this.props.clearInitState);\n    }\n    componentWillUnmount() {\n        //auth err and logout won't trigger fun\n        if (this.props.authenticated) this.handleChanges();\n        window.removeEventListener('beforeunload', this.props.clearInitState);\n    }\n    render() {\n        return (\n            <section className='company-invoice'>\n                <h2 className='sr-only'>Create a new invoice.</h2>\n                <InvoiceDoc />\n                <NewInvoiceSubmit />\n            </section>\n        );\n    }\n}\n\nNewInvoice.propTypes = {\n    authenticated: PropTypes.bool,\n    company: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.session.authenticated,\n    company: state.companies.find(\n        (c) => c._id === state.session.currentCompany\n    ),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(NewInvoice));\n"]},"metadata":{},"sourceType":"module"}