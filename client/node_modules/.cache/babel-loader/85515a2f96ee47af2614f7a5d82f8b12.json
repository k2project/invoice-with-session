{"ast":null,"code":"import axios from 'axios';\nimport { GET_USER, END_SESS, START_SESS } from './types';\nimport { endSession } from './session';\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  try {\n    const res = await axios.get('/api/user');\n    dispatch({\n      type: GET_USER,\n      user: res.data\n    });\n    dispatch({\n      type: START_SESS\n    });\n  } catch (err) {\n    if (err.response.data.msg === 'AuthError' && getState().session.authenticated) {\n      dispatch(endSession('Your session has expired. Please sign back in.'));\n      return;\n    }\n\n    dispatch({\n      type: END_SESS\n    });\n  }\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/redux/actions/user.js"],"names":["axios","GET_USER","END_SESS","START_SESS","endSession","getCurrentUser","dispatch","getState","res","get","type","user","data","err","response","msg","session","authenticated"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,SAA/C;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9D,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,WAAV,CAAlB;AACAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,QADD;AAELU,MAAAA,IAAI,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAIAN,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACH,GAPD,CAOE,OAAOU,GAAP,EAAY;AACV,QACIA,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG,GAAlB,KAA0B,WAA1B,IACAR,QAAQ,GAAGS,OAAX,CAAmBC,aAFvB,EAGE;AACEX,MAAAA,QAAQ,CACJF,UAAU,CAAC,gDAAD,CADN,CAAR;AAGA;AACH;;AACDE,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACH;AACJ,CApBM","sourcesContent":["import axios from 'axios';\nimport { GET_USER, END_SESS, START_SESS } from './types';\nimport { endSession } from './session';\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n    try {\n        const res = await axios.get('/api/user');\n        dispatch({\n            type: GET_USER,\n            user: res.data,\n        });\n        dispatch({ type: START_SESS });\n    } catch (err) {\n        if (\n            err.response.data.msg === 'AuthError' &&\n            getState().session.authenticated\n        ) {\n            dispatch(\n                endSession('Your session has expired. Please sign back in.')\n            );\n            return;\n        }\n        dispatch({ type: END_SESS });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}