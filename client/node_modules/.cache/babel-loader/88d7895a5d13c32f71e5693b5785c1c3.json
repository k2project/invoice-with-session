{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertBlobPropertyBag = require(\"./BlobPropertyBag.js\").convert;\n\nconst impl = utils.implSymbol;\n\nfunction Blob() {\n  if (new.target === undefined) {\n    throw new TypeError(\"Failed to construct 'Blob'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n\n    if (curArg !== undefined) {\n      if (!utils.isObject(curArg)) {\n        throw new TypeError(\"Failed to construct 'Blob': parameter 1\" + \" is not an iterable object.\");\n      } else {\n        const V = [];\n        const tmp = curArg;\n\n        for (let nextItem of tmp) {\n          if (module.exports.is(nextItem)) {\n            nextItem = utils.implForWrapper(nextItem);\n          } else if (nextItem instanceof ArrayBuffer) {} else if (ArrayBuffer.isView(nextItem)) {} else {\n            nextItem = conversions[\"USVString\"](nextItem, {\n              context: \"Failed to construct 'Blob': parameter 1\" + \"'s element\"\n            });\n          }\n\n          V.push(nextItem);\n        }\n\n        curArg = V;\n      }\n    }\n\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = convertBlobPropertyBag(curArg, {\n      context: \"Failed to construct 'Blob': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  iface.setup(this, args);\n}\n\nObject.defineProperty(Blob, \"prototype\", {\n  value: Blob.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nBlob.prototype.slice = function slice() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n\n    if (curArg !== undefined) {\n      curArg = conversions[\"long long\"](curArg, {\n        context: \"Failed to execute 'slice' on 'Blob': parameter 1\",\n        clamp: true\n      });\n    }\n\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n\n    if (curArg !== undefined) {\n      curArg = conversions[\"long long\"](curArg, {\n        context: \"Failed to execute 'slice' on 'Blob': parameter 2\",\n        clamp: true\n      });\n    }\n\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[2];\n\n    if (curArg !== undefined) {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'slice' on 'Blob': parameter 3\"\n      });\n    }\n\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].slice(...args));\n};\n\nObject.defineProperty(Blob.prototype, \"size\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"size\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Blob.prototype, \"type\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n  value: \"Blob\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'Blob'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Blob.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Blob.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: Blob,\n  expose: {\n    Window: {\n      Blob\n    },\n    Worker: {\n      Blob\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../file-api/Blob-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/Blob.js"],"names":["conversions","require","utils","convertBlobPropertyBag","convert","impl","implSymbol","Blob","new","target","undefined","TypeError","args","curArg","arguments","isObject","V","tmp","nextItem","module","exports","is","implForWrapper","ArrayBuffer","isView","context","push","iface","setup","Object","defineProperty","value","prototype","writable","enumerable","configurable","slice","clamp","tryWrapperForImpl","get","Symbol","toStringTag","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","create","constructorArgs","privateData","createImpl","_internalSetup","wrapperSymbol","init","interface","expose","Window","Worker"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,sBAAsB,GAAGF,OAAO,CAAC,sBAAD,CAAP,CAAgCG,OAA/D;;AACA,MAAMC,IAAI,GAAGH,KAAK,CAACI,UAAnB;;AAEA,SAASC,IAAT,GAAgB;AACd,MAAIC,GAAG,CAACC,MAAJ,KAAeC,SAAnB,EAA8B;AAC5B,UAAM,IAAIC,SAAJ,CACJ,iFAAiF,iCAD7E,CAAN;AAGD;;AACD,QAAMC,IAAI,GAAG,EAAb;AACA;AACE,QAAIC,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;;AACA,QAAID,MAAM,KAAKH,SAAf,EAA0B;AACxB,UAAI,CAACR,KAAK,CAACa,QAAN,CAAeF,MAAf,CAAL,EAA6B;AAC3B,cAAM,IAAIF,SAAJ,CAAc,4CAA4C,6BAA1D,CAAN;AACD,OAFD,MAEO;AACL,cAAMK,CAAC,GAAG,EAAV;AACA,cAAMC,GAAG,GAAGJ,MAAZ;;AACA,aAAK,IAAIK,QAAT,IAAqBD,GAArB,EAA0B;AACxB,cAAIE,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkBH,QAAlB,CAAJ,EAAiC;AAC/BA,YAAAA,QAAQ,GAAGhB,KAAK,CAACoB,cAAN,CAAqBJ,QAArB,CAAX;AACD,WAFD,MAEO,IAAIA,QAAQ,YAAYK,WAAxB,EAAqC,CAC3C,CADM,MACA,IAAIA,WAAW,CAACC,MAAZ,CAAmBN,QAAnB,CAAJ,EAAkC,CACxC,CADM,MACA;AACLA,YAAAA,QAAQ,GAAGlB,WAAW,CAAC,WAAD,CAAX,CAAyBkB,QAAzB,EAAmC;AAC5CO,cAAAA,OAAO,EAAE,4CAA4C;AADT,aAAnC,CAAX;AAGD;;AACDT,UAAAA,CAAC,CAACU,IAAF,CAAOR,QAAP;AACD;;AACDL,QAAAA,MAAM,GAAGG,CAAT;AACD;AACF;;AACDJ,IAAAA,IAAI,CAACc,IAAL,CAAUb,MAAV;AACD;AACD;AACE,QAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;AACAD,IAAAA,MAAM,GAAGV,sBAAsB,CAACU,MAAD,EAAS;AAAEY,MAAAA,OAAO,EAAE;AAAX,KAAT,CAA/B;AACAb,IAAAA,IAAI,CAACc,IAAL,CAAUb,MAAV;AACD;AAEDc,EAAAA,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkBhB,IAAlB;AACD;;AAEDiB,MAAM,CAACC,cAAP,CAAsBvB,IAAtB,EAA4B,WAA5B,EAAyC;AACvCwB,EAAAA,KAAK,EAAExB,IAAI,CAACyB,SAD2B;AAEvCC,EAAAA,QAAQ,EAAE,KAF6B;AAGvCC,EAAAA,UAAU,EAAE,KAH2B;AAIvCC,EAAAA,YAAY,EAAE;AAJyB,CAAzC;;AAOA5B,IAAI,CAACyB,SAAL,CAAeI,KAAf,GAAuB,SAASA,KAAT,GAAiB;AACtC,MAAI,CAAC,IAAD,IAAS,CAACjB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,UAAM,IAAIV,SAAJ,CAAc,oBAAd,CAAN;AACD;;AACD,QAAMC,IAAI,GAAG,EAAb;AACA;AACE,QAAIC,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;;AACA,QAAID,MAAM,KAAKH,SAAf,EAA0B;AACxBG,MAAAA,MAAM,GAAGb,WAAW,CAAC,WAAD,CAAX,CAAyBa,MAAzB,EAAiC;AACxCY,QAAAA,OAAO,EAAE,kDAD+B;AAExCY,QAAAA,KAAK,EAAE;AAFiC,OAAjC,CAAT;AAID;;AACDzB,IAAAA,IAAI,CAACc,IAAL,CAAUb,MAAV;AACD;AACD;AACE,QAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;;AACA,QAAID,MAAM,KAAKH,SAAf,EAA0B;AACxBG,MAAAA,MAAM,GAAGb,WAAW,CAAC,WAAD,CAAX,CAAyBa,MAAzB,EAAiC;AACxCY,QAAAA,OAAO,EAAE,kDAD+B;AAExCY,QAAAA,KAAK,EAAE;AAFiC,OAAjC,CAAT;AAID;;AACDzB,IAAAA,IAAI,CAACc,IAAL,CAAUb,MAAV;AACD;AACD;AACE,QAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;;AACA,QAAID,MAAM,KAAKH,SAAf,EAA0B;AACxBG,MAAAA,MAAM,GAAGb,WAAW,CAAC,WAAD,CAAX,CAAyBa,MAAzB,EAAiC;AAAEY,QAAAA,OAAO,EAAE;AAAX,OAAjC,CAAT;AACD;;AACDb,IAAAA,IAAI,CAACc,IAAL,CAAUb,MAAV;AACD;AACD,SAAOX,KAAK,CAACoC,iBAAN,CAAwB,KAAKjC,IAAL,EAAW+B,KAAX,CAAiB,GAAGxB,IAApB,CAAxB,CAAP;AACD,CAjCD;;AAmCAiB,MAAM,CAACC,cAAP,CAAsBvB,IAAI,CAACyB,SAA3B,EAAsC,MAAtC,EAA8C;AAC5CO,EAAAA,GAAG,GAAG;AACJ,QAAI,CAAC,IAAD,IAAS,CAACpB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIV,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKN,IAAL,EAAW,MAAX,CAAP;AACD,GAP2C;;AAS5C6B,EAAAA,UAAU,EAAE,IATgC;AAU5CC,EAAAA,YAAY,EAAE;AAV8B,CAA9C;AAaAN,MAAM,CAACC,cAAP,CAAsBvB,IAAI,CAACyB,SAA3B,EAAsC,MAAtC,EAA8C;AAC5CO,EAAAA,GAAG,GAAG;AACJ,QAAI,CAAC,IAAD,IAAS,CAACpB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIV,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKN,IAAL,EAAW,MAAX,CAAP;AACD,GAP2C;;AAS5C6B,EAAAA,UAAU,EAAE,IATgC;AAU5CC,EAAAA,YAAY,EAAE;AAV8B,CAA9C;AAaAN,MAAM,CAACC,cAAP,CAAsBvB,IAAI,CAACyB,SAA3B,EAAsCQ,MAAM,CAACC,WAA7C,EAA0D;AACxDV,EAAAA,KAAK,EAAE,MADiD;AAExDE,EAAAA,QAAQ,EAAE,KAF8C;AAGxDC,EAAAA,UAAU,EAAE,KAH4C;AAIxDC,EAAAA,YAAY,EAAE;AAJ0C,CAA1D;AAOA,MAAMR,KAAK,GAAG;AACZ;AACA;AACA;AACAe,EAAAA,oBAAoB,EAAE,EAJV;;AAKZrB,EAAAA,EAAE,CAACsB,GAAD,EAAM;AACN,QAAIA,GAAJ,EAAS;AACP,UAAIzC,KAAK,CAAC0C,MAAN,CAAaD,GAAb,EAAkBtC,IAAlB,KAA2BsC,GAAG,CAACtC,IAAD,CAAH,YAAqBwC,IAAI,CAACC,cAAzD,EAAyE;AACvE,eAAO,IAAP;AACD;;AACD,WAAK,MAAMC,WAAX,IAA0B5B,MAAM,CAACC,OAAP,CAAesB,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACJ,GAAD,CAAf,EAAsB;AACpB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAjBW;;AAkBZK,EAAAA,MAAM,CAACL,GAAD,EAAM;AACV,QAAIA,GAAJ,EAAS;AACP,UAAIA,GAAG,YAAYE,IAAI,CAACC,cAAxB,EAAwC;AACtC,eAAO,IAAP;AACD;;AAED,YAAMG,OAAO,GAAG/C,KAAK,CAACgD,cAAN,CAAqBP,GAArB,CAAhB;;AACA,WAAK,MAAMI,WAAX,IAA0B5B,MAAM,CAACC,OAAP,CAAesB,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACE,OAAD,CAAf,EAA0B;AACxB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAhCW;;AAiCZ7C,EAAAA,OAAO,CAACuC,GAAD,EAAM;AAAElB,IAAAA,OAAO,GAAG;AAAZ,MAAqC,EAA3C,EAA+C;AACpD,QAAIN,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkBsB,GAAlB,CAAJ,EAA4B;AAC1B,aAAOzC,KAAK,CAACoB,cAAN,CAAqBqB,GAArB,CAAP;AACD;;AACD,UAAM,IAAIhC,SAAJ,CAAe,GAAEc,OAAQ,yBAAzB,CAAN;AACD,GAtCW;;AAwCZ0B,EAAAA,MAAM,CAACC,eAAD,EAAkBC,WAAlB,EAA+B;AACnC,QAAIV,GAAG,GAAGd,MAAM,CAACsB,MAAP,CAAc5C,IAAI,CAACyB,SAAnB,CAAV;AACAW,IAAAA,GAAG,GAAG,KAAKf,KAAL,CAAWe,GAAX,EAAgBS,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOV,GAAP;AACD,GA5CW;;AA6CZW,EAAAA,UAAU,CAACF,eAAD,EAAkBC,WAAlB,EAA+B;AACvC,QAAIV,GAAG,GAAGd,MAAM,CAACsB,MAAP,CAAc5C,IAAI,CAACyB,SAAnB,CAAV;AACAW,IAAAA,GAAG,GAAG,KAAKf,KAAL,CAAWe,GAAX,EAAgBS,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOnD,KAAK,CAACoB,cAAN,CAAqBqB,GAArB,CAAP;AACD,GAjDW;;AAkDZY,EAAAA,cAAc,CAACZ,GAAD,EAAM,CAAE,CAlDV;;AAmDZf,EAAAA,KAAK,CAACe,GAAD,EAAMS,eAAN,EAAuBC,WAAvB,EAAoC;AACvC,QAAI,CAACA,WAAL,EAAkBA,WAAW,GAAG,EAAd;AAElBA,IAAAA,WAAW,CAACJ,OAAZ,GAAsBN,GAAtB;;AAEA,SAAKY,cAAL,CAAoBZ,GAApB;;AACAd,IAAAA,MAAM,CAACC,cAAP,CAAsBa,GAAtB,EAA2BtC,IAA3B,EAAiC;AAC/B0B,MAAAA,KAAK,EAAE,IAAIc,IAAI,CAACC,cAAT,CAAwBM,eAAxB,EAAyCC,WAAzC,CADwB;AAE/BpB,MAAAA,QAAQ,EAAE,KAFqB;AAG/BC,MAAAA,UAAU,EAAE,KAHmB;AAI/BC,MAAAA,YAAY,EAAE;AAJiB,KAAjC;AAOAQ,IAAAA,GAAG,CAACtC,IAAD,CAAH,CAAUH,KAAK,CAACsD,aAAhB,IAAiCb,GAAjC;;AACA,QAAIE,IAAI,CAACY,IAAT,EAAe;AACbZ,MAAAA,IAAI,CAACY,IAAL,CAAUd,GAAG,CAACtC,IAAD,CAAb,EAAqBgD,WAArB;AACD;;AACD,WAAOV,GAAP;AACD,GArEW;;AAsEZe,EAAAA,SAAS,EAAEnD,IAtEC;AAuEZoD,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AAAErD,MAAAA;AAAF,KADF;AAENsD,IAAAA,MAAM,EAAE;AAAEtD,MAAAA;AAAF;AAFF;AAvEI,CAAd,C,CA2EG;;AACHY,MAAM,CAACC,OAAP,GAAiBO,KAAjB;;AAEA,MAAMkB,IAAI,GAAG5C,OAAO,CAAC,0BAAD,CAApB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertBlobPropertyBag = require(\"./BlobPropertyBag.js\").convert;\nconst impl = utils.implSymbol;\n\nfunction Blob() {\n  if (new.target === undefined) {\n    throw new TypeError(\n      \"Failed to construct 'Blob'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      if (!utils.isObject(curArg)) {\n        throw new TypeError(\"Failed to construct 'Blob': parameter 1\" + \" is not an iterable object.\");\n      } else {\n        const V = [];\n        const tmp = curArg;\n        for (let nextItem of tmp) {\n          if (module.exports.is(nextItem)) {\n            nextItem = utils.implForWrapper(nextItem);\n          } else if (nextItem instanceof ArrayBuffer) {\n          } else if (ArrayBuffer.isView(nextItem)) {\n          } else {\n            nextItem = conversions[\"USVString\"](nextItem, {\n              context: \"Failed to construct 'Blob': parameter 1\" + \"'s element\"\n            });\n          }\n          V.push(nextItem);\n        }\n        curArg = V;\n      }\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = convertBlobPropertyBag(curArg, { context: \"Failed to construct 'Blob': parameter 2\" });\n    args.push(curArg);\n  }\n\n  iface.setup(this, args);\n}\n\nObject.defineProperty(Blob, \"prototype\", {\n  value: Blob.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nBlob.prototype.slice = function slice() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = conversions[\"long long\"](curArg, {\n        context: \"Failed to execute 'slice' on 'Blob': parameter 1\",\n        clamp: true\n      });\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    if (curArg !== undefined) {\n      curArg = conversions[\"long long\"](curArg, {\n        context: \"Failed to execute 'slice' on 'Blob': parameter 2\",\n        clamp: true\n      });\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[2];\n    if (curArg !== undefined) {\n      curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to execute 'slice' on 'Blob': parameter 3\" });\n    }\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].slice(...args));\n};\n\nObject.defineProperty(Blob.prototype, \"size\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"size\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Blob.prototype, \"type\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n  value: \"Blob\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'Blob'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Blob.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Blob.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: Blob,\n  expose: {\n    Window: { Blob },\n    Worker: { Blob }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../file-api/Blob-impl.js\");\n"]},"metadata":{},"sourceType":"script"}