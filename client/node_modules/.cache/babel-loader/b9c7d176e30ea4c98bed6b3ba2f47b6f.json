{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/alerts/Alert.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { removeAlert } from '../../redux/actions/messages';\n\nconst Alert = ({\n  alerts,\n  removeAlert\n}) => alerts !== null && alerts.length > 0 && alerts.map(alert => /*#__PURE__*/React.createElement(\"div\", {\n  key: alert.id,\n  className: `alert alert--${alert.status} ${alert.hidden ? 'sr-only' : ''}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  role: \"alert\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }\n}, alert.msg, alert.redirection && /*#__PURE__*/React.createElement(\"span\", {\n  className: \"sr-only\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }\n}, `You have been redirected to ${alert.redirection}.`)), !alert.hidden && /*#__PURE__*/React.createElement(\"button\", {\n  className: \"alert__close\",\n  onMouseDown: e => e.preventDefault(),\n  onClick: () => removeAlert(alert.id),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  \"aria-hidden\": \"true\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }\n}, \"\\xD7\"), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"sr-only\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }\n}, \"Close alert\"))));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n  removeAlert: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.messages.alerts\n});\n\nexport default connect(mapStateToProps, {\n  removeAlert\n})(Alert);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/alerts/Alert.js"],"names":["React","PropTypes","connect","removeAlert","Alert","alerts","length","map","alert","id","status","hidden","msg","redirection","e","preventDefault","propTypes","array","isRequired","func","mapStateToProps","state","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUF,EAAAA;AAAV,CAAD,KACVE,MAAM,KAAK,IAAX,IACAA,MAAM,CAACC,MAAP,GAAgB,CADhB,IAEAD,MAAM,CAACE,GAAP,CAAYC,KAAD,iBACP;AACI,EAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,EAAA,SAAS,EAAG,gBAAeD,KAAK,CAACE,MAAO,IACpCF,KAAK,CAACG,MAAN,GAAe,SAAf,GAA2B,EAC9B,EAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMI;AAAK,EAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKH,KAAK,CAACI,GADX,EAEKJ,KAAK,CAACK,WAAN,iBACG;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACM,+BAA8BL,KAAK,CAACK,WAAY,GADtD,CAHR,CANJ,EAcK,CAACL,KAAK,CAACG,MAAP,iBACG;AACI,EAAA,SAAS,EAAC,cADd;AAEI,EAAA,WAAW,EAAGG,CAAD,IAAOA,CAAC,CAACC,cAAF,EAFxB;AAGI,EAAA,OAAO,EAAE,MAAMZ,WAAW,CAACK,KAAK,CAACC,EAAP,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKI;AAAM,iBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,eAMI;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,CAfR,CADJ,CAHJ;;AA+BAL,KAAK,CAACY,SAAN,GAAkB;AACdX,EAAAA,MAAM,EAAEJ,SAAS,CAACgB,KAAV,CAAgBC,UADV;AAEdf,EAAAA,WAAW,EAAEF,SAAS,CAACkB,IAAV,CAAeD;AAFd,CAAlB;;AAIA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChChB,EAAAA,MAAM,EAAEgB,KAAK,CAACC,QAAN,CAAejB;AADS,CAAZ,CAAxB;;AAGA,eAAeH,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,KAA1C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { removeAlert } from '../../redux/actions/messages';\n\nconst Alert = ({ alerts, removeAlert }) =>\n    alerts !== null &&\n    alerts.length > 0 &&\n    alerts.map((alert) => (\n        <div\n            key={alert.id}\n            className={`alert alert--${alert.status} ${\n                alert.hidden ? 'sr-only' : ''\n            }`}\n        >\n            <div role='alert'>\n                {alert.msg}\n                {alert.redirection && (\n                    <span className='sr-only'>\n                        {`You have been redirected to ${alert.redirection}.`}\n                    </span>\n                )}\n            </div>\n            {!alert.hidden && (\n                <button\n                    className='alert__close'\n                    onMouseDown={(e) => e.preventDefault()}\n                    onClick={() => removeAlert(alert.id)}\n                >\n                    <span aria-hidden='true'>&times;</span>\n                    <span className='sr-only'>Close alert</span>\n                </button>\n            )}\n        </div>\n    ));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired,\n    removeAlert: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n    alerts: state.messages.alerts,\n});\nexport default connect(mapStateToProps, { removeAlert })(Alert);\n"]},"metadata":{},"sourceType":"module"}