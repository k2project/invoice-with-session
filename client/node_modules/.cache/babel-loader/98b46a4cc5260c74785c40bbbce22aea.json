{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/Form.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './Form.scss';\nimport AddCustomFields from './AddCustomFields';\nimport RemoveCustomFields from './RemoveCustomFields';\nimport FormInput from './FormInput';\nexport default function Form({\n  fields,\n  url\n}) {\n  const [formState, setFormState] = useState(fields);\n\n  const addCustomToFieldsFormState = field => {\n    const position = field.position;\n    delete field.position;\n    formState.splice(position, 0, field);\n    setFormState([...formState]);\n    console.log(formState[0]);\n  };\n\n  const removeCustomFieldsFromFormState = id => {\n    const newFields = formState.filter(field => field._id !== id);\n    setFormState(newFields);\n  };\n\n  const updateInput = (e, id) => {\n    const inputs = document.querySelectorAll('.form__submit input');\n    const index = Array.from(inputs).findIndex(el => el.getAttribute('id') === id);\n    formState[index].value = e.target.value;\n    setFormState([...formState]);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n  };\n\n  const customFields = formState.filter(field => field.custom);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form form__submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Use this form to create or update the details of this page.\"), \"* Regired fields.\"), formState.map((input, i) => /*#__PURE__*/React.createElement(Fragment, {\n    key: input._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: input._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, i + 1, \". \", input.label), /*#__PURE__*/React.createElement(\"input\", {\n    id: input._id,\n    type: input.inputType,\n    value: input.value,\n    onChange: e => updateInput(e, input._id),\n    className: 'form__input',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--info\",\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddCustomFields, {\n    addCustomToFieldsFormState: addCustomToFieldsFormState,\n    maxPosition: formState.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), customFields.length > 0 && /*#__PURE__*/React.createElement(RemoveCustomFields, {\n    customFields: customFields,\n    removeCustomFieldsFromFormState: removeCustomFieldsFromFormState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/Form.js"],"names":["React","useState","useEffect","Fragment","AddCustomFields","RemoveCustomFields","FormInput","Form","fields","url","formState","setFormState","addCustomToFieldsFormState","field","position","splice","console","log","removeCustomFieldsFromFormState","id","newFields","filter","_id","updateInput","e","inputs","document","querySelectorAll","index","Array","from","findIndex","el","getAttribute","value","target","onSubmit","preventDefault","customFields","custom","map","input","i","label","inputType","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './Form.scss';\nimport AddCustomFields from './AddCustomFields';\nimport RemoveCustomFields from './RemoveCustomFields';\nimport FormInput from './FormInput';\n\nexport default function Form({ fields, url }) {\n    const [formState, setFormState] = useState(fields);\n    const addCustomToFieldsFormState = (field) => {\n        const position = field.position;\n        delete field.position;\n        formState.splice(position, 0, field);\n        setFormState([...formState]);\n        console.log(formState[0]);\n    };\n    const removeCustomFieldsFromFormState = (id) => {\n        const newFields = formState.filter((field) => field._id !== id);\n        setFormState(newFields);\n    };\n    const updateInput = (e, id) => {\n        const inputs = document.querySelectorAll('.form__submit input');\n        const index = Array.from(inputs).findIndex(\n            (el) => el.getAttribute('id') === id\n        );\n        formState[index].value = e.target.value;\n        setFormState([...formState]);\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n    };\n    const customFields = formState.filter((field) => field.custom);\n    return (\n        <form onSubmit={onSubmit} className='form form__submit'>\n            <div>\n                <fieldset>\n                    <legend>\n                        <span className='sr-only'>\n                            Use this form to create or update the details of\n                            this page.\n                        </span>\n                        * Regired fields.\n                    </legend>\n                    {formState.map((input, i) => (\n                        <Fragment key={input._id}>\n                            <label htmlFor={input._id}>\n                                {i + 1}. {input.label}\n                            </label>\n                            <input\n                                id={input._id}\n                                type={input.inputType}\n                                value={input.value}\n                                onChange={(e) => updateInput(e, input._id)}\n                                className={'form__input'}\n                            />\n                        </Fragment>\n                    ))}\n                    <button\n                        className='btn btn--info'\n                        onMouseDown={(e) => e.preventDefault()}\n                    >\n                        Submit\n                    </button>\n                </fieldset>\n            </div>\n            <div>\n                <AddCustomFields\n                    addCustomToFieldsFormState={addCustomToFieldsFormState}\n                    maxPosition={formState.length}\n                />\n                {customFields.length > 0 && (\n                    <RemoveCustomFields\n                        customFields={customFields}\n                        removeCustomFieldsFromFormState={\n                            removeCustomFieldsFromFormState\n                        }\n                    />\n                )}\n            </div>\n        </form>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}