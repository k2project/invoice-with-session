{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js\";\nimport React, { useEffect, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport { setProfileTab, setSessionUpdatesStatus } from '../../redux/actions/session';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges';\n\nclass ProfileUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //deep copy of the redux state on component load\n      details: this.props.updated || JSON.parse(JSON.stringify(props.profile.details))\n    };\n    this.handleChanges = this.handleChanges.bind(this);\n    this.updateInitStateToReduxState = this.updateInitStateToReduxState.bind(this);\n  }\n\n  handleChanges() {\n    alertUnsavedChanges(this.state.details, //initial state\n    this.props.profile.details, //redux updated state\n    this.props.setProfileTab, this.props.setSessionUpdatesStatus, '/dashboard/profile', this.props.history);\n  }\n\n  updateInitStateToReduxState() {\n    this.props.setSessionUpdatesStatus(false);\n    this.setState({\n      details: this.props.profile.details\n    });\n  }\n\n  componentDidMount() {\n    console.log('Moutning');\n    window.addEventListener('beforeunload', this.handleChanges);\n  }\n\n  componentWillUnmount() {\n    console.log('Unmoutning');\n    const unblock = this.props.history.goBack();\n    this.handleChanges();\n    window.removeEventListener('beforeunload', this.handleChanges);\n  }\n\n  render() {\n    const formData = {\n      details: this.props.profile.details,\n      http: '/api/profile',\n      url: '/dashboard/profile',\n      cb: this.props.getProfile,\n      updateInitStateToReduxState: this.updateInitStateToReduxState,\n      //stops firing alertUnsavedChanges on submit\n      msg: 'Your profile has been updated successfully.'\n    };\n    return /*#__PURE__*/React.createElement(CustomBuiltForm, {\n      data: formData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nProfileUpdate.propTypes = {\n  details: PropTypes.array,\n  getProfile: PropTypes.func,\n  setAlert: PropTypes.func,\n  setProfileTab: PropTypes.func,\n  setSessionUpdatesStatus: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  updated: state.session.updated\n});\n\nconst mapDispatchToProps = {\n  getProfile,\n  setProfileTab,\n  setSessionUpdatesStatus\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileUpdate));","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js"],"names":["React","useEffect","Component","withRouter","PropTypes","CustomBuiltForm","connect","getProfile","setProfileTab","setSessionUpdatesStatus","alertUnsavedChanges","ProfileUpdate","constructor","props","state","details","updated","JSON","parse","stringify","profile","handleChanges","bind","updateInitStateToReduxState","history","setState","componentDidMount","console","log","window","addEventListener","componentWillUnmount","unblock","goBack","removeEventListener","render","formData","http","url","cb","msg","propTypes","array","func","setAlert","mapStateToProps","session","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport {\n    setProfileTab,\n    setSessionUpdatesStatus,\n} from '../../redux/actions/session';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges';\n\nclass ProfileUpdate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //deep copy of the redux state on component load\n            details:\n                this.props.updated ||\n                JSON.parse(JSON.stringify(props.profile.details)),\n        };\n        this.handleChanges = this.handleChanges.bind(this);\n        this.updateInitStateToReduxState = this.updateInitStateToReduxState.bind(\n            this\n        );\n    }\n    handleChanges() {\n        alertUnsavedChanges(\n            this.state.details, //initial state\n            this.props.profile.details, //redux updated state\n            this.props.setProfileTab,\n            this.props.setSessionUpdatesStatus,\n            '/dashboard/profile',\n            this.props.history\n        );\n    }\n    updateInitStateToReduxState() {\n        this.props.setSessionUpdatesStatus(false);\n        this.setState({ details: this.props.profile.details });\n    }\n    componentDidMount() {\n        console.log('Moutning');\n        window.addEventListener('beforeunload', this.handleChanges);\n    }\n    componentWillUnmount() {\n        console.log('Unmoutning');\n        const unblock = this.props.history.goBack();\n        this.handleChanges();\n        window.removeEventListener('beforeunload', this.handleChanges);\n    }\n    render() {\n        const formData = {\n            details: this.props.profile.details,\n            http: '/api/profile',\n            url: '/dashboard/profile',\n            cb: this.props.getProfile,\n            updateInitStateToReduxState: this.updateInitStateToReduxState, //stops firing alertUnsavedChanges on submit\n            msg: 'Your profile has been updated successfully.',\n        };\n        return <CustomBuiltForm data={formData} />;\n    }\n}\n\nProfileUpdate.propTypes = {\n    details: PropTypes.array,\n    getProfile: PropTypes.func,\n    setAlert: PropTypes.func,\n    setProfileTab: PropTypes.func,\n    setSessionUpdatesStatus: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    updated: state.session.updated,\n});\nconst mapDispatchToProps = {\n    getProfile,\n    setProfileTab,\n    setSessionUpdatesStatus,\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ProfileUpdate));\n"]},"metadata":{},"sourceType":"module"}