{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/CustomBuiltForm.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './Form.scss';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport FormErrorsDisplay from './FormErrorsDisplay';\nimport { isRequired, isValidated } from './validations';\nimport { customInputOnChange, formErrorsStyling } from './formFuns';\nimport AddCustomFields from './AddCustomFields';\nimport RemoveCustomFields from './RemoveCustomFields';\nexport default function CustomBuiltForm({\n  data: {\n    details,\n    http,\n    url,\n    cb\n  }\n}) {\n  //declare Form's State\n  const [formState, setFormState] = useState(details);\n  const [errors, setErrors] = useState([]);\n\n  const addCustomToFieldsFormState = field => {\n    const position = field.position;\n    delete field.position;\n    formState.splice(position, 0, field);\n    setFormState([...formState]);\n  };\n\n  const removeCustomFieldsFromFormState = id => {\n    const newFields = formState.filter(field => field._id !== id);\n    setFormState(newFields);\n  }; //handle input change\n\n\n  const updateInput = (e, id) => {\n    customInputOnChange(e, id, formState, setFormState, errors, setErrors);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const errArr = [];\n    isRequired(formState, errArr);\n    isValidated(formState, errArr);\n\n    if (errArr.length > 0) {\n      setErrors(errArr);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const body = JSON.stringify(formState);\n      await axios.post(http, body, config);\n      cb(); // let alertMsg =\n      //     'Your profile has been created successfully. Please explore your dashboard below.';\n      // if (update) {\n      //     alertMsg = 'Your profile has been updated successfully.';\n      // }\n      // setAlert(alertMsg, 'success', null, false);\n      //redirect\n      // history.push(url);\n    } catch (err) {\n      console.log('PROFILE FORM ERR');\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    formErrorsStyling(errors);\n  }, [errors]);\n  const customFields = formState.filter(field => field.custom);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form form__submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Use this form to create or update the details of this page.\"), \"* Regired fields.\"), formState.map((input, i) => {\n    const {\n      _id,\n      label,\n      inputType,\n      value,\n      required\n    } = input;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: _id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: _id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, i + 1, \". \", label, required ? '*' : null), /*#__PURE__*/React.createElement(\"input\", {\n      id: _id,\n      type: inputType,\n      value: value,\n      onChange: e => updateInput(e, _id),\n      className: 'form__input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--info\",\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Submit\")), errors.length > 0 && /*#__PURE__*/React.createElement(FormErrorsDisplay, {\n    errors: errors,\n    label: \"Page main form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddCustomFields, {\n    addCustomToFieldsFormState: addCustomToFieldsFormState,\n    maxPosition: formState.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), customFields.length > 0 && /*#__PURE__*/React.createElement(RemoveCustomFields, {\n    customFields: customFields,\n    removeCustomFieldsFromFormState: removeCustomFieldsFromFormState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/CustomBuiltForm.js"],"names":["React","useState","useEffect","Fragment","withRouter","Redirect","FormErrorsDisplay","isRequired","isValidated","customInputOnChange","formErrorsStyling","AddCustomFields","RemoveCustomFields","CustomBuiltForm","data","details","http","url","cb","formState","setFormState","errors","setErrors","addCustomToFieldsFormState","field","position","splice","removeCustomFieldsFromFormState","id","newFields","filter","_id","updateInput","e","onSubmit","preventDefault","errArr","length","config","headers","body","JSON","stringify","axios","post","err","console","log","customFields","custom","map","input","i","label","inputType","value","required"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './Form.scss';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport FormErrorsDisplay from './FormErrorsDisplay';\nimport { isRequired, isValidated } from './validations';\nimport { customInputOnChange, formErrorsStyling } from './formFuns';\nimport AddCustomFields from './AddCustomFields';\nimport RemoveCustomFields from './RemoveCustomFields';\n\nexport default function CustomBuiltForm({ data: { details, http, url, cb } }) {\n    //declare Form's State\n    const [formState, setFormState] = useState(details);\n    const [errors, setErrors] = useState([]);\n\n    const addCustomToFieldsFormState = (field) => {\n        const position = field.position;\n        delete field.position;\n        formState.splice(position, 0, field);\n        setFormState([...formState]);\n    };\n    const removeCustomFieldsFromFormState = (id) => {\n        const newFields = formState.filter((field) => field._id !== id);\n        setFormState(newFields);\n    };\n    //handle input change\n    const updateInput = (e, id) => {\n        customInputOnChange(e, id, formState, setFormState, errors, setErrors);\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        const errArr = [];\n        isRequired(formState, errArr);\n        isValidated(formState, errArr);\n        if (errArr.length > 0) {\n            setErrors(errArr);\n            return;\n        }\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            const body = JSON.stringify(formState);\n            await axios.post(http, body, config);\n            cb();\n            // let alertMsg =\n            //     'Your profile has been created successfully. Please explore your dashboard below.';\n            // if (update) {\n            //     alertMsg = 'Your profile has been updated successfully.';\n            // }\n\n            // setAlert(alertMsg, 'success', null, false);\n            //redirect\n            // history.push(url);\n        } catch (err) {\n            console.log('PROFILE FORM ERR');\n            console.log(err);\n        }\n    };\n\n    useEffect(() => {\n        formErrorsStyling(errors);\n    }, [errors]);\n    const customFields = formState.filter((field) => field.custom);\n    return (\n        <form onSubmit={onSubmit} className='form form__submit'>\n            <div>\n                <fieldset>\n                    <legend>\n                        <span className='sr-only'>\n                            Use this form to create or update the details of\n                            this page.\n                        </span>\n                        * Regired fields.\n                    </legend>\n                    {formState.map((input, i) => {\n                        const {\n                            _id,\n                            label,\n                            inputType,\n                            value,\n                            required,\n                        } = input;\n                        return (\n                            <Fragment key={_id}>\n                                <label htmlFor={_id}>\n                                    {i + 1}. {label}\n                                    {required ? '*' : null}\n                                </label>\n                                <input\n                                    id={_id}\n                                    type={inputType}\n                                    value={value}\n                                    onChange={(e) => updateInput(e, _id)}\n                                    className={'form__input'}\n                                />\n                            </Fragment>\n                        );\n                    })}\n                    <button\n                        className='btn btn--info'\n                        onMouseDown={(e) => e.preventDefault()}\n                    >\n                        Submit\n                    </button>\n                </fieldset>\n                {errors.length > 0 && (\n                    <FormErrorsDisplay errors={errors} label='Page main form' />\n                )}\n            </div>\n            <div>\n                <AddCustomFields\n                    addCustomToFieldsFormState={addCustomToFieldsFormState}\n                    maxPosition={formState.length}\n                />\n                {customFields.length > 0 && (\n                    <RemoveCustomFields\n                        customFields={customFields}\n                        removeCustomFieldsFromFormState={\n                            removeCustomFieldsFromFormState\n                        }\n                    />\n                )}\n            </div>\n        </form>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}