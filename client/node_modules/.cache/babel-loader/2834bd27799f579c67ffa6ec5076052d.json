{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nfunction HTMLQuoteElement() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(HTMLQuoteElement.prototype, HTMLElement.interface.prototype);\nObject.setPrototypeOf(HTMLQuoteElement, HTMLElement.interface);\nObject.defineProperty(HTMLQuoteElement, \"prototype\", {\n  value: HTMLQuoteElement.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(HTMLQuoteElement.prototype, \"cite\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"cite\"];\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"USVString\"](V, {\n      context: \"Failed to set the 'cite' property on 'HTMLQuoteElement': The provided value\"\n    });\n    this[impl][\"cite\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLQuoteElement.prototype, Symbol.toStringTag, {\n  value: \"HTMLQuoteElement\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLQuoteElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLQuoteElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLQuoteElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLQuoteElement,\n  expose: {\n    Window: {\n      HTMLQuoteElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLQuoteElement-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/HTMLQuoteElement.js"],"names":["conversions","require","utils","impl","implSymbol","HTMLElement","HTMLQuoteElement","TypeError","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","get","module","exports","is","set","V","context","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","expose","Window"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,IAAI,GAAGD,KAAK,CAACE,UAAnB;;AACA,MAAMC,WAAW,GAAGJ,OAAO,CAAC,kBAAD,CAA3B;;AAEA,SAASK,gBAAT,GAA4B;AAC1B,QAAM,IAAIC,SAAJ,CAAc,qBAAd,CAAN;AACD;;AAEDC,MAAM,CAACC,cAAP,CAAsBH,gBAAgB,CAACI,SAAvC,EAAkDL,WAAW,CAACM,SAAZ,CAAsBD,SAAxE;AACAF,MAAM,CAACC,cAAP,CAAsBH,gBAAtB,EAAwCD,WAAW,CAACM,SAApD;AAEAH,MAAM,CAACI,cAAP,CAAsBN,gBAAtB,EAAwC,WAAxC,EAAqD;AACnDO,EAAAA,KAAK,EAAEP,gBAAgB,CAACI,SAD2B;AAEnDI,EAAAA,QAAQ,EAAE,KAFyC;AAGnDC,EAAAA,UAAU,EAAE,KAHuC;AAInDC,EAAAA,YAAY,EAAE;AAJqC,CAArD;AAOAR,MAAM,CAACI,cAAP,CAAsBN,gBAAgB,CAACI,SAAvC,EAAkD,MAAlD,EAA0D;AACxDO,EAAAA,GAAG,GAAG;AACJ,QAAI,CAAC,IAAD,IAAS,CAACC,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKJ,IAAL,EAAW,MAAX,CAAP;AACD,GAPuD;;AASxDkB,EAAAA,GAAG,CAACC,CAAD,EAAI;AACL,QAAI,CAAC,IAAD,IAAS,CAACJ,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDe,IAAAA,CAAC,GAAGtB,WAAW,CAAC,WAAD,CAAX,CAAyBsB,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKpB,IAAL,EAAW,MAAX,IAAqBmB,CAArB;AACD,GAnBuD;;AAqBxDP,EAAAA,UAAU,EAAE,IArB4C;AAsBxDC,EAAAA,YAAY,EAAE;AAtB0C,CAA1D;AAyBAR,MAAM,CAACI,cAAP,CAAsBN,gBAAgB,CAACI,SAAvC,EAAkDc,MAAM,CAACC,WAAzD,EAAsE;AACpEZ,EAAAA,KAAK,EAAE,kBAD6D;AAEpEC,EAAAA,QAAQ,EAAE,KAF0D;AAGpEC,EAAAA,UAAU,EAAE,KAHwD;AAIpEC,EAAAA,YAAY,EAAE;AAJsD,CAAtE;AAOA,MAAMU,KAAK,GAAG;AACZ;AACA;AACA;AACAC,EAAAA,oBAAoB,EAAE,EAJV;;AAKZP,EAAAA,EAAE,CAACQ,GAAD,EAAM;AACN,QAAIA,GAAJ,EAAS;AACP,UAAI1B,KAAK,CAAC2B,MAAN,CAAaD,GAAb,EAAkBzB,IAAlB,KAA2ByB,GAAG,CAACzB,IAAD,CAAH,YAAqB2B,IAAI,CAACC,cAAzD,EAAyE;AACvE,eAAO,IAAP;AACD;;AACD,WAAK,MAAMC,WAAX,IAA0Bd,MAAM,CAACC,OAAP,CAAeQ,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACJ,GAAD,CAAf,EAAsB;AACpB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAjBW;;AAkBZK,EAAAA,MAAM,CAACL,GAAD,EAAM;AACV,QAAIA,GAAJ,EAAS;AACP,UAAIA,GAAG,YAAYE,IAAI,CAACC,cAAxB,EAAwC;AACtC,eAAO,IAAP;AACD;;AAED,YAAMG,OAAO,GAAGhC,KAAK,CAACiC,cAAN,CAAqBP,GAArB,CAAhB;;AACA,WAAK,MAAMI,WAAX,IAA0Bd,MAAM,CAACC,OAAP,CAAeQ,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACE,OAAD,CAAf,EAA0B;AACxB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAhCW;;AAiCZE,EAAAA,OAAO,CAACR,GAAD,EAAM;AAAEL,IAAAA,OAAO,GAAG;AAAZ,MAAqC,EAA3C,EAA+C;AACpD,QAAIL,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkBQ,GAAlB,CAAJ,EAA4B;AAC1B,aAAO1B,KAAK,CAACmC,cAAN,CAAqBT,GAArB,CAAP;AACD;;AACD,UAAM,IAAIrB,SAAJ,CAAe,GAAEgB,OAAQ,qCAAzB,CAAN;AACD,GAtCW;;AAwCZe,EAAAA,MAAM,CAACC,eAAD,EAAkBC,WAAlB,EAA+B;AACnC,QAAIZ,GAAG,GAAGpB,MAAM,CAAC8B,MAAP,CAAchC,gBAAgB,CAACI,SAA/B,CAAV;AACAkB,IAAAA,GAAG,GAAG,KAAKa,KAAL,CAAWb,GAAX,EAAgBW,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOZ,GAAP;AACD,GA5CW;;AA6CZc,EAAAA,UAAU,CAACH,eAAD,EAAkBC,WAAlB,EAA+B;AACvC,QAAIZ,GAAG,GAAGpB,MAAM,CAAC8B,MAAP,CAAchC,gBAAgB,CAACI,SAA/B,CAAV;AACAkB,IAAAA,GAAG,GAAG,KAAKa,KAAL,CAAWb,GAAX,EAAgBW,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOtC,KAAK,CAACmC,cAAN,CAAqBT,GAArB,CAAP;AACD,GAjDW;;AAkDZe,EAAAA,cAAc,CAACf,GAAD,EAAM;AAClBvB,IAAAA,WAAW,CAACsC,cAAZ,CAA2Bf,GAA3B;AACD,GApDW;;AAqDZa,EAAAA,KAAK,CAACb,GAAD,EAAMW,eAAN,EAAuBC,WAAvB,EAAoC;AACvC,QAAI,CAACA,WAAL,EAAkBA,WAAW,GAAG,EAAd;AAElBA,IAAAA,WAAW,CAACN,OAAZ,GAAsBN,GAAtB;;AAEA,SAAKe,cAAL,CAAoBf,GAApB;;AACApB,IAAAA,MAAM,CAACI,cAAP,CAAsBgB,GAAtB,EAA2BzB,IAA3B,EAAiC;AAC/BU,MAAAA,KAAK,EAAE,IAAIiB,IAAI,CAACC,cAAT,CAAwBQ,eAAxB,EAAyCC,WAAzC,CADwB;AAE/B1B,MAAAA,QAAQ,EAAE,KAFqB;AAG/BC,MAAAA,UAAU,EAAE,KAHmB;AAI/BC,MAAAA,YAAY,EAAE;AAJiB,KAAjC;AAOAY,IAAAA,GAAG,CAACzB,IAAD,CAAH,CAAUD,KAAK,CAAC0C,aAAhB,IAAiChB,GAAjC;;AACA,QAAIE,IAAI,CAACe,IAAT,EAAe;AACbf,MAAAA,IAAI,CAACe,IAAL,CAAUjB,GAAG,CAACzB,IAAD,CAAb,EAAqBqC,WAArB;AACD;;AACD,WAAOZ,GAAP;AACD,GAvEW;;AAwEZjB,EAAAA,SAAS,EAAEL,gBAxEC;AAyEZwC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AAAEzC,MAAAA;AAAF;AADF;AAzEI,CAAd,C,CA4EG;;AACHY,MAAM,CAACC,OAAP,GAAiBO,KAAjB;;AAEA,MAAMI,IAAI,GAAG7B,OAAO,CAAC,mCAAD,CAApB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nfunction HTMLQuoteElement() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(HTMLQuoteElement.prototype, HTMLElement.interface.prototype);\nObject.setPrototypeOf(HTMLQuoteElement, HTMLElement.interface);\n\nObject.defineProperty(HTMLQuoteElement, \"prototype\", {\n  value: HTMLQuoteElement.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(HTMLQuoteElement.prototype, \"cite\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"cite\"];\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"USVString\"](V, {\n      context: \"Failed to set the 'cite' property on 'HTMLQuoteElement': The provided value\"\n    });\n\n    this[impl][\"cite\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLQuoteElement.prototype, Symbol.toStringTag, {\n  value: \"HTMLQuoteElement\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLQuoteElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLQuoteElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLQuoteElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLQuoteElement,\n  expose: {\n    Window: { HTMLQuoteElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLQuoteElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}