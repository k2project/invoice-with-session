{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nconst initialState = {};\nconst middleware = [thunk];\nconst persistConfig = {\n  key: 'sess',\n  storage,\n  stateReconciler: autoMergeLevel2,\n  whitelist: ['session']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nconst persistor = persistStore(store);\nexport default function () {\n  return {\n    store,\n    persistor\n  };\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","persistStore","persistReducer","storage","autoMergeLevel2","initialState","middleware","persistConfig","key","stateReconciler","whitelist","persistedReducer","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACP,KAAD,CAAnB;AAEA,MAAMQ,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBL,EAAAA,OAFkB;AAGlBM,EAAAA,eAAe,EAAEL,eAHC;AAIlBM,EAAAA,SAAS,EAAE,CAAC,SAAD;AAJO,CAAtB;AAOA,MAAMC,gBAAgB,GAAGT,cAAc,CAACK,aAAD,EAAgBP,WAAhB,CAAvC;AAEA,MAAMY,KAAK,GAAGhB,WAAW,CACrBe,gBADqB,EAErBN,YAFqB,EAGrBP,mBAAmB,CAACD,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CAHE,CAAzB;AAKA,MAAMO,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AAEA,eAAe,YAAY;AACvB,SAAO;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACH","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst persistConfig = {\n    key: 'sess',\n    storage,\n    stateReconciler: autoMergeLevel2,\n    whitelist: ['session'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\nconst persistor = persistStore(store);\n\nexport default function () {\n    return { store, persistor };\n}\n"]},"metadata":{},"sourceType":"module"}