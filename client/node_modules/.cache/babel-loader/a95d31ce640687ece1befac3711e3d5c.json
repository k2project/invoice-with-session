{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/components/TasksDisplayTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../../redux/actions/messages';\nimport arrowIcon from '../../../imgs/icons/arrow.png';\nimport updateIcon from '../../../imgs/icons/updateIcon.png';\nimport deleteIcon from '../../../imgs/icons/deleteIcon.png';\nimport calendarIcon from '../../../imgs/icons/calendar.png';\nimport { moveItemUpOrDown, toggleIncludedInInvoice, deleteItem } from '../utils/displayTableFun';\nimport { dateNum } from '../../../utils/dates';\n\nconst TasksDisplayTable = ({\n  companyID,\n  tasks,\n  updateState,\n  setAlert\n}) => {\n  const [tableState, setTableState] = useState([]);\n  useEffect(() => {\n    setTableState(tasks);\n  }, [tasks]);\n\n  const deleteTask = async id => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      await axios.put(`/api/companies/task/${companyID}`, JSON.stringify({\n        id\n      }), config);\n      deleteItem(id, tableState, setTableState, updateState);\n      setAlert('Task has been deleted successfully.', 'success', null, false);\n    } catch (err) {\n      setAlert(\"We are sorry, but couldn't delete the task.\", 'danger', null, false);\n    }\n  };\n\n  const updateTask = (e, id) => {\n    const targetTR = e.target.closest('tr');\n    const siblings = targetTR.parentElement.children;\n    Array.from(siblings).forEach(el => el.style.display = 'none');\n    targetTR.style.display = 'block';\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"tasks-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"caption\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Current tasks list.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Use arrows to move items up and down the list. By default all items will be included in a new invoice form and remove from the list once the invoice is created.\")), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Created at\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Task description\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Item Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Rate\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Tax\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Add task to a new invoice\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Move Item Up\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Move Item Down\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Update Task\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Delete Task\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, tableState.map((item, index, arr) => /*#__PURE__*/React.createElement(\"tr\", {\n    \"data-details-index\": index,\n    key: item._id,\n    className: \"tile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__date\",\n    title: dateNum(item.createdAt),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: calendarIcon,\n    alt: `Created at ${dateNum(item.createdAt)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, dateNum(item.createdAt).slice(0, 2))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, item.description), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, item.rate), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, item.tax), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    title: \"Update task\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: e => {\n      updateTask(e, item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: updateIcon,\n    alt: \"Update task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    title: \"Delete task\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => {\n      deleteTask(item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: deleteIcon,\n    alt: \"Delete task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    title: item.addToInvoice ? 'Item will be included in the new invoice.' : ' Item will NOT be included in the new invoice.',\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => {\n      toggleIncludedInInvoice(index, tableState, setTableState, updateState);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, item.addToInvoice ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 37\n    }\n  }, \"+\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }, \"-\"))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, index !== 0 && /*#__PURE__*/React.createElement(\"button\", {\n    onMouseDown: e => e.preventDefault(),\n    className: \"arrow-up\",\n    title: \"Move item up\",\n    onClick: e => moveItemUpOrDown(e, 'up', tableState, setTableState, updateState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: arrowIcon,\n    alt: \"move item up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"td__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, index !== arr.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onMouseDown: e => e.preventDefault(),\n    className: \"arrow-down\",\n    title: \"Move item down\",\n    onClick: e => moveItemUpOrDown(e, 'down', tableState, setTableState, updateState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: arrowIcon,\n    alt: \"move item up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 37\n    }\n  })))))));\n};\n\nTasksDisplayTable.propTypes = {\n  tasks: PropTypes.array\n};\nconst mapDispatchToProps = {\n  setAlert\n};\nexport default connect(null, mapDispatchToProps)(TasksDisplayTable);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/components/TasksDisplayTable.js"],"names":["React","useState","useEffect","PropTypes","axios","connect","setAlert","arrowIcon","updateIcon","deleteIcon","calendarIcon","moveItemUpOrDown","toggleIncludedInInvoice","deleteItem","dateNum","TasksDisplayTable","companyID","tasks","updateState","tableState","setTableState","deleteTask","id","config","headers","put","JSON","stringify","err","updateTask","e","targetTR","target","closest","siblings","parentElement","children","Array","from","forEach","el","style","display","map","item","index","arr","_id","createdAt","slice","description","qty","rate","tax","preventDefault","addToInvoice","length","propTypes","array","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SACIC,gBADJ,EAEIC,uBAFJ,EAGIC,UAHJ,QAIO,0BAJP;AAKA,SAASC,OAAT,QAAwB,sBAAxB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA,WAApB;AAAiCZ,EAAAA;AAAjC,CAAD,KAAiD;AACvE,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,aAAa,CAACH,KAAD,CAAb;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAGA,QAAMI,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC7B,QAAI;AACA,YAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADE,OAAf;AAKA,YAAMpB,KAAK,CAACqB,GAAN,CACD,uBAAsBT,SAAU,EAD/B,EAEFU,IAAI,CAACC,SAAL,CAAe;AAAEL,QAAAA;AAAF,OAAf,CAFE,EAGFC,MAHE,CAAN;AAKAV,MAAAA,UAAU,CAACS,EAAD,EAAKH,UAAL,EAAiBC,aAAjB,EAAgCF,WAAhC,CAAV;AACAZ,MAAAA,QAAQ,CACJ,qCADI,EAEJ,SAFI,EAGJ,IAHI,EAIJ,KAJI,CAAR;AAMH,KAlBD,CAkBE,OAAOsB,GAAP,EAAY;AACVtB,MAAAA,QAAQ,CACJ,6CADI,EAEJ,QAFI,EAGJ,IAHI,EAIJ,KAJI,CAAR;AAMH;AACJ,GA3BD;;AA4BA,QAAMuB,UAAU,GAAG,CAACC,CAAD,EAAIR,EAAJ,KAAW;AAC1B,UAAMS,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,IAAjB,CAAjB;AACA,UAAMC,QAAQ,GAAGH,QAAQ,CAACI,aAAT,CAAuBC,QAAxC;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAWJ,QAAX,EAAqBK,OAArB,CAA8BC,EAAD,IAASA,EAAE,CAACC,KAAH,CAASC,OAAT,GAAmB,MAAzD;AACAX,IAAAA,QAAQ,CAACU,KAAT,CAAeC,OAAf,GAAyB,OAAzB;AACH,GALD;;AAMA,sBACI;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wKAFJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,eAII;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,eAMI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCANJ,eAOI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,eASI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATJ,eAUI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVJ,CADJ,CATJ,eAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,UAAU,CAACwB,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,kBACZ;AACI,0BAAoBD,KADxB;AAEI,IAAA,GAAG,EAAED,IAAI,CAACG,GAFd;AAGI,IAAA,SAAS,EAAC,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AACI,IAAA,SAAS,EAAC,UADd;AAEI,IAAA,KAAK,EAAEjC,OAAO,CAAC8B,IAAI,CAACI,SAAN,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AACI,IAAA,GAAG,EAAEtC,YADT;AAEI,IAAA,GAAG,EAAG,cAAaI,OAAO,CAAC8B,IAAI,CAACI,SAAN,CAAiB,EAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAQI;AAAM,mBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlC,OAAO,CAAC8B,IAAI,CAACI,SAAN,CAAP,CAAwBC,KAAxB,CAA8B,CAA9B,EAAiC,CAAjC,CADL,CARJ,CALJ,eAiBI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBL,IAAI,CAACM,WAAtB,CAjBJ,eAkBI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BN,IAAI,CAACO,GAAhC,CAlBJ,eAmBI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,IAAI,CAACQ,IAAhC,CAnBJ,eAoBI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BR,IAAI,CAACS,GAAhC,CApBJ,eAqBI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,WAAW,EAAGvB,CAAD,IAAOA,CAAC,CAACwB,cAAF,EAFxB;AAGI,IAAA,OAAO,EAAGxB,CAAD,IAAO;AACZD,MAAAA,UAAU,CAACC,CAAD,EAAIc,IAAI,CAACG,GAAT,CAAV;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI;AAAK,IAAA,GAAG,EAAEvC,UAAV;AAAsB,IAAA,GAAG,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CArBJ,eAgCI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,WAAW,EAAGsB,CAAD,IAAOA,CAAC,CAACwB,cAAF,EAFxB;AAGI,IAAA,OAAO,EAAE,MAAM;AACXjC,MAAAA,UAAU,CAACuB,IAAI,CAACG,GAAN,CAAV;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI;AAAK,IAAA,GAAG,EAAEtC,UAAV;AAAsB,IAAA,GAAG,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CAhCJ,eA2CI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EACDmC,IAAI,CAACW,YAAL,GACM,2CADN,GAEM,gDAJd;AAMI,IAAA,WAAW,EAAGzB,CAAD,IAAOA,CAAC,CAACwB,cAAF,EANxB;AAOI,IAAA,OAAO,EAAE,MAAM;AACX1C,MAAAA,uBAAuB,CACnBiC,KADmB,EAEnB1B,UAFmB,EAGnBC,aAHmB,EAInBF,WAJmB,CAAvB;AAMH,KAdL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBK0B,IAAI,CAACW,YAAL,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADH,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAnBR,CADJ,CA3CJ,eAmEI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,KAAK,CAAV,iBACG;AACI,IAAA,WAAW,EAAGf,CAAD,IAAOA,CAAC,CAACwB,cAAF,EADxB;AAEI,IAAA,SAAS,EAAC,UAFd;AAGI,IAAA,KAAK,EAAC,cAHV;AAII,IAAA,OAAO,EAAGxB,CAAD,IACLnB,gBAAgB,CACZmB,CADY,EAEZ,IAFY,EAGZX,UAHY,EAIZC,aAJY,EAKZF,WALY,CALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcI;AAAK,IAAA,GAAG,EAAEX,SAAV;AAAqB,IAAA,GAAG,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CAFR,CAnEJ,eAuFI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKsC,KAAK,KAAKC,GAAG,CAACU,MAAJ,GAAa,CAAvB,iBACG;AACI,IAAA,WAAW,EAAG1B,CAAD,IAAOA,CAAC,CAACwB,cAAF,EADxB;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,KAAK,EAAC,gBAHV;AAII,IAAA,OAAO,EAAGxB,CAAD,IACLnB,gBAAgB,CACZmB,CADY,EAEZ,MAFY,EAGZX,UAHY,EAIZC,aAJY,EAKZF,WALY,CALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcI;AAAK,IAAA,GAAG,EAAEX,SAAV;AAAqB,IAAA,GAAG,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CAFR,CAvFJ,CADH,CADL,CAvBJ,CADJ;AA0IH,CAjLD;;AAkLAQ,iBAAiB,CAAC0C,SAAlB,GAA8B;AAC1BxC,EAAAA,KAAK,EAAEd,SAAS,CAACuD;AADS,CAA9B;AAIA,MAAMC,kBAAkB,GAAG;AACvBrD,EAAAA;AADuB,CAA3B;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOsD,kBAAP,CAAP,CAAkC5C,iBAAlC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../../redux/actions/messages';\nimport arrowIcon from '../../../imgs/icons/arrow.png';\nimport updateIcon from '../../../imgs/icons/updateIcon.png';\nimport deleteIcon from '../../../imgs/icons/deleteIcon.png';\nimport calendarIcon from '../../../imgs/icons/calendar.png';\nimport {\n    moveItemUpOrDown,\n    toggleIncludedInInvoice,\n    deleteItem,\n} from '../utils/displayTableFun';\nimport { dateNum } from '../../../utils/dates';\n\nconst TasksDisplayTable = ({ companyID, tasks, updateState, setAlert }) => {\n    const [tableState, setTableState] = useState([]);\n    useEffect(() => {\n        setTableState(tasks);\n    }, [tasks]);\n    const deleteTask = async (id) => {\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            await axios.put(\n                `/api/companies/task/${companyID}`,\n                JSON.stringify({ id }),\n                config\n            );\n            deleteItem(id, tableState, setTableState, updateState);\n            setAlert(\n                'Task has been deleted successfully.',\n                'success',\n                null,\n                false\n            );\n        } catch (err) {\n            setAlert(\n                \"We are sorry, but couldn't delete the task.\",\n                'danger',\n                null,\n                false\n            );\n        }\n    };\n    const updateTask = (e, id) => {\n        const targetTR = e.target.closest('tr');\n        const siblings = targetTR.parentElement.children;\n        Array.from(siblings).forEach((el) => (el.style.display = 'none'));\n        targetTR.style.display = 'block';\n    };\n    return (\n        <table className='tasks-table'>\n            <caption>\n                <b>Current tasks list.</b>\n                <p>\n                    Use arrows to move items up and down the list. By default\n                    all items will be included in a new invoice form and remove\n                    from the list once the invoice is created.\n                </p>\n            </caption>\n            <thead>\n                <tr className='sr-only'>\n                    <th scope='col'>Created at</th>\n                    <th scope='col'>Task description</th>\n                    <th scope='col'>Item Quantity</th>\n                    <th scope='col'>Rate</th>\n                    <th scope='col'>Tax</th>\n                    <th scope='col'>Add task to a new invoice</th>\n                    <th scope='col'>Move Item Up</th>\n                    <th scope='col'>Move Item Down</th>\n                    <th scope='col'>Update Task</th>\n                    <th scope='col'>Delete Task</th>\n                </tr>\n            </thead>\n            <tbody>\n                {tableState.map((item, index, arr) => (\n                    <tr\n                        data-details-index={index}\n                        key={item._id}\n                        className='tile'\n                    >\n                        <td\n                            className='td__date'\n                            title={dateNum(item.createdAt)}\n                        >\n                            <img\n                                src={calendarIcon}\n                                alt={`Created at ${dateNum(item.createdAt)}`}\n                            />\n                            <span aria-hidden='true'>\n                                {dateNum(item.createdAt).slice(0, 2)}\n                            </span>\n                        </td>\n                        <th scope='row'>{item.description}</th>\n                        <td className='td__value'>{item.qty}</td>\n                        <td className='td__value'>{item.rate}</td>\n                        <td className='td__value'>{item.tax}</td>\n                        <td className='td__btn'>\n                            <button\n                                title='Update task'\n                                onMouseDown={(e) => e.preventDefault()}\n                                onClick={(e) => {\n                                    updateTask(e, item._id);\n                                }}\n                            >\n                                <img src={updateIcon} alt='Update task' />\n                            </button>\n                        </td>\n                        <td className='td__btn'>\n                            <button\n                                title='Delete task'\n                                onMouseDown={(e) => e.preventDefault()}\n                                onClick={() => {\n                                    deleteTask(item._id);\n                                }}\n                            >\n                                <img src={deleteIcon} alt='Delete task' />\n                            </button>\n                        </td>\n                        <td className='td__btn'>\n                            <button\n                                title={\n                                    item.addToInvoice\n                                        ? 'Item will be included in the new invoice.'\n                                        : ' Item will NOT be included in the new invoice.'\n                                }\n                                onMouseDown={(e) => e.preventDefault()}\n                                onClick={() => {\n                                    toggleIncludedInInvoice(\n                                        index,\n                                        tableState,\n                                        setTableState,\n                                        updateState\n                                    );\n                                }}\n                            >\n                                {item.addToInvoice ? (\n                                    <span>&#43;</span>\n                                ) : (\n                                    <span>&#45;</span>\n                                )}\n                            </button>\n                        </td>\n                        <td className='td__btn'>\n                            {index !== 0 && (\n                                <button\n                                    onMouseDown={(e) => e.preventDefault()}\n                                    className='arrow-up'\n                                    title='Move item up'\n                                    onClick={(e) =>\n                                        moveItemUpOrDown(\n                                            e,\n                                            'up',\n                                            tableState,\n                                            setTableState,\n                                            updateState\n                                        )\n                                    }\n                                >\n                                    <img src={arrowIcon} alt='move item up' />\n                                </button>\n                            )}\n                        </td>\n                        <td className='td__btn'>\n                            {index !== arr.length - 1 && (\n                                <button\n                                    onMouseDown={(e) => e.preventDefault()}\n                                    className='arrow-down'\n                                    title='Move item down'\n                                    onClick={(e) =>\n                                        moveItemUpOrDown(\n                                            e,\n                                            'down',\n                                            tableState,\n                                            setTableState,\n                                            updateState\n                                        )\n                                    }\n                                >\n                                    <img src={arrowIcon} alt='move item up' />\n                                </button>\n                            )}\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n};\nTasksDisplayTable.propTypes = {\n    tasks: PropTypes.array,\n};\n\nconst mapDispatchToProps = {\n    setAlert,\n};\n\nexport default connect(null, mapDispatchToProps)(TasksDisplayTable);\n"]},"metadata":{},"sourceType":"module"}