{"ast":null,"code":"import axios from 'axios';\nimport { dialogBox } from '../../alerts/alertsFuns';\nexport const alertUnsavedChanges = async (initilState, state, setStateTab, setSessionUpdatesStatus, history) => {\n  if (JSON.stringify(state) !== JSON.stringify(initilState)) {\n    //register app chnages\n    setSessionUpdatesStatus(true);\n    const msg = `You have some unsaved changes. What would you like to do?`;\n    const cancelBtnText = 'Discharge updates';\n    const confirmBtnText = 'Return to the form!';\n\n    const cancelCb = () => {\n      //discharge all changes and clear app changes status\n      setSessionUpdatesStatus(false);\n      window.location.reload();\n    };\n\n    const confirmCb = () => {\n      history.goBack();\n      setStateTab('form');\n    };\n\n    dialogBox({\n      msg,\n      cancelBtnText,\n      confirmBtnText,\n      cancelCb,\n      confirmCb\n    });\n  }\n};\nexport const saveChangesOnLeave = async (initilState, state, getState, http //api call\n) => {\n  try {\n    if (JSON.stringify(state) !== JSON.stringify(initilState)) {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      await axios.post(http, JSON.stringify(state), config);\n      await getState();\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/utils/handleUnsavedChanges.js"],"names":["axios","dialogBox","alertUnsavedChanges","initilState","state","setStateTab","setSessionUpdatesStatus","history","JSON","stringify","msg","cancelBtnText","confirmBtnText","cancelCb","window","location","reload","confirmCb","goBack","saveChangesOnLeave","getState","http","config","headers","post","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,OAC/BC,WAD+B,EAE/BC,KAF+B,EAG/BC,WAH+B,EAI/BC,uBAJ+B,EAK/BC,OAL+B,KAM9B;AACD,MAAIC,IAAI,CAACC,SAAL,CAAeL,KAAf,MAA0BI,IAAI,CAACC,SAAL,CAAeN,WAAf,CAA9B,EAA2D;AACvD;AACAG,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACA,UAAMI,GAAG,GAAI,2DAAb;AACA,UAAMC,aAAa,GAAG,mBAAtB;AACA,UAAMC,cAAc,GAAG,qBAAvB;;AACA,UAAMC,QAAQ,GAAG,MAAM;AACnB;AACAP,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAQ,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KAJD;;AAKA,UAAMC,SAAS,GAAG,MAAM;AACpBV,MAAAA,OAAO,CAACW,MAAR;AACAb,MAAAA,WAAW,CAAC,MAAD,CAAX;AACH,KAHD;;AAIAJ,IAAAA,SAAS,CAAC;AACNS,MAAAA,GADM;AAENC,MAAAA,aAFM;AAGNC,MAAAA,cAHM;AAINC,MAAAA,QAJM;AAKNI,MAAAA;AALM,KAAD,CAAT;AAOH;AACJ,CA9BM;AAgCP,OAAO,MAAME,kBAAkB,GAAG,OAC9BhB,WAD8B,EAE9BC,KAF8B,EAG9BgB,QAH8B,EAI9BC,IAJ8B,CAIzB;AAJyB,KAK7B;AACD,MAAI;AACA,QAAIb,IAAI,CAACC,SAAL,CAAeL,KAAf,MAA0BI,IAAI,CAACC,SAAL,CAAeN,WAAf,CAA9B,EAA2D;AACvD,YAAMmB,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADE,OAAf;AAKA,YAAMvB,KAAK,CAACwB,IAAN,CAAWH,IAAX,EAAiBb,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAjB,EAAwCkB,MAAxC,CAAN;AACA,YAAMF,QAAQ,EAAd;AACH;AACJ,GAVD,CAUE,OAAOK,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAnBM","sourcesContent":["import axios from 'axios';\nimport { dialogBox } from '../../alerts/alertsFuns';\n\nexport const alertUnsavedChanges = async (\n    initilState,\n    state,\n    setStateTab,\n    setSessionUpdatesStatus,\n    history\n) => {\n    if (JSON.stringify(state) !== JSON.stringify(initilState)) {\n        //register app chnages\n        setSessionUpdatesStatus(true);\n        const msg = `You have some unsaved changes. What would you like to do?`;\n        const cancelBtnText = 'Discharge updates';\n        const confirmBtnText = 'Return to the form!';\n        const cancelCb = () => {\n            //discharge all changes and clear app changes status\n            setSessionUpdatesStatus(false);\n            window.location.reload();\n        };\n        const confirmCb = () => {\n            history.goBack();\n            setStateTab('form');\n        };\n        dialogBox({\n            msg,\n            cancelBtnText,\n            confirmBtnText,\n            cancelCb,\n            confirmCb,\n        });\n    }\n};\n\nexport const saveChangesOnLeave = async (\n    initilState,\n    state,\n    getState,\n    http //api call\n) => {\n    try {\n        if (JSON.stringify(state) !== JSON.stringify(initilState)) {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            await axios.post(http, JSON.stringify(state), config);\n            await getState();\n        }\n    } catch (err) {\n        console.log(err);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}