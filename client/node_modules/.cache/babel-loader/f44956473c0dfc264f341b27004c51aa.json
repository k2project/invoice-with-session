{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertHTMLFormElement = require(\"./HTMLFormElement.js\").convert;\n\nconst isBlob = require(\"./Blob.js\").is;\n\nconst convertBlob = require(\"./Blob.js\").convert;\n\nconst impl = utils.implSymbol;\nconst IteratorPrototype = Object.create(utils.IteratorPrototype, {\n  next: {\n    value: function next() {\n      const internal = this[utils.iterInternalSymbol];\n      const {\n        target,\n        kind,\n        index\n      } = internal;\n      const values = Array.from(target[impl]);\n      const len = values.length;\n\n      if (index >= len) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      const [key, value] = pair.map(utils.tryWrapperForImpl);\n      let result;\n\n      switch (kind) {\n        case \"key\":\n          result = key;\n          break;\n\n        case \"value\":\n          result = value;\n          break;\n\n        case \"key+value\":\n          result = [key, value];\n          break;\n      }\n\n      return {\n        value: result,\n        done: false\n      };\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"FormDataIterator\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }\n});\n\nfunction FormData() {\n  if (new.target === undefined) {\n    throw new TypeError(\"Failed to construct 'FormData'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n\n    if (curArg !== undefined) {\n      curArg = convertHTMLFormElement(curArg, {\n        context: \"Failed to construct 'FormData': parameter 1\"\n      });\n    }\n\n    args.push(curArg);\n  }\n  iface.setup(this, args);\n}\n\nObject.defineProperty(FormData, \"prototype\", {\n  value: FormData.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(FormData.prototype, Symbol.iterator, {\n  writable: true,\n  enumerable: false,\n  configurable: true,\n  value: function entries() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return module.exports.createDefaultIterator(this, \"key+value\");\n  }\n});\n\nFormData.prototype.forEach = function forEach(callback) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'forEach' on 'FormData': 1 argument required, \" + \"but only 0 present.\");\n  }\n\n  if (typeof callback !== \"function\") {\n    throw new TypeError(\"Failed to execute 'forEach' on 'FormData': The callback provided \" + \"as parameter 1 is not a function.\");\n  }\n\n  const thisArg = arguments[1];\n  let pairs = Array.from(this[impl]);\n  let i = 0;\n\n  while (i < pairs.length) {\n    const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n    callback.call(thisArg, value, key, this);\n    pairs = Array.from(this[impl]);\n    i++;\n  }\n};\n\nFormData.prototype.append = function append(name, value) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\"Failed to execute 'append' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n\n  switch (arguments.length) {\n    case 2:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n\n        if (isBlob(curArg)) {\n          {\n            let curArg = arguments[1];\n            curArg = convertBlob(curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        } else {\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        }\n      }\n      break;\n\n    default:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = convertBlob(curArg, {\n          context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'append' on 'FormData': parameter 3\"\n          });\n        }\n\n        args.push(curArg);\n      }\n  }\n\n  return this[impl].append(...args);\n};\n\nFormData.prototype.delete = function _delete(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'delete' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, {\n      context: \"Failed to execute 'delete' on 'FormData': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].delete(...args);\n};\n\nFormData.prototype.get = function get(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'get' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, {\n      context: \"Failed to execute 'get' on 'FormData': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].get(...args));\n};\n\nFormData.prototype.getAll = function getAll(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'getAll' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, {\n      context: \"Failed to execute 'getAll' on 'FormData': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].getAll(...args));\n};\n\nFormData.prototype.has = function has(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'has' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, {\n      context: \"Failed to execute 'has' on 'FormData': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].has(...args);\n};\n\nFormData.prototype.set = function set(name, value) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\"Failed to execute 'set' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n\n  switch (arguments.length) {\n    case 2:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n\n        if (isBlob(curArg)) {\n          {\n            let curArg = arguments[1];\n            curArg = convertBlob(curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        } else {\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        }\n      }\n      break;\n\n    default:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = convertBlob(curArg, {\n          context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'set' on 'FormData': parameter 3\"\n          });\n        }\n\n        args.push(curArg);\n      }\n  }\n\n  return this[impl].set(...args);\n};\n\nFormData.prototype.entries = FormData.prototype[Symbol.iterator];\n\nFormData.prototype.keys = function keys() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return module.exports.createDefaultIterator(this, \"key\");\n};\n\nFormData.prototype.values = function values() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return module.exports.createDefaultIterator(this, \"value\");\n};\n\nObject.defineProperty(FormData.prototype, Symbol.toStringTag, {\n  value: \"FormData\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'FormData'.`);\n  },\n\n  createDefaultIterator(target, kind) {\n    const iterator = Object.create(IteratorPrototype);\n    Object.defineProperty(iterator, utils.iterInternalSymbol, {\n      value: {\n        target,\n        kind,\n        index: 0\n      },\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    return iterator;\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(FormData.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(FormData.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: FormData,\n  expose: {\n    Window: {\n      FormData\n    },\n    Worker: {\n      FormData\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../xhr/FormData-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/FormData.js"],"names":["conversions","require","utils","convertHTMLFormElement","convert","isBlob","is","convertBlob","impl","implSymbol","IteratorPrototype","Object","create","next","value","internal","iterInternalSymbol","target","kind","index","values","Array","from","len","length","undefined","done","pair","key","map","tryWrapperForImpl","result","writable","enumerable","configurable","Symbol","toStringTag","FormData","new","TypeError","args","curArg","arguments","context","push","iface","setup","defineProperty","prototype","iterator","entries","module","exports","createDefaultIterator","forEach","callback","thisArg","pairs","i","call","append","name","delete","_delete","get","getAll","has","set","keys","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","constructorArgs","privateData","createImpl","_internalSetup","wrapperSymbol","init","interface","expose","Window","Worker"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertHTMLFormElement = require(\"./HTMLFormElement.js\").convert;\nconst isBlob = require(\"./Blob.js\").is;\nconst convertBlob = require(\"./Blob.js\").convert;\nconst impl = utils.implSymbol;\n\nconst IteratorPrototype = Object.create(utils.IteratorPrototype, {\n  next: {\n    value: function next() {\n      const internal = this[utils.iterInternalSymbol];\n      const { target, kind, index } = internal;\n      const values = Array.from(target[impl]);\n      const len = values.length;\n      if (index >= len) {\n        return { value: undefined, done: true };\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      const [key, value] = pair.map(utils.tryWrapperForImpl);\n\n      let result;\n      switch (kind) {\n        case \"key\":\n          result = key;\n          break;\n        case \"value\":\n          result = value;\n          break;\n        case \"key+value\":\n          result = [key, value];\n          break;\n      }\n      return { value: result, done: false };\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"FormDataIterator\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }\n});\n\nfunction FormData() {\n  if (new.target === undefined) {\n    throw new TypeError(\n      \"Failed to construct 'FormData'. Please use the 'new' operator; this constructor \" +\n        \"cannot be called as a function.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = convertHTMLFormElement(curArg, { context: \"Failed to construct 'FormData': parameter 1\" });\n    }\n    args.push(curArg);\n  }\n\n  iface.setup(this, args);\n}\n\nObject.defineProperty(FormData, \"prototype\", {\n  value: FormData.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(FormData.prototype, Symbol.iterator, {\n  writable: true,\n  enumerable: false,\n  configurable: true,\n  value: function entries() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return module.exports.createDefaultIterator(this, \"key+value\");\n  }\n});\nFormData.prototype.forEach = function forEach(callback) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'forEach' on 'FormData': 1 argument required, \" + \"but only 0 present.\");\n  }\n  if (typeof callback !== \"function\") {\n    throw new TypeError(\n      \"Failed to execute 'forEach' on 'FormData': The callback provided \" + \"as parameter 1 is not a function.\"\n    );\n  }\n  const thisArg = arguments[1];\n  let pairs = Array.from(this[impl]);\n  let i = 0;\n  while (i < pairs.length) {\n    const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n    callback.call(thisArg, value, key, this);\n    pairs = Array.from(this[impl]);\n    i++;\n  }\n};\nFormData.prototype.append = function append(name, value) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\n      \"Failed to execute 'append' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  switch (arguments.length) {\n    case 2:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (isBlob(curArg)) {\n          {\n            let curArg = arguments[1];\n            curArg = convertBlob(curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 2\" });\n            args.push(curArg);\n          }\n        } else {\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        }\n      }\n      break;\n    default:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = convertBlob(curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 2\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'append' on 'FormData': parameter 3\"\n          });\n        }\n        args.push(curArg);\n      }\n  }\n  return this[impl].append(...args);\n};\n\nFormData.prototype.delete = function _delete(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'delete' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'delete' on 'FormData': parameter 1\" });\n    args.push(curArg);\n  }\n  return this[impl].delete(...args);\n};\n\nFormData.prototype.get = function get(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'get' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'get' on 'FormData': parameter 1\" });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].get(...args));\n};\n\nFormData.prototype.getAll = function getAll(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'getAll' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'getAll' on 'FormData': parameter 1\" });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].getAll(...args));\n};\n\nFormData.prototype.has = function has(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'has' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'has' on 'FormData': parameter 1\" });\n    args.push(curArg);\n  }\n  return this[impl].has(...args);\n};\n\nFormData.prototype.set = function set(name, value) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\n      \"Failed to execute 'set' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  switch (arguments.length) {\n    case 2:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (isBlob(curArg)) {\n          {\n            let curArg = arguments[1];\n            curArg = convertBlob(curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 2\" });\n            args.push(curArg);\n          }\n        } else {\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        }\n      }\n      break;\n    default:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = convertBlob(curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 2\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 3\" });\n        }\n        args.push(curArg);\n      }\n  }\n  return this[impl].set(...args);\n};\n\nFormData.prototype.entries = FormData.prototype[Symbol.iterator];\n\nFormData.prototype.keys = function keys() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return module.exports.createDefaultIterator(this, \"key\");\n};\n\nFormData.prototype.values = function values() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return module.exports.createDefaultIterator(this, \"value\");\n};\n\nObject.defineProperty(FormData.prototype, Symbol.toStringTag, {\n  value: \"FormData\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'FormData'.`);\n  },\n\n  createDefaultIterator(target, kind) {\n    const iterator = Object.create(IteratorPrototype);\n    Object.defineProperty(iterator, utils.iterInternalSymbol, {\n      value: { target, kind, index: 0 },\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    return iterator;\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(FormData.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(FormData.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: FormData,\n  expose: {\n    Window: { FormData },\n    Worker: { FormData }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../xhr/FormData-impl.js\");\n"]},"metadata":{},"sourceType":"script"}