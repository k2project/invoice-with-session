{"ast":null,"code":"\"use strict\";\n\nconst legacyErrorCodes = require(\"./legacy-error-codes.json\");\n\nconst idlUtils = require(\"./utils.js\");\n\nexports.implementation = class DOMExceptionImpl {\n  constructor([message, name]) {\n    this.name = name;\n    this.message = message;\n  }\n\n  get code() {\n    return legacyErrorCodes[this.name] || 0;\n  }\n\n}; // A proprietary V8 extension that causes the stack property to appear.\n\nexports.init = impl => {\n  if (Error.captureStackTrace) {\n    const wrapper = idlUtils.wrapperForImpl(impl);\n    Error.captureStackTrace(wrapper, wrapper.constructor);\n  }\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/domexception/lib/DOMException-impl.js"],"names":["legacyErrorCodes","require","idlUtils","exports","implementation","DOMExceptionImpl","constructor","message","name","code","init","impl","Error","captureStackTrace","wrapper","wrapperForImpl"],"mappings":"AAAA;;AACA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,2BAAD,CAAhC;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAxB;;AAEAE,OAAO,CAACC,cAAR,GAAyB,MAAMC,gBAAN,CAAuB;AAC9CC,EAAAA,WAAW,CAAC,CAACC,OAAD,EAAUC,IAAV,CAAD,EAAkB;AAC3B,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKD,OAAL,GAAeA,OAAf;AACD;;AAED,MAAIE,IAAJ,GAAW;AACT,WAAOT,gBAAgB,CAAC,KAAKQ,IAAN,CAAhB,IAA+B,CAAtC;AACD;;AAR6C,CAAhD,C,CAWA;;AACAL,OAAO,CAACO,IAAR,GAAeC,IAAI,IAAI;AACrB,MAAIC,KAAK,CAACC,iBAAV,EAA6B;AAC3B,UAAMC,OAAO,GAAGZ,QAAQ,CAACa,cAAT,CAAwBJ,IAAxB,CAAhB;AACAC,IAAAA,KAAK,CAACC,iBAAN,CAAwBC,OAAxB,EAAiCA,OAAO,CAACR,WAAzC;AACD;AACF,CALD","sourcesContent":["\"use strict\";\nconst legacyErrorCodes = require(\"./legacy-error-codes.json\");\nconst idlUtils = require(\"./utils.js\");\n\nexports.implementation = class DOMExceptionImpl {\n  constructor([message, name]) {\n    this.name = name;\n    this.message = message;\n  }\n\n  get code() {\n    return legacyErrorCodes[this.name] || 0;\n  }\n};\n\n// A proprietary V8 extension that causes the stack property to appear.\nexports.init = impl => {\n  if (Error.captureStackTrace) {\n    const wrapper = idlUtils.wrapperForImpl(impl);\n    Error.captureStackTrace(wrapper, wrapper.constructor);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}