{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/routes/PrivateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  session: {\n    loading,\n    authenticated\n  },\n  ...rest\n}) => {\n  loading && /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !authenticated ? /*#__PURE__*/React.createElement(Redirect, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }));\n};\n\nPrivateRoute.propTypes = {\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  session: state.session.session\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/routes/PrivateRoute.js"],"names":["React","PropTypes","Redirect","Route","connect","PrivateRoute","component","Component","session","loading","authenticated","rest","props","propTypes","bool","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAClBC,EAAAA,SAAS,EAAEC,SADO;AAElBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAFS;AAGlB,KAAGC;AAHe,CAAD,KAIf;AACFF,EAAAA,OAAO,iBACH,oBAAC,KAAD,oBACQE,IADR;AAEI,IAAA,MAAM,EAAGC,KAAD,IACJ,CAACF,aAAD,gBACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,gBAGI,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAYH,CAjBD;;AAmBAP,YAAY,CAACQ,SAAb,GAAyB;AACrBH,EAAAA,aAAa,EAAET,SAAS,CAACa,IAAV,CAAeC;AADT,CAAzB;;AAGA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCT,EAAAA,OAAO,EAAES,KAAK,CAACT,OAAN,CAAcA;AADS,CAAZ,CAAxB;;AAGA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n    component: Component,\n    session: { loading, authenticated },\n    ...rest\n}) => {\n    loading && (\n        <Route\n            {...rest}\n            render={(props) =>\n                !authenticated ? (\n                    <Redirect to={'/'} />\n                ) : (\n                    <Component {...props} />\n                )\n            }\n        />\n    );\n};\n\nPrivateRoute.propTypes = {\n    authenticated: PropTypes.bool.isRequired,\n};\nconst mapStateToProps = (state) => ({\n    session: state.session.session,\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}