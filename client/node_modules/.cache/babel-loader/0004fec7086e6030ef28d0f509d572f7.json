{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertFocusEventInit = require(\"./FocusEventInit.js\").convert;\n\nconst impl = utils.implSymbol;\n\nconst UIEvent = require(\"./UIEvent.js\");\n\nfunction FocusEvent(type) {\n  if (new.target === undefined) {\n    throw new TypeError(\"Failed to construct 'FocusEvent'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'FocusEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to construct 'FocusEvent': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = convertFocusEventInit(curArg, {\n      context: \"Failed to construct 'FocusEvent': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  iface.setup(this, args);\n}\n\nObject.setPrototypeOf(FocusEvent.prototype, UIEvent.interface.prototype);\nObject.setPrototypeOf(FocusEvent, UIEvent.interface);\nObject.defineProperty(FocusEvent, \"prototype\", {\n  value: FocusEvent.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(FocusEvent.prototype, \"relatedTarget\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"relatedTarget\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(FocusEvent.prototype, Symbol.toStringTag, {\n  value: \"FocusEvent\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'FocusEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(FocusEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(FocusEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    UIEvent._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: FocusEvent,\n  expose: {\n    Window: {\n      FocusEvent\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../events/FocusEvent-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/FocusEvent.js"],"names":["conversions","require","utils","convertFocusEventInit","convert","impl","implSymbol","UIEvent","FocusEvent","type","new","target","undefined","TypeError","arguments","length","args","curArg","context","push","iface","setup","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","get","module","exports","is","tryWrapperForImpl","Symbol","toStringTag","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","create","constructorArgs","privateData","createImpl","_internalSetup","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertFocusEventInit = require(\"./FocusEventInit.js\").convert;\nconst impl = utils.implSymbol;\nconst UIEvent = require(\"./UIEvent.js\");\n\nfunction FocusEvent(type) {\n  if (new.target === undefined) {\n    throw new TypeError(\n      \"Failed to construct 'FocusEvent'. Please use the 'new' operator; this constructor \" +\n        \"cannot be called as a function.\"\n    );\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to construct 'FocusEvent': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'FocusEvent': parameter 1\" });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = convertFocusEventInit(curArg, { context: \"Failed to construct 'FocusEvent': parameter 2\" });\n    args.push(curArg);\n  }\n\n  iface.setup(this, args);\n}\n\nObject.setPrototypeOf(FocusEvent.prototype, UIEvent.interface.prototype);\nObject.setPrototypeOf(FocusEvent, UIEvent.interface);\n\nObject.defineProperty(FocusEvent, \"prototype\", {\n  value: FocusEvent.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(FocusEvent.prototype, \"relatedTarget\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"relatedTarget\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(FocusEvent.prototype, Symbol.toStringTag, {\n  value: \"FocusEvent\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'FocusEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(FocusEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(FocusEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    UIEvent._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: FocusEvent,\n  expose: {\n    Window: { FocusEvent }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../events/FocusEvent-impl.js\");\n"]},"metadata":{},"sourceType":"script"}