{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/invoice/InvoiceDoc.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Document, Page, Text, View, Image, Font } from '@react-pdf/renderer';\nimport { styles } from './invoiceDocStyles';\nimport { getInputValueByLabel } from '../../components/form/utils/customFormQueries';\n\nconst InvoiceDoc = ({\n  profile\n}) => {\n  return /*#__PURE__*/React.createElement(Document, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }\n  }, profile && /*#__PURE__*/React.createElement(DocPage, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 34\n    }\n  }));\n};\n\nInvoiceDoc.propTypes = {};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n}); // export default InvoiceDoc;\n\n\nexport default connect(mapStateToProps)(InvoiceDoc);\n\nconst Subtitle = ({\n  children,\n  ...props\n}) => /*#__PURE__*/React.createElement(Text, Object.assign({\n  style: styles.subtitle\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}), children);\n\nconst DocPage = ({\n  profile\n}) => {\n  const [invoiceState, setInvoiceState] = useState({});\n  useEffect(() => {\n    if (profile.details) {\n      console.log(getInputValueByLabel(profile.details, 'Name'));\n      name = getInputValueByLabel(profile.details, 'Name');\n    }\n  });\n  const {\n    profile: {\n      name\n    }\n  } = invoiceState;\n  return /*#__PURE__*/React.createElement(Page, {\n    size: \"A4\",\n    style: styles.page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Section #1\"), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    style: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Section #2\")));\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/invoice/InvoiceDoc.js"],"names":["React","useState","useEffect","PropTypes","connect","Document","Page","Text","View","Image","Font","styles","getInputValueByLabel","InvoiceDoc","profile","propTypes","mapStateToProps","state","Subtitle","children","props","subtitle","DocPage","invoiceState","setInvoiceState","details","console","log","name","page","section"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,qBAAxD;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,oBAAT,QAAqC,+CAArC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAChC,sBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWA,OAAO,iBAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CAAP;AACH,CAFD;;AAIAD,UAAU,CAACE,SAAX,GAAuB,EAAvB;;AACA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCH,EAAAA,OAAO,EAAEG,KAAK,CAACH;AADiB,CAAZ,CAAxB,C,CAGA;;;AACA,eAAeV,OAAO,CAACY,eAAD,CAAP,CAAyBH,UAAzB,CAAf;;AAEA,MAAMK,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,kBACb,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAET,MAAM,CAACU;AAApB,GAAkCD,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACKD,QADL,CADJ;;AAMA,MAAMG,OAAO,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAiB;AAC7B,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,EAAD,CAAhD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,OAAO,CAACW,OAAZ,EAAqB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYf,oBAAoB,CAACE,OAAO,CAACW,OAAT,EAAkB,MAAlB,CAAhC;AACAG,MAAAA,IAAI,GAAGhB,oBAAoB,CAACE,OAAO,CAACW,OAAT,EAAkB,MAAlB,CAA3B;AACH;AACJ,GALQ,CAAT;AAMA,QAAM;AACFX,IAAAA,OAAO,EAAE;AAAEc,MAAAA;AAAF;AADP,MAEFL,YAFJ;AAGA,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAEZ,MAAM,CAACkB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACmB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CALJ,CADJ;AAWH,CAtBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Document, Page, Text, View, Image, Font } from '@react-pdf/renderer';\nimport { styles } from './invoiceDocStyles';\nimport { getInputValueByLabel } from '../../components/form/utils/customFormQueries';\n\nconst InvoiceDoc = ({ profile }) => {\n    return <Document>{profile && <DocPage profile={profile} />}</Document>;\n};\n\nInvoiceDoc.propTypes = {};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\n// export default InvoiceDoc;\nexport default connect(mapStateToProps)(InvoiceDoc);\n\nconst Subtitle = ({ children, ...props }) => (\n    <Text style={styles.subtitle} {...props}>\n        {children}\n    </Text>\n);\n\nconst DocPage = ({ profile }) => {\n    const [invoiceState, setInvoiceState] = useState({});\n    useEffect(() => {\n        if (profile.details) {\n            console.log(getInputValueByLabel(profile.details, 'Name'));\n            name = getInputValueByLabel(profile.details, 'Name');\n        }\n    });\n    const {\n        profile: { name },\n    } = invoiceState;\n    return (\n        <Page size='A4' style={styles.page}>\n            <View style={styles.section}>\n                <Text>Section #1</Text>\n                <Text>{}</Text>\n            </View>\n            <View style={styles.section}>\n                <Text>Section #2</Text>\n            </View>\n        </Page>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}