{"ast":null,"code":"export const getInputObjById = (arr, id) => {\n  return arr.find(input => input._id === id);\n};\nexport const getInputValueByLabel = (arr, l) => {\n  return arr.find(input => input.label === l).value;\n}; //arr1 -> obj with arr2 ( obj with value property  that position in arr2 chnages dinamicaly )\n\nexport const sortInputsByNamesAlphabeticaly = arr => {\n  return arr.sort((a, b) => {\n    console.log(getInputValueByLabel(a.details, 'Name'));\n    console.log(getInputValueByLabel(b.details, 'Name'));\n    getInputValueByLabel(a.details, 'Name').localeCompare(getInputValueByLabel(b.details, 'Name'));\n  });\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/utils/customFormQueries.js"],"names":["getInputObjById","arr","id","find","input","_id","getInputValueByLabel","l","label","value","sortInputsByNamesAlphabeticaly","sort","a","b","console","log","details","localeCompare"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,CAACC,GAAD,EAAMC,EAAN,KAAa;AACxC,SAAOD,GAAG,CAACE,IAAJ,CAAUC,KAAD,IAAWA,KAAK,CAACC,GAAN,KAAcH,EAAlC,CAAP;AACH,CAFM;AAIP,OAAO,MAAMI,oBAAoB,GAAG,CAACL,GAAD,EAAMM,CAAN,KAAY;AAC5C,SAAON,GAAG,CAACE,IAAJ,CAAUC,KAAD,IAAWA,KAAK,CAACI,KAAN,KAAgBD,CAApC,EAAuCE,KAA9C;AACH,CAFM,C,CAIP;;AACA,OAAO,MAAMC,8BAA8B,GAAIT,GAAD,IAAS;AACnD,SAAOA,GAAG,CAACU,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYT,oBAAoB,CAACM,CAAC,CAACI,OAAH,EAAY,MAAZ,CAAhC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYT,oBAAoB,CAACO,CAAC,CAACG,OAAH,EAAY,MAAZ,CAAhC;AACAV,IAAAA,oBAAoB,CAACM,CAAC,CAACI,OAAH,EAAY,MAAZ,CAApB,CAAwCC,aAAxC,CACIX,oBAAoB,CAACO,CAAC,CAACG,OAAH,EAAY,MAAZ,CADxB;AAGH,GANM,CAAP;AAOH,CARM","sourcesContent":["export const getInputObjById = (arr, id) => {\n    return arr.find((input) => input._id === id);\n};\n\nexport const getInputValueByLabel = (arr, l) => {\n    return arr.find((input) => input.label === l).value;\n};\n\n//arr1 -> obj with arr2 ( obj with value property  that position in arr2 chnages dinamicaly )\nexport const sortInputsByNamesAlphabeticaly = (arr) => {\n    return arr.sort((a, b) => {\n        console.log(getInputValueByLabel(a.details, 'Name'));\n        console.log(getInputValueByLabel(b.details, 'Name'));\n        getInputValueByLabel(a.details, 'Name').localeCompare(\n            getInputValueByLabel(b.details, 'Name')\n        );\n    });\n};\n"]},"metadata":{},"sourceType":"module"}