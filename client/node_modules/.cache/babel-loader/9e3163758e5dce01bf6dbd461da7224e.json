{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/Company.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Page from '../../components/page/Page';\nimport CompanySubmenu from './CompanySubmenu';\nimport CompanyUpdate from './CompanyUpdate';\nimport CompanyDetails from './CompanyDetails';\nimport './Company.scss';\nexport const Company = ({\n  companies,\n  currentCompanyTab\n}) => {\n  let {\n    id\n  } = useParams();\n  let company = companies.find(c => c._id === id);\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, !company && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/dashboard/companies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 26\n    }\n  }), company && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CompanySubmenu, {\n    company: company,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }), currentCompanyTab === 'tasks' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, \"tasks\"), currentCompanyTab === 'invoices' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, \"invoices\"), currentCompanyTab === 'details' && /*#__PURE__*/React.createElement(CompanyDetails, {\n    company: company,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }), currentCompanyTab === 'update' && /*#__PURE__*/React.createElement(CompanyUpdate, {\n    company: company.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  })));\n};\nCompany.propTypes = {\n  companies: PropTypes.array,\n  currentCompanyTab: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  companies: state.companies,\n  currentCompanyTab: state.session.currentCompanyTab\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Company);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/Company.js"],"names":["React","useEffect","Fragment","PropTypes","Redirect","useParams","connect","Page","CompanySubmenu","CompanyUpdate","CompanyDetails","Company","companies","currentCompanyTab","id","company","find","c","_id","details","propTypes","array","string","mapStateToProps","state","session","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,kBAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAO,gBAAP;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAsC;AACzD,MAAI;AAAEC,IAAAA;AAAF,MAAST,SAAS,EAAtB;AACA,MAAIU,OAAO,GAAGH,SAAS,CAACI,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUJ,EAAhC,CAAd;AAEA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACC,OAAD,iBAAY,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEKA,OAAO,iBACJ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEA,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKF,iBAAiB,KAAK,OAAtB,iBACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHR,EAKKA,iBAAiB,KAAK,UAAtB,iBACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANR,EAQKA,iBAAiB,KAAK,SAAtB,iBACG,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEE,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATR,EAWKF,iBAAiB,KAAK,QAAtB,iBACG,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEE,OAAO,CAACI,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZR,CAHR,CADJ;AAsBH,CA1BM;AA2BPR,OAAO,CAACS,SAAR,GAAoB;AAChBR,EAAAA,SAAS,EAAET,SAAS,CAACkB,KADL;AAEhBR,EAAAA,iBAAiB,EAAEV,SAAS,CAACmB;AAFb,CAApB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCZ,EAAAA,SAAS,EAAEY,KAAK,CAACZ,SADe;AAEhCC,EAAAA,iBAAiB,EAAEW,KAAK,CAACC,OAAN,CAAcZ;AAFD,CAAZ,CAAxB;;AAKA,MAAMa,kBAAkB,GAAG,EAA3B;AAEA,eAAepB,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,OAA7C,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Page from '../../components/page/Page';\nimport CompanySubmenu from './CompanySubmenu';\nimport CompanyUpdate from './CompanyUpdate';\nimport CompanyDetails from './CompanyDetails';\n\nimport './Company.scss';\n\nexport const Company = ({ companies, currentCompanyTab }) => {\n    let { id } = useParams();\n    let company = companies.find((c) => c._id === id);\n\n    return (\n        <Page>\n            {!company && <Redirect to='/dashboard/companies' />}\n            {company && (\n                <Fragment>\n                    <CompanySubmenu company={company} />\n                    {currentCompanyTab === 'tasks' && (\n                        <div className='tile'>tasks</div>\n                    )}\n                    {currentCompanyTab === 'invoices' && (\n                        <div className='tile'>invoices</div>\n                    )}\n                    {currentCompanyTab === 'details' && (\n                        <CompanyDetails company={company} />\n                    )}\n                    {currentCompanyTab === 'update' && (\n                        <CompanyUpdate company={company.details} />\n                    )}\n                </Fragment>\n            )}\n        </Page>\n    );\n};\nCompany.propTypes = {\n    companies: PropTypes.array,\n    currentCompanyTab: PropTypes.string,\n};\nconst mapStateToProps = (state) => ({\n    companies: state.companies,\n    currentCompanyTab: state.session.currentCompanyTab,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Company);\n"]},"metadata":{},"sourceType":"module"}