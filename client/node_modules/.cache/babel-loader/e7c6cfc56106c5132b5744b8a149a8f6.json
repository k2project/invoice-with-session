{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertNode = require(\"./Node.js\").convert;\n\nconst impl = utils.implSymbol;\n\nfunction TreeWalker() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(TreeWalker, \"prototype\", {\n  value: TreeWalker.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nTreeWalker.prototype.parentNode = function parentNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].parentNode());\n};\n\nTreeWalker.prototype.firstChild = function firstChild() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].firstChild());\n};\n\nTreeWalker.prototype.lastChild = function lastChild() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].lastChild());\n};\n\nTreeWalker.prototype.previousSibling = function previousSibling() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].previousSibling());\n};\n\nTreeWalker.prototype.nextSibling = function nextSibling() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].nextSibling());\n};\n\nTreeWalker.prototype.previousNode = function previousNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].previousNode());\n};\n\nTreeWalker.prototype.nextNode = function nextNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].nextNode());\n};\n\nObject.defineProperty(TreeWalker.prototype, \"root\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"root\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"root\"]);\n    });\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(TreeWalker.prototype, \"whatToShow\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"whatToShow\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(TreeWalker.prototype, \"filter\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"filter\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(TreeWalker.prototype, \"currentNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"currentNode\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = convertNode(V, {\n      context: \"Failed to set the 'currentNode' property on 'TreeWalker': The provided value\"\n    });\n    this[impl][\"currentNode\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(TreeWalker.prototype, Symbol.toStringTag, {\n  value: \"TreeWalker\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'TreeWalker'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(TreeWalker.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(TreeWalker.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: TreeWalker,\n  expose: {\n    Window: {\n      TreeWalker\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../traversal/TreeWalker-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/TreeWalker.js"],"names":["conversions","require","utils","convertNode","convert","impl","implSymbol","TreeWalker","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","parentNode","module","exports","is","tryWrapperForImpl","firstChild","lastChild","previousSibling","nextSibling","previousNode","nextNode","get","getSameObject","set","V","context","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","interface","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertNode = require(\"./Node.js\").convert;\nconst impl = utils.implSymbol;\n\nfunction TreeWalker() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(TreeWalker, \"prototype\", {\n  value: TreeWalker.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nTreeWalker.prototype.parentNode = function parentNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].parentNode());\n};\n\nTreeWalker.prototype.firstChild = function firstChild() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].firstChild());\n};\n\nTreeWalker.prototype.lastChild = function lastChild() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].lastChild());\n};\n\nTreeWalker.prototype.previousSibling = function previousSibling() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].previousSibling());\n};\n\nTreeWalker.prototype.nextSibling = function nextSibling() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].nextSibling());\n};\n\nTreeWalker.prototype.previousNode = function previousNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].previousNode());\n};\n\nTreeWalker.prototype.nextNode = function nextNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].nextNode());\n};\n\nObject.defineProperty(TreeWalker.prototype, \"root\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"root\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"root\"]);\n    });\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TreeWalker.prototype, \"whatToShow\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"whatToShow\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TreeWalker.prototype, \"filter\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"filter\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TreeWalker.prototype, \"currentNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"currentNode\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = convertNode(V, { context: \"Failed to set the 'currentNode' property on 'TreeWalker': The provided value\" });\n\n    this[impl][\"currentNode\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TreeWalker.prototype, Symbol.toStringTag, {\n  value: \"TreeWalker\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'TreeWalker'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(TreeWalker.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(TreeWalker.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: TreeWalker,\n  expose: {\n    Window: { TreeWalker }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../traversal/TreeWalker-impl.js\");\n"]},"metadata":{},"sourceType":"script"}