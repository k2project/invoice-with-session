{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocFooter.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateInvoiceNotes, updateInvoiceDiscount, updateInvoiceCurrency, updateInvoiceTaxRate, updateInvoiceOtherFees } from '../../../../redux/actions/invoice';\nimport { toNumberWithCommas, validateRateInputToObj, validateTaxInputValueToNum } from '../../../../components/form/utils/validations';\nimport notesIcon from '../../../../imgs/icons/notesIcon.png';\nimport discountIcon from '../../../../imgs/icons/discountIcon.png';\nimport waletIcon from '../../../../imgs/icons/waletIcon.png';\n\nconst InvoiceDocFooter = ({\n  invoice,\n  updateInvoiceNotes,\n  updateInvoiceDiscount,\n  updateInvoiceCurrency,\n  updateInvoiceTaxRate,\n  updateInvoiceOtherFees,\n  tasks\n}) => {\n  const [errors, setErrors] = useState(null);\n  useEffect(() => {\n    const itemWithCurrency = tasks.filter(t => t.addToInvoice).find(t => t.amount.currency);\n\n    if (itemWithCurrency) {\n      let currency = itemWithCurrency.amount.currency;\n      updateInvoiceCurrency(currency);\n    } else {\n      updateInvoiceCurrency('');\n    }\n\n    const discountInput = document.getElementById('invoice-discount');\n\n    if (invoice.discount > 0 && discountInput) {\n      setShowDiscount(true);\n      discountInput.value = `${invoice.currency}${invoice.discount}`;\n    }\n  }, [tasks]);\n  const TXT_INIT_TEXT = invoice.notes || 'Thank you for your business.';\n  const [notes, setNotes] = useState(TXT_INIT_TEXT);\n\n  const handle_notes_edit = e => {\n    let notes = e.target.value;\n    setNotes(notes);\n    updateInvoiceNotes(notes);\n  };\n\n  const [showDiscount, setShowDiscount] = useState(false);\n  const [discount, setDiscount] = useState(invoice.discount || 0);\n\n  const show_discount = async () => {\n    if (showDiscount) {\n      //reset discount on hidding\n      setDiscount(0);\n      updateInvoiceDiscount(0);\n      return setShowDiscount(false);\n    }\n\n    await setShowDiscount(true);\n    edit_input('discount', discount);\n  };\n\n  const handle_discount_edit = e => {\n    setErrors(null);\n    let discount = e.target.value; //return {currency, numValue}\n\n    discount = validateRateInputToObj(discount);\n\n    if (discount) {\n      //alert when discount > net total\n      if (discount.numValue > net_total_num) {\n        discount = 0;\n        setErrors('Discount value is greater than the subtotal.');\n      } else {\n        discount = discount.numValue;\n      }\n    } else {\n      // invalid input\n      // e.target.value = `${currency}0.00`;\n      setErrors('Inavalid discount input. Please enter the value in format £100.00 !'); //disable when no items in the arr\n    }\n\n    setDiscount(discount);\n    updateInvoiceDiscount(discount);\n  };\n\n  const edit_input = (input, stateValue) => {\n    if (input === 'textarea') input = document.getElementById('invoice-notes');\n    if (input === 'discount') input = document.getElementById('invoice-discount');\n    if (input === 'fees') input = document.getElementById('invoice-fees'); //move cursor to the end of text by reseting value to empty string befor setting focus on the el\n\n    input.value = '';\n    input.focus();\n    input.value = stateValue || `${invoice.currency}0.00`;\n  };\n\n  const [tax, setTax] = useState(invoice.tax || 0);\n\n  const handle_tax_edit = e => {\n    setErrors(null);\n    let tax_rate = e.target.value;\n    tax_rate = validateTaxInputValueToNum(tax_rate);\n    if (tax_rate === null) setErrors('Inavalid tax rate input. Please enter the value in format 0-100%.');\n    setTax(tax_rate);\n    updateInvoiceTaxRate(tax_rate);\n  };\n\n  const [showFees, setShowFees] = useState(false);\n  const [fees, setFees] = useState(invoice.fees || 0);\n\n  const show_fees = async () => {\n    if (showFees) {\n      //reset fees on hidding\n      setFees(0);\n      updateInvoiceOtherFees(0);\n      return setShowFees(false);\n    }\n\n    await setShowFees(true);\n    edit_input('fees', fees);\n  };\n\n  const handle_fees_edit = e => {\n    setErrors(null);\n    let fees = e.target.value;\n    fees = validateRateInputToObj(fees);\n    if (fees === null) return setErrors('Inavalid discount input. Please enter the value in format £100.00 !');\n    setFees(fees.numValue);\n    updateInvoiceOtherFees(fees.numValue);\n  }; //TOTAL CALCULATION\n\n\n  let net_total_num = tasks.filter(t => t.addToInvoice).reduce((sum, t) => {\n    if (t.amount.amountNet) return sum + t.amount.amountNet;\n    return sum;\n  }, 0);\n  const net_total_str = toNumberWithCommas(net_total_num) || '0.00';\n  net_total_num = net_total_num - discount;\n  const tax_total_num = net_total_num * (tax / 100);\n  const tax_total_str = toNumberWithCommas(tax_total_num) || '0%';\n  const invoice_total_num = net_total_num + tax_total_num + fees;\n  const invoice_total_str = toNumberWithCommas(invoice_total_num);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"invoice__btn icon_iNotes\",\n    title: \"Edit notes\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => edit_input('textarea', notes),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: notesIcon,\n    alt: \"Edit notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"invoice__btn icon_iDiscount\",\n    title: \"Add discount\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: show_discount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: discountIcon,\n    alt: \"Add discount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"invoice__btn icon_iFees\",\n    title: \"Add other fees\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: show_fees,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: waletIcon,\n    alt: \"Add other fees\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__notes-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }, \"Notes:\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, notes)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `bg-${invoice.bg_color}  invoice__cover`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__notes-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"invoice-notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }\n  }, \" Notes:\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"invoice-notes\",\n    onChange: handle_notes_edit,\n    defaultValue: TXT_INIT_TEXT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"section\", {\n    className: `bg-${invoice.bg_color} txt-${invoice.text_color} invoice__total`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, \"Net and gross amount.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, \"Subtotal:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 29\n    }\n  }, invoice.currency, net_total_str))), showDiscount && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__discount-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, \"Discount:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 37\n    }\n  }, invoice.currency, invoice.discount))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"invoice__discount-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"invoice-discount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }, \"Discount:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"invoice-discount\",\n    autoComplete: \"off\",\n    onChange: handle_discount_edit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__tax-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, \"Tax rate:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, tax, \"%\"))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"invoice__tax-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"invoice-tax\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, \"Tax Rate:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"invoice-tax\",\n    onChange: handle_tax_edit,\n    autoComplete: \"off\",\n    defaultValue: \"0%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  })), tax > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, \"Tax Amount:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }\n  }, invoice.currency, tax_total_str))), showFees && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__fees-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 33\n    }\n  }, \"Other:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 37\n    }\n  }, invoice.currency, invoice.fees))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"invoice__fees-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"invoice-fees\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 33\n    }\n  }, \"Other:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"invoice-fees\",\n    autoComplete: \"off\",\n    onChange: handle_fees_edit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 25\n    }\n  }, \"Total:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invoice__total-sum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }\n  }, invoice.currency, invoice_total_str)))), errors && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile tile--err\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, \"Error: \", errors), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, \"Thank you for your business!\"));\n};\n\nInvoiceDocFooter.propTypes = {\n  invoice: PropTypes.object,\n  tasks: PropTypes.array,\n  updateInvoiceNotes: PropTypes.func,\n  updateInvoiceDiscount: PropTypes.func,\n  updateInvoiceCurrency: PropTypes.func,\n  updateInvoiceTaxRate: PropTypes.func,\n  updateInvoiceOtherFees: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  invoice: state.invoice,\n  tasks: state.companies.find(c => c._id === state.session.currentCompany).tasks\n});\n\nconst mapDispatchToProps = {\n  updateInvoiceNotes,\n  updateInvoiceDiscount,\n  updateInvoiceCurrency,\n  updateInvoiceTaxRate,\n  updateInvoiceOtherFees\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocFooter);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocFooter.js"],"names":["React","useState","useEffect","Fragment","PropTypes","connect","updateInvoiceNotes","updateInvoiceDiscount","updateInvoiceCurrency","updateInvoiceTaxRate","updateInvoiceOtherFees","toNumberWithCommas","validateRateInputToObj","validateTaxInputValueToNum","notesIcon","discountIcon","waletIcon","InvoiceDocFooter","invoice","tasks","errors","setErrors","itemWithCurrency","filter","t","addToInvoice","find","amount","currency","discountInput","document","getElementById","discount","setShowDiscount","value","TXT_INIT_TEXT","notes","setNotes","handle_notes_edit","e","target","showDiscount","setDiscount","show_discount","edit_input","handle_discount_edit","numValue","net_total_num","input","stateValue","focus","tax","setTax","handle_tax_edit","tax_rate","showFees","setShowFees","fees","setFees","show_fees","handle_fees_edit","reduce","sum","amountNet","net_total_str","tax_total_num","tax_total_str","invoice_total_num","invoice_total_str","preventDefault","bg_color","text_color","propTypes","object","array","func","mapStateToProps","state","companies","c","_id","session","currentCompany","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    updateInvoiceNotes,\n    updateInvoiceDiscount,\n    updateInvoiceCurrency,\n    updateInvoiceTaxRate,\n    updateInvoiceOtherFees,\n} from '../../../../redux/actions/invoice';\nimport {\n    toNumberWithCommas,\n    validateRateInputToObj,\n    validateTaxInputValueToNum,\n} from '../../../../components/form/utils/validations';\nimport notesIcon from '../../../../imgs/icons/notesIcon.png';\nimport discountIcon from '../../../../imgs/icons/discountIcon.png';\nimport waletIcon from '../../../../imgs/icons/waletIcon.png';\n\nconst InvoiceDocFooter = ({\n    invoice,\n    updateInvoiceNotes,\n    updateInvoiceDiscount,\n    updateInvoiceCurrency,\n    updateInvoiceTaxRate,\n    updateInvoiceOtherFees,\n    tasks,\n}) => {\n    const [errors, setErrors] = useState(null);\n    useEffect(() => {\n        const itemWithCurrency = tasks\n            .filter((t) => t.addToInvoice)\n            .find((t) => t.amount.currency);\n        if (itemWithCurrency) {\n            let currency = itemWithCurrency.amount.currency;\n            updateInvoiceCurrency(currency);\n        } else {\n            updateInvoiceCurrency('');\n        }\n        const discountInput = document.getElementById('invoice-discount');\n        if (invoice.discount > 0 && discountInput) {\n            setShowDiscount(true);\n            discountInput.value = `${invoice.currency}${invoice.discount}`;\n        }\n    }, [tasks]);\n\n    const TXT_INIT_TEXT = invoice.notes || 'Thank you for your business.';\n    const [notes, setNotes] = useState(TXT_INIT_TEXT);\n    const handle_notes_edit = (e) => {\n        let notes = e.target.value;\n        setNotes(notes);\n        updateInvoiceNotes(notes);\n    };\n    const [showDiscount, setShowDiscount] = useState(false);\n    const [discount, setDiscount] = useState(invoice.discount || 0);\n    const show_discount = async () => {\n        if (showDiscount) {\n            //reset discount on hidding\n            setDiscount(0);\n            updateInvoiceDiscount(0);\n            return setShowDiscount(false);\n        }\n        await setShowDiscount(true);\n        edit_input('discount', discount);\n    };\n    const handle_discount_edit = (e) => {\n        setErrors(null);\n        let discount = e.target.value;\n        //return {currency, numValue}\n        discount = validateRateInputToObj(discount);\n        if (discount) {\n            //alert when discount > net total\n            if (discount.numValue > net_total_num) {\n                discount = 0;\n                setErrors('Discount value is greater than the subtotal.');\n            } else {\n                discount = discount.numValue;\n            }\n        } else {\n            // invalid input\n            // e.target.value = `${currency}0.00`;\n            setErrors(\n                'Inavalid discount input. Please enter the value in format £100.00 !'\n            );\n\n            //disable when no items in the arr\n        }\n        setDiscount(discount);\n        updateInvoiceDiscount(discount);\n    };\n    const edit_input = (input, stateValue) => {\n        if (input === 'textarea')\n            input = document.getElementById('invoice-notes');\n        if (input === 'discount')\n            input = document.getElementById('invoice-discount');\n        if (input === 'fees') input = document.getElementById('invoice-fees');\n        //move cursor to the end of text by reseting value to empty string befor setting focus on the el\n        input.value = '';\n        input.focus();\n        input.value = stateValue || `${invoice.currency}0.00`;\n    };\n    const [tax, setTax] = useState(invoice.tax || 0);\n    const handle_tax_edit = (e) => {\n        setErrors(null);\n        let tax_rate = e.target.value;\n        tax_rate = validateTaxInputValueToNum(tax_rate);\n        if (tax_rate === null)\n            setErrors(\n                'Inavalid tax rate input. Please enter the value in format 0-100%.'\n            );\n        setTax(tax_rate);\n        updateInvoiceTaxRate(tax_rate);\n    };\n    const [showFees, setShowFees] = useState(false);\n    const [fees, setFees] = useState(invoice.fees || 0);\n    const show_fees = async () => {\n        if (showFees) {\n            //reset fees on hidding\n            setFees(0);\n            updateInvoiceOtherFees(0);\n            return setShowFees(false);\n        }\n        await setShowFees(true);\n        edit_input('fees', fees);\n    };\n    const handle_fees_edit = (e) => {\n        setErrors(null);\n        let fees = e.target.value;\n        fees = validateRateInputToObj(fees);\n        if (fees === null)\n            return setErrors(\n                'Inavalid discount input. Please enter the value in format £100.00 !'\n            );\n        setFees(fees.numValue);\n        updateInvoiceOtherFees(fees.numValue);\n    };\n\n    //TOTAL CALCULATION\n\n    let net_total_num = tasks\n        .filter((t) => t.addToInvoice)\n        .reduce((sum, t) => {\n            if (t.amount.amountNet) return sum + t.amount.amountNet;\n            return sum;\n        }, 0);\n    const net_total_str = toNumberWithCommas(net_total_num) || '0.00';\n    net_total_num = net_total_num - discount;\n\n    const tax_total_num = net_total_num * (tax / 100);\n    const tax_total_str = toNumberWithCommas(tax_total_num) || '0%';\n\n    const invoice_total_num = net_total_num + tax_total_num + fees;\n    const invoice_total_str = toNumberWithCommas(invoice_total_num);\n\n    return (\n        <Fragment>\n            <section className='invoice__footer'>\n                <button\n                    type='button'\n                    className='invoice__btn icon_iNotes'\n                    title='Edit notes'\n                    onMouseDown={(e) => e.preventDefault()}\n                    onClick={() => edit_input('textarea', notes)}\n                >\n                    <img src={notesIcon} alt='Edit notes' />\n                </button>\n                <button\n                    type='button'\n                    className='invoice__btn icon_iDiscount'\n                    title='Add discount'\n                    onMouseDown={(e) => e.preventDefault()}\n                    onClick={show_discount}\n                >\n                    <img src={discountIcon} alt='Add discount' />\n                </button>\n                <button\n                    type='button'\n                    className='invoice__btn icon_iFees'\n                    title='Add other fees'\n                    onMouseDown={(e) => e.preventDefault()}\n                    onClick={show_fees}\n                >\n                    <img src={waletIcon} alt='Add other fees' />\n                </button>\n\n                <section className='invoice__notes'>\n                    <div className='invoice__notes-display'>\n                        <h3>\n                            <b>Notes:</b>\n                        </h3>\n                        <p>{notes}</p>\n                    </div>\n                    <div\n                        className={`bg-${invoice.bg_color}  invoice__cover`}\n                    ></div>\n                    <div className='invoice__notes-form'>\n                        <form>\n                            <label htmlFor='invoice-notes'>\n                                <b> Notes:</b>\n                            </label>\n                            <textarea\n                                id='invoice-notes'\n                                onChange={handle_notes_edit}\n                                defaultValue={TXT_INIT_TEXT}\n                            ></textarea>\n                        </form>\n                    </div>\n                </section>\n                <section\n                    className={`bg-${invoice.bg_color} txt-${invoice.text_color} invoice__total`}\n                >\n                    <h3 className='sr-only'>Net and gross amount.</h3>\n\n                    <div>\n                        <span>Subtotal:</span>\n                        <span>\n                            <b>\n                                {invoice.currency}\n                                {net_total_str}\n                            </b>\n                        </span>\n                    </div>\n                    {showDiscount && (\n                        <Fragment>\n                            <div className='invoice__discount-display'>\n                                <span>Discount:</span>\n                                <span>\n                                    <b>\n                                        {invoice.currency}\n                                        {invoice.discount}\n                                    </b>\n                                </span>\n                            </div>\n                            <form className='invoice__discount-form'>\n                                <label htmlFor='invoice-discount'>\n                                    Discount:\n                                </label>\n                                <input\n                                    type='text'\n                                    id='invoice-discount'\n                                    autoComplete='off'\n                                    onChange={handle_discount_edit}\n                                />\n                            </form>\n                        </Fragment>\n                    )}\n                    <div className='invoice__tax-display'>\n                        <span>Tax rate:</span>\n                        <span>\n                            <b>{tax}%</b>\n                        </span>\n                    </div>\n                    <form className='invoice__tax-form'>\n                        <label htmlFor='invoice-tax'>Tax Rate:</label>\n                        <input\n                            type='text'\n                            id='invoice-tax'\n                            onChange={handle_tax_edit}\n                            autoComplete='off'\n                            defaultValue='0%'\n                        />\n                    </form>\n                    {tax > 0 && (\n                        <div>\n                            <span>Tax Amount:</span>\n                            <span>\n                                <b>\n                                    {invoice.currency}\n                                    {tax_total_str}\n                                </b>\n                            </span>\n                        </div>\n                    )}\n                    {showFees && (\n                        <Fragment>\n                            <div className='invoice__fees-display'>\n                                <span>Other:</span>\n                                <span>\n                                    <b>\n                                        {invoice.currency}\n                                        {invoice.fees}\n                                    </b>\n                                </span>\n                            </div>\n                            <form className='invoice__fees-form'>\n                                <label htmlFor='invoice-fees'>Other:</label>\n                                <input\n                                    type='text'\n                                    id='invoice-fees'\n                                    autoComplete='off'\n                                    onChange={handle_fees_edit}\n                                />\n                            </form>\n                        </Fragment>\n                    )}\n                    <div>\n                        <span className='sr-only'>Total:</span>\n                        <span className='invoice__total-sum'>\n                            {invoice.currency}\n                            {invoice_total_str}\n                        </span>\n                    </div>\n                </section>\n            </section>\n            {errors && (\n                <div className='tile tile--err' role='alert'>\n                    Error: {errors}\n                </div>\n            )}\n            <footer>Thank you for your business!</footer>\n        </Fragment>\n    );\n};\n\nInvoiceDocFooter.propTypes = {\n    invoice: PropTypes.object,\n    tasks: PropTypes.array,\n    updateInvoiceNotes: PropTypes.func,\n    updateInvoiceDiscount: PropTypes.func,\n    updateInvoiceCurrency: PropTypes.func,\n    updateInvoiceTaxRate: PropTypes.func,\n    updateInvoiceOtherFees: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    invoice: state.invoice,\n    tasks: state.companies.find((c) => c._id === state.session.currentCompany)\n        .tasks,\n});\nconst mapDispatchToProps = {\n    updateInvoiceNotes,\n    updateInvoiceDiscount,\n    updateInvoiceCurrency,\n    updateInvoiceTaxRate,\n    updateInvoiceOtherFees,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocFooter);\n"]},"metadata":{},"sourceType":"module"}