{"ast":null,"code":"\"use strict\";\n\nconst validateNames = require(\"../helpers/validate-names\");\n\nconst DocumentType = require(\"../generated/DocumentType\");\n\nconst Document = require(\"../generated/Document\");\n\nconst {\n  HTML_NS,\n  SVG_NS\n} = require(\"../helpers/namespaces\");\n\nclass DOMImplementationImpl {\n  constructor(args, privateData) {\n    this._ownerDocument = privateData.ownerDocument;\n    this._features = Object.create(null);\n  }\n\n  hasFeature() {\n    return true;\n  }\n\n  createDocumentType(qualifiedName, publicId, systemId) {\n    validateNames.qname(qualifiedName);\n    return DocumentType.createImpl([], {\n      ownerDocument: this._ownerDocument,\n      name: qualifiedName,\n      publicId,\n      systemId\n    });\n  }\n\n  createDocument(namespace, qualifiedName, doctype) {\n    let contentType = \"application/xml\";\n\n    if (namespace === HTML_NS) {\n      contentType = \"application/xhtml+xml\";\n    } else if (namespace === SVG_NS) {\n      contentType = \"image/svg+xml\";\n    }\n\n    const document = Document.createImpl([], {\n      options: {\n        contentType,\n        parsingMode: \"xml\",\n        encoding: \"UTF-8\"\n      }\n    });\n    let element = null;\n\n    if (qualifiedName !== \"\") {\n      element = document.createElementNS(namespace, qualifiedName);\n    }\n\n    if (doctype !== null) {\n      document.appendChild(doctype);\n    }\n\n    if (element !== null) {\n      document.appendChild(element);\n    }\n\n    document.origin = this._ownerDocument.origin;\n    return document;\n  }\n\n  createHTMLDocument(title) {\n    // Let doc be a new document that is an HTML document.\n    // Set doc's content type to \"text/html\".\n    const document = Document.createImpl([], {\n      options: {\n        parsingMode: \"html\",\n        encoding: \"UTF-8\"\n      }\n    }); // Create a doctype, with \"html\" as its name and with its node document set\n    // to doc. Append the newly created node to doc.\n\n    const doctype = DocumentType.createImpl([], {\n      ownerDocument: this,\n      name: \"html\",\n      publicId: \"\",\n      systemId: \"\"\n    });\n    document.appendChild(doctype); // Create an html element in the HTML namespace, and append it to doc.\n\n    const htmlElement = document.createElementNS(HTML_NS, \"html\");\n    document.appendChild(htmlElement); // Create a head element in the HTML namespace, and append it to the html\n    // element created in the previous step.\n\n    const headElement = document.createElement(\"head\");\n    htmlElement.appendChild(headElement); // If the title argument is not omitted:\n\n    if (title !== undefined) {\n      // Create a title element in the HTML namespace, and append it to the head\n      // element created in the previous step.\n      const titleElement = document.createElement(\"title\");\n      headElement.appendChild(titleElement); // Create a Text node, set its data to title (which could be the empty\n      // string), and append it to the title element created in the previous step.\n\n      titleElement.appendChild(document.createTextNode(title));\n    } // Create a body element in the HTML namespace, and append it to the html\n    // element created in the earlier step.\n\n\n    htmlElement.appendChild(document.createElement(\"body\")); // doc's origin is an alias to the origin of the context object's associated\n    // document, and doc's effective script origin is an alias to the effective\n    // script origin of the context object's associated document.\n\n    return document;\n  }\n\n  _removeFeature(feature, version) {\n    feature = feature.toLowerCase();\n\n    if (this._features[feature]) {\n      if (version) {\n        const versions = this._features[feature];\n\n        for (let j = 0; j < versions.length; j++) {\n          if (versions[j] === version) {\n            versions.splice(j, 1);\n            return;\n          }\n        }\n      } else {\n        delete this._features[feature];\n      }\n    }\n  }\n\n  _addFeature(feature, version) {\n    feature = feature.toLowerCase();\n\n    if (version) {\n      if (!this._features[feature]) {\n        this._features[feature] = [];\n      }\n\n      if (version instanceof Array) {\n        Array.prototype.push.apply(this._features[feature], version);\n      } else {\n        this._features[feature].push(version);\n      }\n    } else {\n      this._features[feature] = [];\n    }\n  }\n\n  _hasFeature(feature, version) {\n    feature = feature ? feature.toLowerCase() : \"\";\n    const versions = this._features[feature] || false;\n\n    if (!version && versions.length && versions.length > 0) {\n      return true;\n    } else if (typeof versions === \"string\") {\n      return versions === version;\n    } else if (versions.indexOf && versions.length > 0) {\n      for (let i = 0; i < versions.length; i++) {\n        const found = versions[i] instanceof RegExp ? versions[i].test(version) : versions[i] === version;\n\n        if (found) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n}\n\nmodule.exports = {\n  implementation: DOMImplementationImpl\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/DOMImplementation-impl.js"],"names":["validateNames","require","DocumentType","Document","HTML_NS","SVG_NS","DOMImplementationImpl","constructor","args","privateData","_ownerDocument","ownerDocument","_features","Object","create","hasFeature","createDocumentType","qualifiedName","publicId","systemId","qname","createImpl","name","createDocument","namespace","doctype","contentType","document","options","parsingMode","encoding","element","createElementNS","appendChild","origin","createHTMLDocument","title","htmlElement","headElement","createElement","undefined","titleElement","createTextNode","_removeFeature","feature","version","toLowerCase","versions","j","length","splice","_addFeature","Array","prototype","push","apply","_hasFeature","indexOf","i","found","RegExp","test","module","exports","implementation"],"mappings":"AAAA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,2BAAD,CAA7B;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,2BAAD,CAA5B;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,uBAAD,CAAxB;;AACA,MAAM;AAAEG,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAsBJ,OAAO,CAAC,uBAAD,CAAnC;;AAEA,MAAMK,qBAAN,CAA4B;AAC1BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,EAAoB;AAC7B,SAAKC,cAAL,GAAsBD,WAAW,CAACE,aAAlC;AACA,SAAKC,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAjB;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,IAAP;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,aAAD,EAAgBC,QAAhB,EAA0BC,QAA1B,EAAoC;AACpDnB,IAAAA,aAAa,CAACoB,KAAd,CAAoBH,aAApB;AAEA,WAAOf,YAAY,CAACmB,UAAb,CAAwB,EAAxB,EAA4B;AACjCV,MAAAA,aAAa,EAAE,KAAKD,cADa;AAEjCY,MAAAA,IAAI,EAAEL,aAF2B;AAGjCC,MAAAA,QAHiC;AAIjCC,MAAAA;AAJiC,KAA5B,CAAP;AAMD;;AAEDI,EAAAA,cAAc,CAACC,SAAD,EAAYP,aAAZ,EAA2BQ,OAA3B,EAAoC;AAChD,QAAIC,WAAW,GAAG,iBAAlB;;AAEA,QAAIF,SAAS,KAAKpB,OAAlB,EAA2B;AACzBsB,MAAAA,WAAW,GAAG,uBAAd;AACD,KAFD,MAEO,IAAIF,SAAS,KAAKnB,MAAlB,EAA0B;AAC/BqB,MAAAA,WAAW,GAAG,eAAd;AACD;;AAED,UAAMC,QAAQ,GAAGxB,QAAQ,CAACkB,UAAT,CAAoB,EAApB,EAAwB;AACvCO,MAAAA,OAAO,EAAE;AAAEF,QAAAA,WAAF;AAAeG,QAAAA,WAAW,EAAE,KAA5B;AAAmCC,QAAAA,QAAQ,EAAE;AAA7C;AAD8B,KAAxB,CAAjB;AAIA,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAId,aAAa,KAAK,EAAtB,EAA0B;AACxBc,MAAAA,OAAO,GAAGJ,QAAQ,CAACK,eAAT,CAAyBR,SAAzB,EAAoCP,aAApC,CAAV;AACD;;AAED,QAAIQ,OAAO,KAAK,IAAhB,EAAsB;AACpBE,MAAAA,QAAQ,CAACM,WAAT,CAAqBR,OAArB;AACD;;AAED,QAAIM,OAAO,KAAK,IAAhB,EAAsB;AACpBJ,MAAAA,QAAQ,CAACM,WAAT,CAAqBF,OAArB;AACD;;AAEDJ,IAAAA,QAAQ,CAACO,MAAT,GAAkB,KAAKxB,cAAL,CAAoBwB,MAAtC;AAEA,WAAOP,QAAP;AACD;;AAEDQ,EAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACxB;AACA;AACA,UAAMT,QAAQ,GAAGxB,QAAQ,CAACkB,UAAT,CAAoB,EAApB,EAAwB;AACvCO,MAAAA,OAAO,EAAE;AAAEC,QAAAA,WAAW,EAAE,MAAf;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC;AAD8B,KAAxB,CAAjB,CAHwB,CAOxB;AACA;;AACA,UAAML,OAAO,GAAGvB,YAAY,CAACmB,UAAb,CAAwB,EAAxB,EAA4B;AAC1CV,MAAAA,aAAa,EAAE,IAD2B;AAE1CW,MAAAA,IAAI,EAAE,MAFoC;AAG1CJ,MAAAA,QAAQ,EAAE,EAHgC;AAI1CC,MAAAA,QAAQ,EAAE;AAJgC,KAA5B,CAAhB;AAOAQ,IAAAA,QAAQ,CAACM,WAAT,CAAqBR,OAArB,EAhBwB,CAkBxB;;AACA,UAAMY,WAAW,GAAGV,QAAQ,CAACK,eAAT,CAAyB5B,OAAzB,EAAkC,MAAlC,CAApB;AACAuB,IAAAA,QAAQ,CAACM,WAAT,CAAqBI,WAArB,EApBwB,CAsBxB;AACA;;AACA,UAAMC,WAAW,GAAGX,QAAQ,CAACY,aAAT,CAAuB,MAAvB,CAApB;AACAF,IAAAA,WAAW,CAACJ,WAAZ,CAAwBK,WAAxB,EAzBwB,CA2BxB;;AACA,QAAIF,KAAK,KAAKI,SAAd,EAAyB;AACvB;AACA;AACA,YAAMC,YAAY,GAAGd,QAAQ,CAACY,aAAT,CAAuB,OAAvB,CAArB;AACAD,MAAAA,WAAW,CAACL,WAAZ,CAAwBQ,YAAxB,EAJuB,CAMvB;AACA;;AACAA,MAAAA,YAAY,CAACR,WAAb,CAAyBN,QAAQ,CAACe,cAAT,CAAwBN,KAAxB,CAAzB;AACD,KArCuB,CAuCxB;AACA;;;AACAC,IAAAA,WAAW,CAACJ,WAAZ,CAAwBN,QAAQ,CAACY,aAAT,CAAuB,MAAvB,CAAxB,EAzCwB,CA2CxB;AACA;AACA;;AAEA,WAAOZ,QAAP;AACD;;AAEDgB,EAAAA,cAAc,CAACC,OAAD,EAAUC,OAAV,EAAmB;AAC/BD,IAAAA,OAAO,GAAGA,OAAO,CAACE,WAAR,EAAV;;AACA,QAAI,KAAKlC,SAAL,CAAegC,OAAf,CAAJ,EAA6B;AAC3B,UAAIC,OAAJ,EAAa;AACX,cAAME,QAAQ,GAAG,KAAKnC,SAAL,CAAegC,OAAf,CAAjB;;AACA,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,cAAID,QAAQ,CAACC,CAAD,CAAR,KAAgBH,OAApB,EAA6B;AAC3BE,YAAAA,QAAQ,CAACG,MAAT,CAAgBF,CAAhB,EAAmB,CAAnB;AACA;AACD;AACF;AACF,OARD,MAQO;AACL,eAAO,KAAKpC,SAAL,CAAegC,OAAf,CAAP;AACD;AACF;AACF;;AAEDO,EAAAA,WAAW,CAACP,OAAD,EAAUC,OAAV,EAAmB;AAC5BD,IAAAA,OAAO,GAAGA,OAAO,CAACE,WAAR,EAAV;;AAEA,QAAID,OAAJ,EAAa;AACX,UAAI,CAAC,KAAKjC,SAAL,CAAegC,OAAf,CAAL,EAA8B;AAC5B,aAAKhC,SAAL,CAAegC,OAAf,IAA0B,EAA1B;AACD;;AAED,UAAIC,OAAO,YAAYO,KAAvB,EAA8B;AAC5BA,QAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,KAAK3C,SAAL,CAAegC,OAAf,CAA3B,EAAoDC,OAApD;AACD,OAFD,MAEO;AACL,aAAKjC,SAAL,CAAegC,OAAf,EAAwBU,IAAxB,CAA6BT,OAA7B;AACD;AACF,KAVD,MAUO;AACL,WAAKjC,SAAL,CAAegC,OAAf,IAA0B,EAA1B;AACD;AACF;;AAEDY,EAAAA,WAAW,CAACZ,OAAD,EAAUC,OAAV,EAAmB;AAC5BD,IAAAA,OAAO,GAAGA,OAAO,GAAGA,OAAO,CAACE,WAAR,EAAH,GAA2B,EAA5C;AACA,UAAMC,QAAQ,GAAG,KAAKnC,SAAL,CAAegC,OAAf,KAA2B,KAA5C;;AAEA,QAAI,CAACC,OAAD,IAAYE,QAAQ,CAACE,MAArB,IAA+BF,QAAQ,CAACE,MAAT,GAAkB,CAArD,EAAwD;AACtD,aAAO,IAAP;AACD,KAFD,MAEO,IAAI,OAAOF,QAAP,KAAoB,QAAxB,EAAkC;AACvC,aAAOA,QAAQ,KAAKF,OAApB;AACD,KAFM,MAEA,IAAIE,QAAQ,CAACU,OAAT,IAAoBV,QAAQ,CAACE,MAAT,GAAkB,CAA1C,EAA6C;AAClD,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,QAAQ,CAACE,MAA7B,EAAqCS,CAAC,EAAtC,EAA0C;AACxC,cAAMC,KAAK,GAAGZ,QAAQ,CAACW,CAAD,CAAR,YAAuBE,MAAvB,GAAgCb,QAAQ,CAACW,CAAD,CAAR,CAAYG,IAAZ,CAAiBhB,OAAjB,CAAhC,GAA4DE,QAAQ,CAACW,CAAD,CAAR,KAAgBb,OAA1F;;AACA,YAAIc,KAAJ,EAAW;AACT,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD;;AAED,WAAO,KAAP;AACD;;AA5JyB;;AA+J5BG,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,cAAc,EAAE1D;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst validateNames = require(\"../helpers/validate-names\");\nconst DocumentType = require(\"../generated/DocumentType\");\nconst Document = require(\"../generated/Document\");\nconst { HTML_NS, SVG_NS } = require(\"../helpers/namespaces\");\n\nclass DOMImplementationImpl {\n  constructor(args, privateData) {\n    this._ownerDocument = privateData.ownerDocument;\n    this._features = Object.create(null);\n  }\n\n  hasFeature() {\n    return true;\n  }\n\n  createDocumentType(qualifiedName, publicId, systemId) {\n    validateNames.qname(qualifiedName);\n\n    return DocumentType.createImpl([], {\n      ownerDocument: this._ownerDocument,\n      name: qualifiedName,\n      publicId,\n      systemId\n    });\n  }\n\n  createDocument(namespace, qualifiedName, doctype) {\n    let contentType = \"application/xml\";\n\n    if (namespace === HTML_NS) {\n      contentType = \"application/xhtml+xml\";\n    } else if (namespace === SVG_NS) {\n      contentType = \"image/svg+xml\";\n    }\n\n    const document = Document.createImpl([], {\n      options: { contentType, parsingMode: \"xml\", encoding: \"UTF-8\" }\n    });\n\n    let element = null;\n    if (qualifiedName !== \"\") {\n      element = document.createElementNS(namespace, qualifiedName);\n    }\n\n    if (doctype !== null) {\n      document.appendChild(doctype);\n    }\n\n    if (element !== null) {\n      document.appendChild(element);\n    }\n\n    document.origin = this._ownerDocument.origin;\n\n    return document;\n  }\n\n  createHTMLDocument(title) {\n    // Let doc be a new document that is an HTML document.\n    // Set doc's content type to \"text/html\".\n    const document = Document.createImpl([], {\n      options: { parsingMode: \"html\", encoding: \"UTF-8\" }\n    });\n\n    // Create a doctype, with \"html\" as its name and with its node document set\n    // to doc. Append the newly created node to doc.\n    const doctype = DocumentType.createImpl([], {\n      ownerDocument: this,\n      name: \"html\",\n      publicId: \"\",\n      systemId: \"\"\n    });\n\n    document.appendChild(doctype);\n\n    // Create an html element in the HTML namespace, and append it to doc.\n    const htmlElement = document.createElementNS(HTML_NS, \"html\");\n    document.appendChild(htmlElement);\n\n    // Create a head element in the HTML namespace, and append it to the html\n    // element created in the previous step.\n    const headElement = document.createElement(\"head\");\n    htmlElement.appendChild(headElement);\n\n    // If the title argument is not omitted:\n    if (title !== undefined) {\n      // Create a title element in the HTML namespace, and append it to the head\n      // element created in the previous step.\n      const titleElement = document.createElement(\"title\");\n      headElement.appendChild(titleElement);\n\n      // Create a Text node, set its data to title (which could be the empty\n      // string), and append it to the title element created in the previous step.\n      titleElement.appendChild(document.createTextNode(title));\n    }\n\n    // Create a body element in the HTML namespace, and append it to the html\n    // element created in the earlier step.\n    htmlElement.appendChild(document.createElement(\"body\"));\n\n    // doc's origin is an alias to the origin of the context object's associated\n    // document, and doc's effective script origin is an alias to the effective\n    // script origin of the context object's associated document.\n\n    return document;\n  }\n\n  _removeFeature(feature, version) {\n    feature = feature.toLowerCase();\n    if (this._features[feature]) {\n      if (version) {\n        const versions = this._features[feature];\n        for (let j = 0; j < versions.length; j++) {\n          if (versions[j] === version) {\n            versions.splice(j, 1);\n            return;\n          }\n        }\n      } else {\n        delete this._features[feature];\n      }\n    }\n  }\n\n  _addFeature(feature, version) {\n    feature = feature.toLowerCase();\n\n    if (version) {\n      if (!this._features[feature]) {\n        this._features[feature] = [];\n      }\n\n      if (version instanceof Array) {\n        Array.prototype.push.apply(this._features[feature], version);\n      } else {\n        this._features[feature].push(version);\n      }\n    } else {\n      this._features[feature] = [];\n    }\n  }\n\n  _hasFeature(feature, version) {\n    feature = feature ? feature.toLowerCase() : \"\";\n    const versions = this._features[feature] || false;\n\n    if (!version && versions.length && versions.length > 0) {\n      return true;\n    } else if (typeof versions === \"string\") {\n      return versions === version;\n    } else if (versions.indexOf && versions.length > 0) {\n      for (let i = 0; i < versions.length; i++) {\n        const found = versions[i] instanceof RegExp ? versions[i].test(version) : versions[i] === version;\n        if (found) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = {\n  implementation: DOMImplementationImpl\n};\n"]},"metadata":{},"sourceType":"script"}