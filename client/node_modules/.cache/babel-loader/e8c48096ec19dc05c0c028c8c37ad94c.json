{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst initialState = {};\nconst middleware = [thunk]; // const store = createStore(\n//     rootReducer,\n//     initialState,\n//     composeWithDevTools(applyMiddleware(...middleware))\n// );\n\nconst persistConfig = {\n  key: 'primary',\n  storage,\n  whitelist: ['session']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport function initializeStore(initialState = exampleInitialState) {\n  return createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","persistReducer","storage","initialState","middleware","persistConfig","key","whitelist","persistedReducer","initializeStore","exampleInitialState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACL,KAAD,CAAnB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMM,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,SADa;AAElBJ,EAAAA,OAFkB;AAGlBK,EAAAA,SAAS,EAAE,CAAC,SAAD;AAHO,CAAtB;AAMA,MAAMC,gBAAgB,GAAGP,cAAc,CAACI,aAAD,EAAgBL,WAAhB,CAAvC;AAEA,OAAO,SAASS,eAAT,CAAyBN,YAAY,GAAGO,mBAAxC,EAA6D;AAChE,SAAOd,WAAW,CACdY,gBADc,EAEdL,YAFc,EAGdL,mBAAmB,CAACD,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CAHL,CAAlB;AAKH","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst initialState = {};\nconst middleware = [thunk];\n\n// const store = createStore(\n//     rootReducer,\n//     initialState,\n//     composeWithDevTools(applyMiddleware(...middleware))\n// );\n\nconst persistConfig = {\n    key: 'primary',\n    storage,\n    whitelist: ['session'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport function initializeStore(initialState = exampleInitialState) {\n    return createStore(\n        persistedReducer,\n        initialState,\n        composeWithDevTools(applyMiddleware(...middleware))\n    );\n}\n"]},"metadata":{},"sourceType":"module"}