{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocHeader.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeInvoiceColors, updateInvoiceProfile } from '../../../../redux/actions/invoice';\nimport DetailsDisplayTable from '../../../../components/form/components/DetailsDisplayTable';\nimport settingsIcon from '../../../../imgs/icons/cogs.png';\nimport profileIcon from '../../../../imgs/icons/profileIcon.png';\n\nconst InvoiceDocHeader = ({\n  invoice,\n  changeInvoiceColors,\n  updateInvoiceProfile\n}) => {\n  const [settings, setSettings] = useState(false);\n  const [showProfile, setShowProfile] = useState(false);\n  const profileDetails = invoice.profile.map(input => {\n    //Name displayed differently\n    if (input.label === 'Name' && input.addToInvoice) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: input._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, input.value));\n    } //exclude banking details from header\n\n\n    const banking_details = ['Bank Name', 'Sort Code', 'Account Number'];\n\n    if (input.addToInvoice && !banking_details.includes(input.label)) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: input._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      }, input.value);\n    }\n  });\n  const BG_COLORS = [['#000', 'black'], ['#5F7C8A', 'grey'], ['#785447', 'brown'], ['#EB9346', 'orange'], ['#ff872b', 'bright-orange'], ['#ffd455', 'yellow'], ['#d8e465', 'yellow-green'], ['#8BC34A', 'light-green'], ['#4BAF50', 'green'], ['#009688', 'dark-green'], ['#01BCD5', 'see-blue'], ['#03A9F4', 'light-blue'], ['#2065A8', 'blue'], ['#203354', 'dark-blue'], ['#3F50B6', 'dark-purple'], ['#673BB7', 'purple'], ['#9C27B0', 'purple-pink'], ['#E91F63', 'pink'], ['#D5133A', 'dark-pink'], ['#F44337', 'red']];\n  const bgColorPicker = BG_COLORS.map(color => /*#__PURE__*/React.createElement(\"li\", {\n    key: 'bg-color-picker-' + color[0],\n    style: {\n      backgroundColor: `${color[0]}`\n    },\n    title: color[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changeInvoiceColors([color[1], invoice.text_color]);\n      localStorage.setItem('invoice_bg', color[1]);\n    },\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"color[1]\"))));\n  const TXT_COLORS = [['#000', 'black'], ['#FFF', 'white']];\n  const txtColorPicker = TXT_COLORS.map(color => /*#__PURE__*/React.createElement(\"li\", {\n    key: 'txt-color-picker-' + color[0],\n    style: {\n      backgroundColor: `${color[0]}`\n    },\n    title: color[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changeInvoiceColors([invoice.bg_color, color[1]]);\n      localStorage.setItem('invoice_txt', color[1]);\n    },\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"color[1]\"))));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, settings && /*#__PURE__*/React.createElement(\"section\", {\n    className: \"color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"bg-color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Choose invoice background colour theme.\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"aria-labelledby\": \"bg-color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, bgColorPicker)), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"txt-color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"Choose text colour.\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"aria-labelledby\": \"txt-color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, txtColorPicker)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close\",\n    onClick: () => setSettings(false),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"header\", {\n    className: `bg-${invoice.bg_color} txt-${invoice.text_color}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"invoice__btn icon_iSettings\",\n    title: \"Change invoice settings\",\n    onClick: () => setSettings(true),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: settingsIcon,\n    alt: \"Invoice settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"invoice__btn\",\n    title: \"Change Profile details\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => setShowProfile(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: profileIcon,\n    alt: \"Change Profile details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  })), profileDetails), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, \"invoice\"), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"#RTE-2020-04-00001\"))), showProfile && /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DetailsDisplayTable, {\n    details: invoice.profile,\n    updateState: updateInvoiceProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close\",\n    onClick: () => setShowProfile(false),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"))));\n};\n\nInvoiceDocHeader.propTypes = {\n  invoice: PropTypes.object,\n  changeInvoiceColors: PropTypes.func,\n  updateInvoiceProfile: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  invoice: state.invoice\n});\n\nconst mapDispatchToProps = {\n  changeInvoiceColors,\n  updateInvoiceProfile\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocHeader);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocHeader.js"],"names":["React","useState","useEffect","Fragment","PropTypes","connect","changeInvoiceColors","updateInvoiceProfile","DetailsDisplayTable","settingsIcon","profileIcon","InvoiceDocHeader","invoice","settings","setSettings","showProfile","setShowProfile","profileDetails","profile","map","input","label","addToInvoice","_id","value","banking_details","includes","BG_COLORS","bgColorPicker","color","backgroundColor","text_color","localStorage","setItem","e","preventDefault","TXT_COLORS","txtColorPicker","bg_color","propTypes","object","func","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    changeInvoiceColors,\n    updateInvoiceProfile,\n} from '../../../../redux/actions/invoice';\nimport DetailsDisplayTable from '../../../../components/form/components/DetailsDisplayTable';\nimport settingsIcon from '../../../../imgs/icons/cogs.png';\nimport profileIcon from '../../../../imgs/icons/profileIcon.png';\n\nconst InvoiceDocHeader = ({\n    invoice,\n    changeInvoiceColors,\n    updateInvoiceProfile,\n}) => {\n    const [settings, setSettings] = useState(false);\n    const [showProfile, setShowProfile] = useState(false);\n    const profileDetails = invoice.profile.map((input) => {\n        //Name displayed differently\n        if (input.label === 'Name' && input.addToInvoice) {\n            return (\n                <p key={input._id}>\n                    <b>{input.value}</b>\n                </p>\n            );\n        }\n\n        //exclude banking details from header\n        const banking_details = ['Bank Name', 'Sort Code', 'Account Number'];\n        if (input.addToInvoice && !banking_details.includes(input.label)) {\n            return <p key={input._id}>{input.value}</p>;\n        }\n    });\n\n    const BG_COLORS = [\n        ['#000', 'black'],\n        ['#5F7C8A', 'grey'],\n        ['#785447', 'brown'],\n        ['#EB9346', 'orange'],\n        ['#ff872b', 'bright-orange'],\n        ['#ffd455', 'yellow'],\n        ['#d8e465', 'yellow-green'],\n        ['#8BC34A', 'light-green'],\n        ['#4BAF50', 'green'],\n        ['#009688', 'dark-green'],\n        ['#01BCD5', 'see-blue'],\n        ['#03A9F4', 'light-blue'],\n        ['#2065A8', 'blue'],\n        ['#203354', 'dark-blue'],\n        ['#3F50B6', 'dark-purple'],\n        ['#673BB7', 'purple'],\n        ['#9C27B0', 'purple-pink'],\n        ['#E91F63', 'pink'],\n        ['#D5133A', 'dark-pink'],\n        ['#F44337', 'red'],\n    ];\n    const bgColorPicker = BG_COLORS.map((color) => (\n        <li\n            key={'bg-color-picker-' + color[0]}\n            style={{ backgroundColor: `${color[0]}` }}\n            title={color[0]}\n        >\n            <button\n                onClick={() => {\n                    changeInvoiceColors([color[1], invoice.text_color]);\n                    localStorage.setItem('invoice_bg', color[1]);\n                }}\n                onMouseDown={(e) => e.preventDefault()}\n            >\n                <span className='sr-only'>color[1]</span>\n            </button>\n        </li>\n    ));\n    const TXT_COLORS = [\n        ['#000', 'black'],\n        ['#FFF', 'white'],\n    ];\n    const txtColorPicker = TXT_COLORS.map((color) => (\n        <li\n            key={'txt-color-picker-' + color[0]}\n            style={{ backgroundColor: `${color[0]}` }}\n            title={color[0]}\n        >\n            <button\n                onClick={() => {\n                    changeInvoiceColors([invoice.bg_color, color[1]]);\n                    localStorage.setItem('invoice_txt', color[1]);\n                }}\n                onMouseDown={(e) => e.preventDefault()}\n            >\n                <span className='sr-only'>color[1]</span>\n            </button>\n        </li>\n    ));\n    return (\n        <Fragment>\n            {settings && (\n                <section className='color-picker'>\n                    <section>\n                        <h3 id='bg-color-picker'>\n                            Choose invoice background colour theme.\n                        </h3>\n                        <ul aria-labelledby='bg-color-picker'>\n                            {bgColorPicker}\n                        </ul>\n                    </section>\n                    <section>\n                        <h3 id='txt-color-picker'>Choose text colour.</h3>\n                        <ul aria-labelledby='txt-color-picker'>\n                            {txtColorPicker}\n                        </ul>\n                    </section>\n                    <button\n                        className='close'\n                        onClick={() => setSettings(false)}\n                        onMouseDown={(e) => e.preventDefault()}\n                    >\n                        <span>&times;</span>\n                    </button>\n                </section>\n            )}\n            <header\n                className={`bg-${invoice.bg_color} txt-${invoice.text_color}`}\n            >\n                <button\n                    className='invoice__btn icon_iSettings'\n                    title='Change invoice settings'\n                    onClick={() => setSettings(true)}\n                    onMouseDown={(e) => e.preventDefault()}\n                >\n                    <img src={settingsIcon} alt='Invoice settings' />\n                </button>\n\n                <div>\n                    <button\n                        className='invoice__btn'\n                        title='Change Profile details'\n                        onMouseDown={(e) => e.preventDefault()}\n                        onClick={() => setShowProfile(true)}\n                    >\n                        <img src={profileIcon} alt='Change Profile details' />\n                    </button>\n                    {profileDetails}\n                </div>\n                <div>\n                    <h1>invoice</h1>\n                    <b>#RTE-2020-04-00001</b>\n                </div>\n            </header>\n            {showProfile && (\n                <section>\n                    <DetailsDisplayTable\n                        details={invoice.profile}\n                        updateState={updateInvoiceProfile}\n                    />\n                    <button\n                        className='close'\n                        onClick={() => setShowProfile(false)}\n                        onMouseDown={(e) => e.preventDefault()}\n                    >\n                        <span>&times;</span>\n                    </button>\n                </section>\n            )}\n        </Fragment>\n    );\n};\n\nInvoiceDocHeader.propTypes = {\n    invoice: PropTypes.object,\n    changeInvoiceColors: PropTypes.func,\n    updateInvoiceProfile: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    invoice: state.invoice,\n});\nconst mapDispatchToProps = {\n    changeInvoiceColors,\n    updateInvoiceProfile,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocHeader);\n"]},"metadata":{},"sourceType":"module"}