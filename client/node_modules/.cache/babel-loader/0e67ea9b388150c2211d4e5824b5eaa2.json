{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js\";\nimport React, { useEffect, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport { setProfileTab } from '../../redux/actions/session';\nimport { setUpdates } from '../../redux/actions/updates';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges';\n\nclass ProfileUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChanges = this.handleChanges.bind(this);\n    this.clearInitState = this.clearInitState.bind(this);\n    this.updateInitStateToReduxStateOnSubmit = this.updateInitStateToReduxStateOnSubmit.bind(this);\n  }\n\n  handleChanges() {\n    alertUnsavedChanges(this.props.initialState, //initial state\n    this.props.profile.details, //redux updated state\n    this.props.setProfileTab, this.props.setUpdates, this.props.history);\n  }\n\n  updateInitStateToReduxStateOnSubmit() {\n    this.props.setUpdates(this.props.profile.details);\n  }\n\n  clearInitState() {\n    //on submit clear app updates\n    this.props.setUpdates(null);\n  }\n\n  componentDidMount() {\n    if (this.props.initialState === null) this.props.setUpdates(JSON.parse(JSON.stringify(this.props.profile.details)));\n    console.log('MOUNTING____', 'INIT', this.props.initialState, 'REDUX', this.props.profile.details);\n    window.addEventListener('beforeunload', this.props.clearInitState);\n  }\n\n  componentWillUnmount() {\n    this.handleChanges();\n    window.removeEventListener('beforeunload', this.props.clearInitState);\n  }\n\n  render() {\n    console.log('REBDERING____', 'INIT', this.props.initialState, 'REDUX', this.props.profile.details);\n    const formData = {\n      details: this.props.profile.details,\n      http: '/api/profile',\n      url: '/dashboard/profile',\n      cb: this.props.getProfile,\n      updateInitStateToReduxStateOnSubmit: this.updateInitStateToReduxStateOnSubmit,\n      //stops firing alertUnsavedChanges on submit\n      msg: 'Your profile has been updated successfully.'\n    };\n    return /*#__PURE__*/React.createElement(CustomBuiltForm, {\n      data: formData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nProfileUpdate.propTypes = {\n  details: PropTypes.array,\n  getProfile: PropTypes.func,\n  setAlert: PropTypes.func,\n  setProfileTab: PropTypes.func,\n  setUpdates: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  initialState: state.updates.initialState\n});\n\nconst mapDispatchToProps = {\n  getProfile,\n  setProfileTab,\n  setUpdates\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileUpdate));","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js"],"names":["React","useEffect","Component","withRouter","PropTypes","CustomBuiltForm","connect","getProfile","setProfileTab","setUpdates","alertUnsavedChanges","ProfileUpdate","constructor","props","handleChanges","bind","clearInitState","updateInitStateToReduxStateOnSubmit","initialState","profile","details","history","componentDidMount","JSON","parse","stringify","console","log","window","addEventListener","componentWillUnmount","removeEventListener","render","formData","http","url","cb","msg","propTypes","array","func","setAlert","mapStateToProps","state","updates","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport { setProfileTab } from '../../redux/actions/session';\nimport { setUpdates } from '../../redux/actions/updates';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges';\n\nclass ProfileUpdate extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChanges = this.handleChanges.bind(this);\n        this.clearInitState = this.clearInitState.bind(this);\n        this.updateInitStateToReduxStateOnSubmit = this.updateInitStateToReduxStateOnSubmit.bind(\n            this\n        );\n    }\n    handleChanges() {\n        alertUnsavedChanges(\n            this.props.initialState, //initial state\n            this.props.profile.details, //redux updated state\n            this.props.setProfileTab,\n            this.props.setUpdates,\n            this.props.history\n        );\n    }\n    updateInitStateToReduxStateOnSubmit() {\n        this.props.setUpdates(this.props.profile.details);\n    }\n    clearInitState() {\n        //on submit clear app updates\n        this.props.setUpdates(null);\n    }\n    componentDidMount() {\n        if (this.props.initialState === null)\n            this.props.setUpdates(\n                JSON.parse(JSON.stringify(this.props.profile.details))\n            );\n        console.log(\n            'MOUNTING____',\n            'INIT',\n            this.props.initialState,\n            'REDUX',\n            this.props.profile.details\n        );\n        window.addEventListener('beforeunload', this.props.clearInitState);\n    }\n    componentWillUnmount() {\n        this.handleChanges();\n        window.removeEventListener('beforeunload', this.props.clearInitState);\n    }\n    render() {\n        console.log(\n            'REBDERING____',\n            'INIT',\n            this.props.initialState,\n            'REDUX',\n            this.props.profile.details\n        );\n        const formData = {\n            details: this.props.profile.details,\n            http: '/api/profile',\n            url: '/dashboard/profile',\n            cb: this.props.getProfile,\n            updateInitStateToReduxStateOnSubmit: this\n                .updateInitStateToReduxStateOnSubmit, //stops firing alertUnsavedChanges on submit\n            msg: 'Your profile has been updated successfully.',\n        };\n        return <CustomBuiltForm data={formData} />;\n    }\n}\n\nProfileUpdate.propTypes = {\n    details: PropTypes.array,\n    getProfile: PropTypes.func,\n    setAlert: PropTypes.func,\n    setProfileTab: PropTypes.func,\n    setUpdates: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    initialState: state.updates.initialState,\n});\nconst mapDispatchToProps = {\n    getProfile,\n    setProfileTab,\n    setUpdates,\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ProfileUpdate));\n"]},"metadata":{},"sourceType":"module"}