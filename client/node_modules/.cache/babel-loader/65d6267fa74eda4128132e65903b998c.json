{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/account/DeleteAccount.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\nimport { endSession } from '../../redux/actions/session';\nimport axios from 'axios';\nimport FormInput from '../../components/form/components/FormInput';\nimport FormErrorsDisplay from '../../components/form/components/FormErrorsDisplay';\nimport { formErrorsStyling } from '../../components/form/utils/formFuns';\n\nconst DeleteAccount = ({\n  user,\n  setAlert,\n  endSession\n}) => {\n  const deleteAccount = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const {\n      password\n    } = formData;\n    const {\n      _id\n    } = user;\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const body = JSON.stringify({\n        _id,\n        password\n      });\n      await axios.post('/api/user/unregister', body, config);\n      await axios.delete('/api/user/unregister');\n      endSession();\n      setAlert('Your account has been deleted successfully. We are sorry to see you going...', 'success', 'sign up page', false);\n    } catch (err) {\n      updateStateErrors(form, formData, setFormData, err.response.data.errors);\n    }\n  };\n\n  const [formData, setFormData] = useState({\n    password: '',\n    errors: []\n  });\n  useEffect(() => {\n    formErrorsStyling(formData.errors);\n  }, [formData.errors]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"delete-account account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Delete your account.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Once you delete your account, there is no going back. Please be certain.\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"tile\",\n    onSubmit: deleteAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    type: \"password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Enter password to confirm the deactivation of your account.\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--danger btn--sibling\",\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Delete account\"), formData.password.length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => setFormData({\n      password: '',\n      errors: []\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Cancel\")), formData.errors.length > 0 && /*#__PURE__*/React.createElement(FormErrorsDisplay, {\n    errors: formData.errors,\n    label: \"Delete account form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }));\n};\n\nDeleteAccount.propTypes = {\n  setAlert: PropTypes.func,\n  endSession: PropTypes.func\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  setAlert,\n  endSession\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/account/DeleteAccount.js"],"names":["React","useEffect","useState","PropTypes","connect","setAlert","endSession","axios","FormInput","FormErrorsDisplay","formErrorsStyling","DeleteAccount","user","deleteAccount","e","preventDefault","form","target","password","formData","_id","config","headers","body","JSON","stringify","post","delete","err","updateStateErrors","setFormData","response","data","errors","length","propTypes","func","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\nimport { endSession } from '../../redux/actions/session';\nimport axios from 'axios';\nimport FormInput from '../../components/form/components/FormInput';\nimport FormErrorsDisplay from '../../components/form/components/FormErrorsDisplay';\nimport { formErrorsStyling } from '../../components/form/utils/formFuns';\n\nconst DeleteAccount = ({ user, setAlert, endSession }) => {\n    const deleteAccount = async (e) => {\n        e.preventDefault();\n        const form = e.target;\n        const { password } = formData;\n        const { _id } = user;\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n\n            const body = JSON.stringify({ _id, password });\n\n            await axios.post('/api/user/unregister', body, config);\n            await axios.delete('/api/user/unregister');\n            endSession();\n            setAlert(\n                'Your account has been deleted successfully. We are sorry to see you going...',\n                'success',\n                'sign up page',\n                false\n            );\n        } catch (err) {\n            updateStateErrors(\n                form,\n                formData,\n                setFormData,\n                err.response.data.errors\n            );\n        }\n    };\n    const [formData, setFormData] = useState({\n        password: '',\n        errors: [],\n    });\n    useEffect(() => {\n        formErrorsStyling(formData.errors);\n    }, [formData.errors]);\n    return (\n        <section className='delete-account account'>\n            <h2>Delete your account.</h2>\n            <p>\n                Once you delete your account, there is no going back. Please be\n                certain.\n            </p>\n            <form className='tile' onSubmit={deleteAccount}>\n                <FormInput\n                    form={{ formData, setFormData }}\n                    type='password'\n                    name='password'\n                >\n                    Enter password to confirm the deactivation of your account.\n                </FormInput>\n                <button\n                    className='btn btn--danger btn--sibling'\n                    onMouseDown={(e) => e.preventDefault()}\n                >\n                    Delete account\n                </button>\n                {formData.password.length > 0 && (\n                    <button\n                        className='btn'\n                        onMouseDown={(e) => e.preventDefault()}\n                        onClick={() =>\n                            setFormData({\n                                password: '',\n                                errors: [],\n                            })\n                        }\n                    >\n                        Cancel\n                    </button>\n                )}\n            </form>\n            {formData.errors.length > 0 && (\n                <FormErrorsDisplay\n                    errors={formData.errors}\n                    label='Delete account form'\n                />\n            )}\n        </section>\n    );\n};\n\nDeleteAccount.propTypes = {\n    setAlert: PropTypes.func,\n    endSession: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = {\n    setAlert,\n    endSession,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount);\n"]},"metadata":{},"sourceType":"module"}