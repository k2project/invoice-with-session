{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Calendar.scss';\nimport { DAYS, DAYS_LEAP, DAYS_OF_THE_WEEK, MONTHS } from './dates';\nexport function Calendar({\n  cb\n}) {\n  const today = new Date();\n  const [date, setDate] = useState(today);\n  const day = date.getDate();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  const first_day = getStartDayOfMonth(date);\n\n  function getStartDayOfMonth(date) {\n    return new Date(year, month, 1).getDay(); // return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  }\n\n  function isLeapYear(year) {\n    return !(year % 4 || !(year % 100) && year % 400);\n  }\n\n  const days = isLeapYear(year) ? DAYS_LEAP : DAYS;\n  const empty_days = first_day === 0 ? 6 : first_day - 1;\n  const num_of_days_to_display = Array(days[date.getMonth()] + empty_days);\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setDate(new Date(year, month - 1, 1)),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"\\u27A4\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, MONTHS[month], \" \", year)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setDate(new Date(year, month + 1, 1)),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"\\u27A4\"))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, DAYS_OF_THE_WEEK.map(d => /*#__PURE__*/React.createElement(\"li\", {\n    key: 'cal-day-names-' + d,\n    className: \"day day__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, d))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, num_of_days_to_display.fill(null).map((_, index) => {\n    let d = index - (empty_days - 1);\n    if (d < 1) return /*#__PURE__*/React.createElement(\"li\", {\n      key: 'calendar-day-' + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 39\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"day\",\n      key: 'calendar-day-' + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onMouseDown: e => e.preventDefault(),\n      onClick: () => cb(`${d}/${month + 1}/${year}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: d === today.getDate() ? 'today' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, d)));\n  })));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js"],"names":["React","useState","useEffect","DAYS","DAYS_LEAP","DAYS_OF_THE_WEEK","MONTHS","Calendar","cb","today","Date","date","setDate","day","getDate","month","getMonth","year","getFullYear","first_day","getStartDayOfMonth","getDay","isLeapYear","days","empty_days","num_of_days_to_display","Array","e","preventDefault","map","d","fill","_","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,gBAA1B,EAA4CC,MAA5C,QAA0D,SAA1D;AAEA,OAAO,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA0B;AAC7B,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACQ,KAAD,CAAhC;AACA,QAAMI,GAAG,GAAGF,IAAI,CAACG,OAAL,EAAZ;AACA,QAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAL,EAAd;AACA,QAAMC,IAAI,GAAGN,IAAI,CAACO,WAAL,EAAb;AACA,QAAMC,SAAS,GAAGC,kBAAkB,CAACT,IAAD,CAApC;;AAEA,WAASS,kBAAT,CAA4BT,IAA5B,EAAkC;AAC9B,WAAO,IAAID,IAAJ,CAASO,IAAT,EAAeF,KAAf,EAAsB,CAAtB,EAAyBM,MAAzB,EAAP,CAD8B,CAE9B;AACH;;AAED,WAASC,UAAT,CAAoBL,IAApB,EAA0B;AACtB,WAAO,EAAEA,IAAI,GAAG,CAAP,IAAa,EAAEA,IAAI,GAAG,GAAT,KAAiBA,IAAI,GAAG,GAAvC,CAAP;AACH;;AAED,QAAMM,IAAI,GAAGD,UAAU,CAACL,IAAD,CAAV,GAAmBb,SAAnB,GAA+BD,IAA5C;AACA,QAAMqB,UAAU,GAAGL,SAAS,KAAK,CAAd,GAAkB,CAAlB,GAAsBA,SAAS,GAAG,CAArD;AAEA,QAAMM,sBAAsB,GAAGC,KAAK,CAACH,IAAI,CAACZ,IAAI,CAACK,QAAL,EAAD,CAAJ,GAAwBQ,UAAzB,CAApC;AAEA,sBACI;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACI,IAAA,OAAO,EAAE,MAAMZ,OAAO,CAAC,IAAIF,IAAJ,CAASO,IAAT,EAAeF,KAAK,GAAG,CAAvB,EAA0B,CAA1B,CAAD,CAD1B;AAEI,IAAA,WAAW,EAAGY,CAAD,IAAOA,CAAC,CAACC,cAAF,EAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CAFJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtB,MAAM,CAACS,KAAD,CADX,OACqBE,IADrB,CADJ,CARJ,eAcI;AACI,IAAA,OAAO,EAAE,MAAML,OAAO,CAAC,IAAIF,IAAJ,CAASO,IAAT,EAAeF,KAAK,GAAG,CAAvB,EAA0B,CAA1B,CAAD,CAD1B;AAEI,IAAA,WAAW,EAAGY,CAAD,IAAOA,CAAC,CAACC,cAAF,EAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CAdJ,CADJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,gBAAgB,CAACwB,GAAjB,CAAsBC,CAAD,iBAClB;AAAI,IAAA,GAAG,EAAE,mBAAmBA,CAA5B;AAA+B,IAAA,SAAS,EAAC,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,CADL,CADH,CADL,CAtBJ,eA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,sBAAsB,CAACM,IAAvB,CAA4B,IAA5B,EAAkCF,GAAlC,CAAsC,CAACG,CAAD,EAAIC,KAAJ,KAAc;AACjD,QAAIH,CAAC,GAAGG,KAAK,IAAIT,UAAU,GAAG,CAAjB,CAAb;AACA,QAAIM,CAAC,GAAG,CAAR,EAAW,oBAAO;AAAI,MAAA,GAAG,EAAE,kBAAkBG,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACX,wBACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,MAAA,GAAG,EAAE,kBAAkBA,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,WAAW,EAAGN,CAAD,IAAOA,CAAC,CAACC,cAAF,EADxB;AAEI,MAAA,OAAO,EAAE,MAAMpB,EAAE,CAAE,GAAEsB,CAAE,IAAGf,KAAK,GAAG,CAAE,IAAGE,IAAK,EAA3B,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AACI,MAAA,SAAS,EACLa,CAAC,KAAKrB,KAAK,CAACK,OAAN,EAAN,GAAwB,OAAxB,GAAkC,EAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKgB,CALL,CAJJ,CADJ,CADJ;AAgBH,GAnBA,CADL,CA9BJ,CADJ;AAuDH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Calendar.scss';\nimport { DAYS, DAYS_LEAP, DAYS_OF_THE_WEEK, MONTHS } from './dates';\n\nexport function Calendar({ cb }) {\n    const today = new Date();\n    const [date, setDate] = useState(today);\n    const day = date.getDate();\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    const first_day = getStartDayOfMonth(date);\n\n    function getStartDayOfMonth(date) {\n        return new Date(year, month, 1).getDay();\n        // return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n    }\n\n    function isLeapYear(year) {\n        return !(year % 4 || (!(year % 100) && year % 400));\n    }\n\n    const days = isLeapYear(year) ? DAYS_LEAP : DAYS;\n    const empty_days = first_day === 0 ? 6 : first_day - 1;\n\n    const num_of_days_to_display = Array(days[date.getMonth()] + empty_days);\n\n    return (\n        <article className='calendar'>\n            <div className='calendar__header'>\n                {/* prev month */}\n                <button\n                    onClick={() => setDate(new Date(year, month - 1, 1))}\n                    onMouseDown={(e) => e.preventDefault()}\n                >\n                    <span>&#x27A4;</span>\n                </button>\n                <div>\n                    <b>\n                        {MONTHS[month]} {year}\n                    </b>\n                </div>\n                {/* next month */}\n                <button\n                    onClick={() => setDate(new Date(year, month + 1, 1))}\n                    onMouseDown={(e) => e.preventDefault()}\n                >\n                    <span>&#x27A4;</span>\n                </button>\n            </div>\n            <ul>\n                {DAYS_OF_THE_WEEK.map((d) => (\n                    <li key={'cal-day-names-' + d} className='day day__name'>\n                        {d}\n                    </li>\n                ))}\n            </ul>\n\n            <ul>\n                {num_of_days_to_display.fill(null).map((_, index) => {\n                    let d = index - (empty_days - 1);\n                    if (d < 1) return <li key={'calendar-day-' + index}></li>;\n                    return (\n                        <li className='day' key={'calendar-day-' + index}>\n                            <button\n                                onMouseDown={(e) => e.preventDefault()}\n                                onClick={() => cb(`${d}/${month + 1}/${year}`)}\n                            >\n                                <span\n                                    className={\n                                        d === today.getDate() ? 'today' : ''\n                                    }\n                                >\n                                    {d}\n                                </span>\n                            </button>\n                        </li>\n                    );\n                })}\n            </ul>\n        </article>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}