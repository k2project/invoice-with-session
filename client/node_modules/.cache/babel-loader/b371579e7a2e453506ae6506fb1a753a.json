{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nconst initialState = {};\nconst middleware = [thunk];\nconst persistConfig = {\n  key: 'sess',\n  storage,\n  stateReconciler: autoMergeLevel2,\n  whitelist: ['session']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer); // const store = createStore(\n//     persistedReducer,\n//     initialState,\n//     composeWithDevTools(applyMiddleware(...middleware))\n// );\n// const persistor = persistStore(store);\n\nexport default (() => {\n  let store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor\n  };\n});","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","persistStore","persistReducer","storage","autoMergeLevel2","initialState","middleware","persistConfig","key","stateReconciler","whitelist","persistedReducer","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACP,KAAD,CAAnB;AAEA,MAAMQ,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBL,EAAAA,OAFkB;AAGlBM,EAAAA,eAAe,EAAEL,eAHC;AAIlBM,EAAAA,SAAS,EAAE,CAAC,SAAD;AAJO,CAAtB;AAOA,MAAMC,gBAAgB,GAAGT,cAAc,CAACK,aAAD,EAAgBP,WAAhB,CAAvC,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,MAAM;AACjB,MAAIY,KAAK,GAAGhB,WAAW,CACnBe,gBADmB,EAEnBN,YAFmB,EAGnBP,mBAAmB,CAACD,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CAHA,CAAvB;AAKA,MAAIO,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACH,CARD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst persistConfig = {\n    key: 'sess',\n    storage,\n    stateReconciler: autoMergeLevel2,\n    whitelist: ['session'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// const store = createStore(\n//     persistedReducer,\n//     initialState,\n//     composeWithDevTools(applyMiddleware(...middleware))\n// );\n// const persistor = persistStore(store);\n\nexport default () => {\n    let store = createStore(\n        persistedReducer,\n        initialState,\n        composeWithDevTools(applyMiddleware(...middleware))\n    );\n    let persistor = persistStore(store);\n    return { store, persistor };\n};\n"]},"metadata":{},"sourceType":"module"}