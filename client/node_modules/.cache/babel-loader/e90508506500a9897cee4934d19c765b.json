{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/account/DeleteAccount.js\";\nimport React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport FormErrorsDisplay from '../../components/forms/FormErrorsDisplay';\nimport { inputOnChange, updateStateErrors } from '../../components/forms/formFuns';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/alerts';\nimport { logoutUser, handle401Err } from '../../redux/actions/user';\nimport axios from 'axios';\n\nconst DeleteAccount = ({\n  setAlert,\n  id,\n  logoutUser,\n  handle401Err\n}) => {\n  const [formData, setFormData] = useState({\n    password: null,\n    errors: []\n  });\n  const [deleteConfirmation, setDeleteConfirmation] = useState(false);\n\n  const onChange = e => {\n    inputOnChange(e, formData, setFormData);\n  };\n\n  async function handleDelete(e) {\n    if (!deleteConfirmation) {\n      e.preventDefault();\n      await setDeleteConfirmation(true);\n      document.getElementById('password').focus();\n    }\n\n    await setDeleteConfirmation(true);\n    document.getElementById('password').focus();\n  }\n\n  function handleCancelation() {\n    setDeleteConfirmation(false);\n    setFormData({\n      password: null,\n      errors: []\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const form = e.target;\n\n    if (deleteConfirmation) {\n      const {\n        password\n      } = formData;\n\n      try {\n        const config = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        const body = JSON.stringify({\n          id,\n          password\n        });\n        await axios.post('/api/user/unregister', body, config);\n        await axios.delete('/api/user/unregister');\n        logoutUser();\n        setAlert('Your account has been deleted successfully. We are sorry to see you going...', 'success', 'sign up page', false);\n      } catch (err) {\n        updateStateErrors(form, formData, setFormData, err.response.data.errors);\n\n        if (err.response.status === 401) {\n          handle401Err();\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"delete-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"heading heading--sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Delete your account.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Once you delete your account, there is no going back. Please be certain.\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, deleteConfirmation && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"Enter password to confirm the deactivation of your account.\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    onChange: onChange,\n    className: \"form__input form__input--sml\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  })), formData.errors.length > 0 && /*#__PURE__*/React.createElement(FormErrorsDisplay, {\n    errors: formData.errors,\n    label: \"delete account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }), deleteConfirmation && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--grey btn--sibling\",\n    onClick: handleCancelation,\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn--danger\",\n    onClick: handleDelete,\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, !deleteConfirmation && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, \"Display form to\", ' '), \"Delete Account\", deleteConfirmation && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, \" now \"))))));\n};\n\nDeleteAccount.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  id: state.user.user._id\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  logoutUser\n})(DeleteAccount);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/account/DeleteAccount.js"],"names":["React","useState","Fragment","PropTypes","FormErrorsDisplay","inputOnChange","updateStateErrors","connect","setAlert","logoutUser","handle401Err","axios","DeleteAccount","id","formData","setFormData","password","errors","deleteConfirmation","setDeleteConfirmation","onChange","e","handleDelete","preventDefault","document","getElementById","focus","handleCancelation","onSubmit","form","target","config","headers","body","JSON","stringify","post","delete","err","response","data","status","length","propTypes","func","isRequired","string","mapStateToProps","state","user","_id"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport FormErrorsDisplay from '../../components/forms/FormErrorsDisplay';\nimport {\n    inputOnChange,\n    updateStateErrors,\n} from '../../components/forms/formFuns';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/alerts';\nimport { logoutUser, handle401Err } from '../../redux/actions/user';\nimport axios from 'axios';\n\nconst DeleteAccount = ({ setAlert, id, logoutUser, handle401Err }) => {\n    const [formData, setFormData] = useState({\n        password: null,\n        errors: [],\n    });\n    const [deleteConfirmation, setDeleteConfirmation] = useState(false);\n\n    const onChange = (e) => {\n        inputOnChange(e, formData, setFormData);\n    };\n    async function handleDelete(e) {\n        if (!deleteConfirmation) {\n            e.preventDefault();\n            await setDeleteConfirmation(true);\n            document.getElementById('password').focus();\n        }\n        await setDeleteConfirmation(true);\n        document.getElementById('password').focus();\n    }\n\n    function handleCancelation() {\n        setDeleteConfirmation(false);\n        setFormData({\n            password: null,\n            errors: [],\n        });\n    }\n\n    async function onSubmit(e) {\n        e.preventDefault();\n        const form = e.target;\n        if (deleteConfirmation) {\n            const { password } = formData;\n            try {\n                const config = {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                };\n\n                const body = JSON.stringify({ id, password });\n\n                await axios.post('/api/user/unregister', body, config);\n                await axios.delete('/api/user/unregister');\n                logoutUser();\n                setAlert(\n                    'Your account has been deleted successfully. We are sorry to see you going...',\n                    'success',\n                    'sign up page',\n                    false\n                );\n            } catch (err) {\n                updateStateErrors(\n                    form,\n                    formData,\n                    setFormData,\n                    err.response.data.errors\n                );\n                if (err.response.status === 401) {\n                    handle401Err();\n                }\n            }\n        }\n    }\n\n    return (\n        <section className='delete-account'>\n            <div className='section__heading'>\n                <div className='wrapper'>\n                    <h2 className='heading heading--sm'>\n                        Delete your account.\n                    </h2>\n                </div>\n            </div>\n            <div className='section__body'>\n                <div className='wrapper'>\n                    <p>\n                        Once you delete your account, there is no going back.\n                        Please be certain.\n                    </p>\n                    <form onSubmit={onSubmit}>\n                        {deleteConfirmation && (\n                            <Fragment>\n                                <label htmlFor='password'>\n                                    Enter password to confirm the deactivation\n                                    of your account.\n                                </label>\n                                <input\n                                    type='password'\n                                    name='password'\n                                    id='password'\n                                    onChange={onChange}\n                                    className='form__input form__input--sml'\n                                />\n                            </Fragment>\n                        )}\n                        {formData.errors.length > 0 && (\n                            <FormErrorsDisplay\n                                errors={formData.errors}\n                                label='delete account'\n                            />\n                        )}\n                        {deleteConfirmation && (\n                            <button\n                                className='btn btn--grey btn--sibling'\n                                onClick={handleCancelation}\n                                onMouseDown={(e) => e.preventDefault()}\n                            >\n                                Cancel\n                            </button>\n                        )}\n                        <button\n                            type='submit'\n                            className='btn btn--danger'\n                            onClick={handleDelete}\n                            onMouseDown={(e) => e.preventDefault()}\n                        >\n                            {!deleteConfirmation && (\n                                <span className='sr-only'>\n                                    Display form to{' '}\n                                </span>\n                            )}\n                            Delete Account\n                            {deleteConfirmation && (\n                                <span className='sr-only'> now </span>\n                            )}\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nDeleteAccount.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    logoutUser: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n};\nconst mapStateToProps = (state) => ({\n    id: state.user.user._id,\n});\nexport default connect(mapStateToProps, { setAlert, logoutUser })(\n    DeleteAccount\n);\n"]},"metadata":{},"sourceType":"module"}