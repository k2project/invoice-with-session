{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Calendar.scss';\nimport { DAYS, DAYS_LEAP, DAYS_OF_THE_WEEK, MONTHS, THIS_YEAR } from './dates';\nexport function Calendar() {\n  const today = new Date();\n  const [date, setDate] = useState(today);\n  const [day, setDay] = useState(date.getDate());\n  const [month, setMonth] = useState(date.getMonth());\n  const [year, setYear] = useState(date.getFullYear());\n  const [startDay, setStartDay] = useState(getStartDayOfMonth(date));\n  useEffect(() => {\n    setDay(date.getDate());\n    setMonth(date.getMonth());\n    setYear(date.getFullYear());\n    setStartDay(getStartDayOfMonth(date));\n  }, [date]);\n\n  function getStartDayOfMonth(date) {\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  }\n\n  const days = isLeapYear(THIS_YEAR) ? DAYS_LEAP : DAYS;\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, DAYS_OF_THE_WEEK.map(d => /*#__PURE__*/React.createElement(\"li\", {\n    key: 'cal-day-names-' + d,\n    className: \"day day__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, d))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, Array(days[month] + (startDay - 1)).fill(null).map((_, index) => {\n    const d = index - (startDay - 2);\n    if (d < 1) return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"day\",\n      key: 'calendar-day-' + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, d > 0 ? d : '');\n  })));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js"],"names":["React","useState","useEffect","DAYS","DAYS_LEAP","DAYS_OF_THE_WEEK","MONTHS","THIS_YEAR","Calendar","today","Date","date","setDate","day","setDay","getDate","month","setMonth","getMonth","year","setYear","getFullYear","startDay","setStartDay","getStartDayOfMonth","getDay","isLeapYear","days","map","d","Array","fill","_","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,gBAA1B,EAA4CC,MAA5C,EAAoDC,SAApD,QAAqE,SAArE;AAEA,OAAO,SAASC,QAAT,GAAoB;AACvB,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACQ,KAAD,CAAhC;AACA,QAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAACU,IAAI,CAACI,OAAL,EAAD,CAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAACU,IAAI,CAACO,QAAL,EAAD,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACU,IAAI,CAACU,WAAL,EAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAACuB,kBAAkB,CAACb,IAAD,CAAnB,CAAxC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,MAAM,CAACH,IAAI,CAACI,OAAL,EAAD,CAAN;AACAE,IAAAA,QAAQ,CAACN,IAAI,CAACO,QAAL,EAAD,CAAR;AACAE,IAAAA,OAAO,CAACT,IAAI,CAACU,WAAL,EAAD,CAAP;AACAE,IAAAA,WAAW,CAACC,kBAAkB,CAACb,IAAD,CAAnB,CAAX;AACH,GALQ,EAKN,CAACA,IAAD,CALM,CAAT;;AAOA,WAASa,kBAAT,CAA4Bb,IAA5B,EAAkC;AAC9B,WAAO,IAAID,IAAJ,CAASC,IAAI,CAACU,WAAL,EAAT,EAA6BV,IAAI,CAACO,QAAL,EAA7B,EAA8C,CAA9C,EAAiDO,MAAjD,EAAP;AACH;;AAED,WAASC,UAAT,CAAoBP,IAApB,EAA0B;AACtB,WAAQA,IAAI,GAAG,CAAP,KAAa,CAAb,IAAkBA,IAAI,GAAG,GAAP,KAAe,CAAlC,IAAwCA,IAAI,GAAG,GAAP,KAAe,CAA9D;AACH;;AAED,QAAMQ,IAAI,GAAGD,UAAU,CAACnB,SAAD,CAAV,GAAwBH,SAAxB,GAAoCD,IAAjD;AAEA,sBACI;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,gBAAgB,CAACuB,GAAjB,CAAsBC,CAAD,iBAClB;AAAI,IAAA,GAAG,EAAE,mBAAmBA,CAA5B;AAA+B,IAAA,SAAS,EAAC,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,CADL,CADH,CADL,CAhBJ,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KAAK,CAACH,IAAI,CAACX,KAAD,CAAJ,IAAeM,QAAQ,GAAG,CAA1B,CAAD,CAAL,CACIS,IADJ,CACS,IADT,EAEIH,GAFJ,CAEQ,CAACI,CAAD,EAAIC,KAAJ,KAAc;AACf,UAAMJ,CAAC,GAAGI,KAAK,IAAIX,QAAQ,GAAG,CAAf,CAAf;AACA,QAAIO,CAAC,GAAG,CAAR,EACI,oBACI;AACI,MAAA,SAAS,EAAC,KADd;AAEI,MAAA,GAAG,EAAE,kBAAkBI,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKJ,CAAC,GAAG,CAAJ,GAAQA,CAAR,GAAY,EAJjB,CADJ;AAQP,GAbJ,CADL,CAxBJ,CADJ;AA2CH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Calendar.scss';\nimport { DAYS, DAYS_LEAP, DAYS_OF_THE_WEEK, MONTHS, THIS_YEAR } from './dates';\n\nexport function Calendar() {\n    const today = new Date();\n    const [date, setDate] = useState(today);\n    const [day, setDay] = useState(date.getDate());\n    const [month, setMonth] = useState(date.getMonth());\n    const [year, setYear] = useState(date.getFullYear());\n    const [startDay, setStartDay] = useState(getStartDayOfMonth(date));\n\n    useEffect(() => {\n        setDay(date.getDate());\n        setMonth(date.getMonth());\n        setYear(date.getFullYear());\n        setStartDay(getStartDayOfMonth(date));\n    }, [date]);\n\n    function getStartDayOfMonth(date) {\n        return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    const days = isLeapYear(THIS_YEAR) ? DAYS_LEAP : DAYS;\n\n    return (\n        <article className='calendar'>\n            {/* <div>\n                    <button\n                        onClick={() => setDate(new Date(year, month - 1, day))}\n                    >\n                        Prev\n                    </button>\n                    <div>\n                        {MONTHS[month]} {year}\n                    </div>\n                    <button\n                        onClick={() => setDate(new Date(year, month + 1, day))}\n                    >\n                        Next\n                    </button>\n                </div> */}\n            <ul>\n                {DAYS_OF_THE_WEEK.map((d) => (\n                    <li key={'cal-day-names-' + d} className='day day__name'>\n                        {d}\n                    </li>\n                ))}\n            </ul>\n\n            <ul>\n                {Array(days[month] + (startDay - 1))\n                    .fill(null)\n                    .map((_, index) => {\n                        const d = index - (startDay - 2);\n                        if (d < 1)\n                            return (\n                                <li\n                                    className='day'\n                                    key={'calendar-day-' + index}\n                                >\n                                    {d > 0 ? d : ''}\n                                </li>\n                            );\n                    })}\n            </ul>\n        </article>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}