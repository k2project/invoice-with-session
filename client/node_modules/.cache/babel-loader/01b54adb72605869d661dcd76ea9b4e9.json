{"ast":null,"code":"\"use strict\";\n\nconst whatwgURL = require(\"whatwg-url\");\n\nconst {\n  parseURLToResultingURLRecord\n} = require(\"../helpers/document-base-url\");\n\nexports.implementation = class HTMLHyperlinkElementUtilsImpl {\n  _htmlHyperlinkElementUtilsSetup() {\n    this.url = null;\n  }\n\n  toString() {\n    return this.href;\n  }\n\n  get href() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null) {\n      const href = this.getAttribute(\"href\");\n      return href === null ? \"\" : href;\n    }\n\n    return whatwgURL.serializeURL(url);\n  }\n\n  set href(v) {\n    this.setAttribute(\"href\", v);\n  }\n\n  get origin() {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return \"\";\n    }\n\n    return whatwgURL.serializeURLOrigin(this.url);\n  }\n\n  get protocol() {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return \":\";\n    }\n\n    return this.url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v + \":\", {\n      url: this.url,\n      stateOverride: \"scheme start\"\n    });\n    updateHref(this);\n  }\n\n  get username() {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return \"\";\n    }\n\n    return this.url.username;\n  }\n\n  set username(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n\n    whatwgURL.setTheUsername(url, v);\n    updateHref(this);\n  }\n\n  get password() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null) {\n      return \"\";\n    }\n\n    return url.password;\n  }\n\n  set password(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n\n    whatwgURL.setThePassword(url, v);\n    updateHref(this);\n  }\n\n  get host() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null || url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return whatwgURL.serializeHost(url.host);\n    }\n\n    return whatwgURL.serializeHost(url.host) + \":\" + whatwgURL.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v, {\n      url,\n      stateOverride: \"host\"\n    });\n    updateHref(this);\n  }\n\n  get hostname() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null || url.host === null) {\n      return \"\";\n    }\n\n    return whatwgURL.serializeHost(url.host);\n  }\n\n  set hostname(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v, {\n      url,\n      stateOverride: \"hostname\"\n    });\n    updateHref(this);\n  }\n\n  get port() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null || url.port === null) {\n      return \"\";\n    }\n\n    return whatwgURL.serializeInteger(url.port);\n  }\n\n  set port(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n\n    if (v === \"\") {\n      url.port = null;\n    } else {\n      whatwgURL.basicURLParse(v, {\n        url,\n        stateOverride: \"port\"\n      });\n    }\n\n    updateHref(this);\n  }\n\n  get pathname() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null) {\n      return \"\";\n    }\n\n    if (url.cannotBeABaseURL) {\n      return url.path[0];\n    }\n\n    return \"/\" + url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n\n    url.path = [];\n    whatwgURL.basicURLParse(v, {\n      url,\n      stateOverride: \"path start\"\n    });\n    updateHref(this);\n  }\n\n  get search() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null || url.query === null || url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + url.query;\n  }\n\n  set search(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null) {\n      return;\n    }\n\n    if (v === \"\") {\n      url.query = null;\n    } else {\n      const input = v[0] === \"?\" ? v.substring(1) : v;\n      url.query = \"\";\n      whatwgURL.basicURLParse(input, {\n        url,\n        stateOverride: \"query\",\n        encodingOverride: this._ownerDocument.charset\n      });\n    }\n\n    updateHref(this);\n  }\n\n  get hash() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null || url.fragment === null || url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + url.fragment;\n  }\n\n  set hash(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n\n    if (url === null) {\n      return;\n    }\n\n    if (v === \"\") {\n      url.fragment = null;\n    } else {\n      const input = v[0] === \"#\" ? v.substring(1) : v;\n      url.fragment = \"\";\n      whatwgURL.basicURLParse(input, {\n        url,\n        stateOverride: \"fragment\"\n      });\n    }\n\n    updateHref(this);\n  }\n\n};\n\nfunction reinitializeURL(hheu) {\n  if (hheu.url !== null && hheu.url.scheme === \"blob\" && hheu.url.cannotBeABaseURL) {\n    return;\n  }\n\n  setTheURL(hheu);\n}\n\nfunction setTheURL(hheu) {\n  const href = hheu.getAttribute(\"href\");\n\n  if (href === null) {\n    hheu.url = null;\n    return;\n  }\n\n  const parsed = parseURLToResultingURLRecord(href, hheu._ownerDocument);\n  hheu.url = parsed === null ? null : parsed;\n}\n\nfunction updateHref(hheu) {\n  hheu.setAttribute(\"href\", whatwgURL.serializeURL(hheu.url));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHyperlinkElementUtils-impl.js"],"names":["whatwgURL","require","parseURLToResultingURLRecord","exports","implementation","HTMLHyperlinkElementUtilsImpl","_htmlHyperlinkElementUtilsSetup","url","toString","href","reinitializeURL","getAttribute","serializeURL","v","setAttribute","origin","serializeURLOrigin","protocol","scheme","basicURLParse","stateOverride","updateHref","username","host","cannotBeABaseURL","setTheUsername","password","setThePassword","port","serializeHost","serializeInteger","hostname","pathname","path","join","search","query","input","substring","encodingOverride","_ownerDocument","charset","hash","fragment","hheu","setTheURL","parsed"],"mappings":"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","sourcesContent":["\"use strict\";\nconst whatwgURL = require(\"whatwg-url\");\nconst { parseURLToResultingURLRecord } = require(\"../helpers/document-base-url\");\n\nexports.implementation = class HTMLHyperlinkElementUtilsImpl {\n  _htmlHyperlinkElementUtilsSetup() {\n    this.url = null;\n  }\n\n  toString() {\n    return this.href;\n  }\n\n  get href() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null) {\n      const href = this.getAttribute(\"href\");\n      return href === null ? \"\" : href;\n    }\n\n    return whatwgURL.serializeURL(url);\n  }\n\n  set href(v) {\n    this.setAttribute(\"href\", v);\n  }\n\n  get origin() {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return \"\";\n    }\n\n    return whatwgURL.serializeURLOrigin(this.url);\n  }\n\n  get protocol() {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return \":\";\n    }\n\n    return this.url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v + \":\", { url: this.url, stateOverride: \"scheme start\" });\n    updateHref(this);\n  }\n\n  get username() {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return \"\";\n    }\n\n    return this.url.username;\n  }\n\n  set username(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n\n    whatwgURL.setTheUsername(url, v);\n    updateHref(this);\n  }\n\n  get password() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null) {\n      return \"\";\n    }\n\n    return url.password;\n  }\n\n  set password(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n\n    whatwgURL.setThePassword(url, v);\n    updateHref(this);\n  }\n\n  get host() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return whatwgURL.serializeHost(url.host);\n    }\n\n    return whatwgURL.serializeHost(url.host) + \":\" + whatwgURL.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v, { url, stateOverride: \"host\" });\n    updateHref(this);\n  }\n\n  get hostname() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.host === null) {\n      return \"\";\n    }\n\n    return whatwgURL.serializeHost(url.host);\n  }\n\n  set hostname(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v, { url, stateOverride: \"hostname\" });\n    updateHref(this);\n  }\n\n  get port() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.port === null) {\n      return \"\";\n    }\n\n    return whatwgURL.serializeInteger(url.port);\n  }\n\n  set port(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n\n    if (v === \"\") {\n      url.port = null;\n    } else {\n      whatwgURL.basicURLParse(v, { url, stateOverride: \"port\" });\n    }\n    updateHref(this);\n  }\n\n  get pathname() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null) {\n      return \"\";\n    }\n\n    if (url.cannotBeABaseURL) {\n      return url.path[0];\n    }\n\n    return \"/\" + url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n\n    url.path = [];\n    whatwgURL.basicURLParse(v, { url, stateOverride: \"path start\" });\n    updateHref(this);\n  }\n\n  get search() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.query === null || url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + url.query;\n  }\n\n  set search(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null) {\n      return;\n    }\n\n    if (v === \"\") {\n      url.query = null;\n    } else {\n      const input = v[0] === \"?\" ? v.substring(1) : v;\n      url.query = \"\";\n      whatwgURL.basicURLParse(input, {\n        url,\n        stateOverride: \"query\",\n        encodingOverride: this._ownerDocument.charset\n      });\n    }\n    updateHref(this);\n  }\n\n  get hash() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.fragment === null || url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + url.fragment;\n  }\n\n  set hash(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null) {\n      return;\n    }\n\n    if (v === \"\") {\n      url.fragment = null;\n    } else {\n      const input = v[0] === \"#\" ? v.substring(1) : v;\n      url.fragment = \"\";\n      whatwgURL.basicURLParse(input, { url, stateOverride: \"fragment\" });\n    }\n    updateHref(this);\n  }\n};\n\nfunction reinitializeURL(hheu) {\n  if (hheu.url !== null && hheu.url.scheme === \"blob\" && hheu.url.cannotBeABaseURL) {\n    return;\n  }\n\n  setTheURL(hheu);\n}\n\nfunction setTheURL(hheu) {\n  const href = hheu.getAttribute(\"href\");\n  if (href === null) {\n    hheu.url = null;\n    return;\n  }\n\n  const parsed = parseURLToResultingURLRecord(href, hheu._ownerDocument);\n\n  hheu.url = parsed === null ? null : parsed;\n}\n\nfunction updateHref(hheu) {\n  hheu.setAttribute(\"href\", whatwgURL.serializeURL(hheu.url));\n}\n"]},"metadata":{},"sourceType":"script"}