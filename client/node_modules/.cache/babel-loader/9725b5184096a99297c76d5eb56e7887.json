{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocFooter.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateInvoiceNotes, updateInvoiceDiscount, updateInvoiceCurrency } from '../../../../redux/actions/invoice';\nimport { toNumberWithCommas } from '../../../../components/form/utils/validations';\nimport notesIcon from '../../../../imgs/icons/notesIcon.png';\nimport discountIcon from '../../../../imgs/icons/discountIcon.png';\n\nconst InvoiceDocFooter = ({\n  invoice,\n  updateInvoiceNotes,\n  updateInvoiceDiscount,\n  updateInvoiceCurrency,\n  tasks\n}) => {\n  const currency = invoice.currency || '';\n  useEffect(() => {\n    const itemWithCurrency = tasks.find(t => t.amount.currency);\n    if (itemWithCurrency) updateInvoiceCurrency(itemWithCurrency.amount.currency);\n  }, [tasks]);\n  const TXT_INIT_TEXT = 'Edit your notes here...';\n  const [notes, setNotes] = useState(TXT_INIT_TEXT);\n\n  const handle_notes_edit = e => {\n    let notes = e.target.value;\n    setNotes(notes);\n    updateInvoiceNotes(notes);\n  };\n\n  const [showDiscount, setShowDiscount] = useState(false);\n  const [discount, setDiscount] = useState(0);\n\n  const show_discount = async () => {\n    if (showDiscount) return setShowDiscount(false);\n    await setShowDiscount(true);\n    edit_input('discount', discount);\n  };\n\n  const handle_discount_edit = e => {\n    let discount = e.target.value;\n    setDiscount(discount);\n    updateInvoiceDiscount(discount);\n  };\n\n  const edit_input = (input, stateValue) => {\n    if (input === 'textarea') input = document.getElementById('invoice-notes');\n    if (input === 'discount') input = document.getElementById('invoice-discount'); //move cursor to the end of text by reseting value to empty string befor setting focus on the el\n\n    input.value = '';\n    input.focus();\n    input.value = stateValue || `${currency}0.00`;\n  }; //TOTAL CALCULATION\n\n\n  const net_total_num = tasks.reduce((sum, t) => {\n    if (t.amount.amountNet) return sum + t.amount.amountNet;\n    return sum;\n  }, 0);\n  const net_total_str = toNumberWithCommas(net_total_num) || '0.00';\n  const tax_total_num = tasks.reduce((sum, t) => {\n    if (t.amount.amountTaxed) return sum + t.amount.amountTaxed;\n    return sum;\n  }, 0);\n  const tax_total_str = toNumberWithCommas(tax_total_num) || '0.00';\n  const invoice_total_num = net_total_num + tax_total_num;\n  const invoice_total_str = toNumberWithCommas(invoice_total_num);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"invoice__btn icon_iNotes\",\n    title: \"Edit notes\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => edit_input('textarea', notes),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: notesIcon,\n    alt: \"Edit notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"invoice__btn icon_iDiscount\",\n    title: \"Edit discount\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: show_discount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: discountIcon,\n    alt: \"Edit discount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__notes-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, \"Notes*:\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, notes)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `bg-${invoice.bg_color}  invoice__cover`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__notes-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"invoice-notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, \" Notes*:\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"invoice-notes\",\n    onChange: handle_notes_edit,\n    defaultValue: TXT_INIT_TEXT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"section\", {\n    className: `bg-${invoice.bg_color} txt-${invoice.text_color} invoice__total`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Net and gross amount.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, \"Subtotal:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, currency, net_total_str))), showDiscount && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__discount-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, \"Discount amount:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, currency, \"0.00\"))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"invoice__discount-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"invoice-discount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, \"Discount amount:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"invoice-discount\",\n    onChange: handle_discount_edit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, \"Tax amount:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, currency, tax_total_str))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, \"Other fees*:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, currency, \"0.00\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"Total:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invoice__total-sum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, currency, invoice_total_str)))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Thank you for your business!\"));\n};\n\nInvoiceDocFooter.propTypes = {\n  invoice: PropTypes.object,\n  tasks: PropTypes.array,\n  updateInvoiceNotes: PropTypes.func,\n  updateInvoiceDiscount: PropTypes.func,\n  updateInvoiceCurrency: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  invoice: state.invoice,\n  tasks: state.companies.find(c => c._id === state.session.currentCompany).tasks\n});\n\nconst mapDispatchToProps = {\n  updateInvoiceNotes,\n  updateInvoiceDiscount,\n  updateInvoiceCurrency\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocFooter);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocFooter.js"],"names":["React","useState","useEffect","Fragment","PropTypes","connect","updateInvoiceNotes","updateInvoiceDiscount","updateInvoiceCurrency","toNumberWithCommas","notesIcon","discountIcon","InvoiceDocFooter","invoice","tasks","currency","itemWithCurrency","find","t","amount","TXT_INIT_TEXT","notes","setNotes","handle_notes_edit","e","target","value","showDiscount","setShowDiscount","discount","setDiscount","show_discount","edit_input","handle_discount_edit","input","stateValue","document","getElementById","focus","net_total_num","reduce","sum","amountNet","net_total_str","tax_total_num","amountTaxed","tax_total_str","invoice_total_num","invoice_total_str","preventDefault","bg_color","text_color","propTypes","object","array","func","mapStateToProps","state","companies","c","_id","session","currentCompany","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAO,mBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,kBADJ,EAEIC,qBAFJ,EAGIC,qBAHJ,QAIO,mCAJP;AAKA,SAASC,kBAAT,QAAmC,+CAAnC;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AACtBC,EAAAA,OADsB;AAEtBP,EAAAA,kBAFsB;AAGtBC,EAAAA,qBAHsB;AAItBC,EAAAA,qBAJsB;AAKtBM,EAAAA;AALsB,CAAD,KAMnB;AACF,QAAMC,QAAQ,GAAGF,OAAO,CAACE,QAAR,IAAoB,EAArC;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,gBAAgB,GAAGF,KAAK,CAACG,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,MAAF,CAASJ,QAA3B,CAAzB;AACA,QAAIC,gBAAJ,EACIR,qBAAqB,CAACQ,gBAAgB,CAACG,MAAjB,CAAwBJ,QAAzB,CAArB;AACP,GAJQ,EAIN,CAACD,KAAD,CAJM,CAAT;AAMA,QAAMM,aAAa,GAAG,yBAAtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACmB,aAAD,CAAlC;;AACA,QAAMG,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,QAAIH,KAAK,GAAGG,CAAC,CAACC,MAAF,CAASC,KAArB;AACAJ,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAf,IAAAA,kBAAkB,CAACe,KAAD,CAAlB;AACH,GAJD;;AAKA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,CAAD,CAAxC;;AACA,QAAM8B,aAAa,GAAG,YAAY;AAC9B,QAAIJ,YAAJ,EAAkB,OAAOC,eAAe,CAAC,KAAD,CAAtB;AAClB,UAAMA,eAAe,CAAC,IAAD,CAArB;AACAI,IAAAA,UAAU,CAAC,UAAD,EAAaH,QAAb,CAAV;AACH,GAJD;;AAKA,QAAMI,oBAAoB,GAAIT,CAAD,IAAO;AAChC,QAAIK,QAAQ,GAAGL,CAAC,CAACC,MAAF,CAASC,KAAxB;AACAI,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAtB,IAAAA,qBAAqB,CAACsB,QAAD,CAArB;AACH,GAJD;;AAKA,QAAMG,UAAU,GAAG,CAACE,KAAD,EAAQC,UAAR,KAAuB;AACtC,QAAID,KAAK,KAAK,UAAd,EACIA,KAAK,GAAGE,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAR;AACJ,QAAIH,KAAK,KAAK,UAAd,EACIA,KAAK,GAAGE,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAR,CAJkC,CAKtC;;AACAH,IAAAA,KAAK,CAACR,KAAN,GAAc,EAAd;AACAQ,IAAAA,KAAK,CAACI,KAAN;AACAJ,IAAAA,KAAK,CAACR,KAAN,GAAcS,UAAU,IAAK,GAAEpB,QAAS,MAAxC;AACH,GATD,CA3BE,CAsCF;;;AAEA,QAAMwB,aAAa,GAAGzB,KAAK,CAAC0B,MAAN,CAAa,CAACC,GAAD,EAAMvB,CAAN,KAAY;AAC3C,QAAIA,CAAC,CAACC,MAAF,CAASuB,SAAb,EAAwB,OAAOD,GAAG,GAAGvB,CAAC,CAACC,MAAF,CAASuB,SAAtB;AACxB,WAAOD,GAAP;AACH,GAHqB,EAGnB,CAHmB,CAAtB;AAIA,QAAME,aAAa,GAAGlC,kBAAkB,CAAC8B,aAAD,CAAlB,IAAqC,MAA3D;AAEA,QAAMK,aAAa,GAAG9B,KAAK,CAAC0B,MAAN,CAAa,CAACC,GAAD,EAAMvB,CAAN,KAAY;AAC3C,QAAIA,CAAC,CAACC,MAAF,CAAS0B,WAAb,EAA0B,OAAOJ,GAAG,GAAGvB,CAAC,CAACC,MAAF,CAAS0B,WAAtB;AAC1B,WAAOJ,GAAP;AACH,GAHqB,EAGnB,CAHmB,CAAtB;AAIA,QAAMK,aAAa,GAAGrC,kBAAkB,CAACmC,aAAD,CAAlB,IAAqC,MAA3D;AAEA,QAAMG,iBAAiB,GAAGR,aAAa,GAAGK,aAA1C;AACA,QAAMI,iBAAiB,GAAGvC,kBAAkB,CAACsC,iBAAD,CAA5C;AAEA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,0BADd;AAEI,IAAA,KAAK,EAAC,YAFV;AAGI,IAAA,WAAW,EAAGvB,CAAD,IAAOA,CAAC,CAACyB,cAAF,EAHxB;AAII,IAAA,OAAO,EAAE,MAAMjB,UAAU,CAAC,UAAD,EAAaX,KAAb,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAK,IAAA,GAAG,EAAEX,SAAV;AAAqB,IAAA,GAAG,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,eASI;AACI,IAAA,SAAS,EAAC,6BADd;AAEI,IAAA,KAAK,EAAC,eAFV;AAGI,IAAA,WAAW,EAAGc,CAAD,IAAOA,CAAC,CAACyB,cAAF,EAHxB;AAII,IAAA,OAAO,EAAElB,aAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAK,IAAA,GAAG,EAAEpB,YAAV;AAAwB,IAAA,GAAG,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CATJ,eAkBI;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIU,KAAJ,CAJJ,CADJ,eAOI;AACI,IAAA,SAAS,EAAG,MAAKR,OAAO,CAACqC,QAAS,kBADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAUI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,eAII;AACI,IAAA,EAAE,EAAC,eADP;AAEI,IAAA,QAAQ,EAAE3B,iBAFd;AAGI,IAAA,YAAY,EAAEH,aAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CAVJ,CAlBJ,eAyCI;AACI,IAAA,SAAS,EAAG,MAAKP,OAAO,CAACqC,QAAS,QAAOrC,OAAO,CAACsC,UAAW,iBADhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpC,QADL,EAEK4B,aAFL,CADJ,CAFJ,CALJ,EAcKhB,YAAY,iBACT,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,QADL,SADJ,CAFJ,CADJ,eAUI;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,kBAFP;AAGI,IAAA,QAAQ,EAAEkB,oBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAVJ,CAfR,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,QADL,EAEK+B,aAFL,CADJ,CAFJ,CArCJ,eA8CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI/B,QAAJ,SADJ,CAFJ,CA9CJ,eAoDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,QADL,EAEKiC,iBAFL,CAFJ,CApDJ,CAzCJ,CADJ,eAwGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAxGJ,CADJ;AA4GH,CAzKD;;AA2KApC,gBAAgB,CAACwC,SAAjB,GAA6B;AACzBvC,EAAAA,OAAO,EAAET,SAAS,CAACiD,MADM;AAEzBvC,EAAAA,KAAK,EAAEV,SAAS,CAACkD,KAFQ;AAGzBhD,EAAAA,kBAAkB,EAAEF,SAAS,CAACmD,IAHL;AAIzBhD,EAAAA,qBAAqB,EAAEH,SAAS,CAACmD,IAJR;AAKzB/C,EAAAA,qBAAqB,EAAEJ,SAAS,CAACmD;AALR,CAA7B;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChC5C,EAAAA,OAAO,EAAE4C,KAAK,CAAC5C,OADiB;AAEhCC,EAAAA,KAAK,EAAE2C,KAAK,CAACC,SAAN,CAAgBzC,IAAhB,CAAsB0C,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUH,KAAK,CAACI,OAAN,CAAcC,cAApD,EACFhD;AAH2B,CAAZ,CAAxB;;AAKA,MAAMiD,kBAAkB,GAAG;AACvBzD,EAAAA,kBADuB;AAEvBC,EAAAA,qBAFuB;AAGvBC,EAAAA;AAHuB,CAA3B;AAMA,eAAeH,OAAO,CAACmD,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CnD,gBAA7C,CAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    updateInvoiceNotes,\n    updateInvoiceDiscount,\n    updateInvoiceCurrency,\n} from '../../../../redux/actions/invoice';\nimport { toNumberWithCommas } from '../../../../components/form/utils/validations';\nimport notesIcon from '../../../../imgs/icons/notesIcon.png';\nimport discountIcon from '../../../../imgs/icons/discountIcon.png';\n\nconst InvoiceDocFooter = ({\n    invoice,\n    updateInvoiceNotes,\n    updateInvoiceDiscount,\n    updateInvoiceCurrency,\n    tasks,\n}) => {\n    const currency = invoice.currency || '';\n    useEffect(() => {\n        const itemWithCurrency = tasks.find((t) => t.amount.currency);\n        if (itemWithCurrency)\n            updateInvoiceCurrency(itemWithCurrency.amount.currency);\n    }, [tasks]);\n\n    const TXT_INIT_TEXT = 'Edit your notes here...';\n    const [notes, setNotes] = useState(TXT_INIT_TEXT);\n    const handle_notes_edit = (e) => {\n        let notes = e.target.value;\n        setNotes(notes);\n        updateInvoiceNotes(notes);\n    };\n    const [showDiscount, setShowDiscount] = useState(false);\n    const [discount, setDiscount] = useState(0);\n    const show_discount = async () => {\n        if (showDiscount) return setShowDiscount(false);\n        await setShowDiscount(true);\n        edit_input('discount', discount);\n    };\n    const handle_discount_edit = (e) => {\n        let discount = e.target.value;\n        setDiscount(discount);\n        updateInvoiceDiscount(discount);\n    };\n    const edit_input = (input, stateValue) => {\n        if (input === 'textarea')\n            input = document.getElementById('invoice-notes');\n        if (input === 'discount')\n            input = document.getElementById('invoice-discount');\n        //move cursor to the end of text by reseting value to empty string befor setting focus on the el\n        input.value = '';\n        input.focus();\n        input.value = stateValue || `${currency}0.00`;\n    };\n\n    //TOTAL CALCULATION\n\n    const net_total_num = tasks.reduce((sum, t) => {\n        if (t.amount.amountNet) return sum + t.amount.amountNet;\n        return sum;\n    }, 0);\n    const net_total_str = toNumberWithCommas(net_total_num) || '0.00';\n\n    const tax_total_num = tasks.reduce((sum, t) => {\n        if (t.amount.amountTaxed) return sum + t.amount.amountTaxed;\n        return sum;\n    }, 0);\n    const tax_total_str = toNumberWithCommas(tax_total_num) || '0.00';\n\n    const invoice_total_num = net_total_num + tax_total_num;\n    const invoice_total_str = toNumberWithCommas(invoice_total_num);\n\n    return (\n        <Fragment>\n            <section className='invoice__footer'>\n                <button\n                    className='invoice__btn icon_iNotes'\n                    title='Edit notes'\n                    onMouseDown={(e) => e.preventDefault()}\n                    onClick={() => edit_input('textarea', notes)}\n                >\n                    <img src={notesIcon} alt='Edit notes' />\n                </button>\n                <button\n                    className='invoice__btn icon_iDiscount'\n                    title='Edit discount'\n                    onMouseDown={(e) => e.preventDefault()}\n                    onClick={show_discount}\n                >\n                    <img src={discountIcon} alt='Edit discount' />\n                </button>\n\n                <section className='invoice__notes'>\n                    <div className='invoice__notes-display'>\n                        <h3>\n                            <b>Notes*:</b>\n                        </h3>\n                        <p>{notes}</p>\n                    </div>\n                    <div\n                        className={`bg-${invoice.bg_color}  invoice__cover`}\n                    ></div>\n                    <div className='invoice__notes-form'>\n                        <form>\n                            <label htmlFor='invoice-notes'>\n                                <b> Notes*:</b>\n                            </label>\n                            <textarea\n                                id='invoice-notes'\n                                onChange={handle_notes_edit}\n                                defaultValue={TXT_INIT_TEXT}\n                            ></textarea>\n                        </form>\n                    </div>\n                </section>\n                <section\n                    className={`bg-${invoice.bg_color} txt-${invoice.text_color} invoice__total`}\n                >\n                    <h3 className='sr-only'>Net and gross amount.</h3>\n\n                    <div>\n                        <span>Subtotal:</span>\n                        <span>\n                            <b>\n                                {currency}\n                                {net_total_str}\n                            </b>\n                        </span>\n                    </div>\n                    {showDiscount && (\n                        <Fragment>\n                            <div className='invoice__discount-display'>\n                                <span>Discount amount:</span>\n                                <span>\n                                    <b>\n                                        {currency}\n                                        0.00\n                                    </b>\n                                </span>\n                            </div>\n                            <form className='invoice__discount-form'>\n                                <label htmlFor='invoice-discount'>\n                                    Discount amount:\n                                </label>\n                                <input\n                                    type='text'\n                                    id='invoice-discount'\n                                    onChange={handle_discount_edit}\n                                />\n                            </form>\n                        </Fragment>\n                    )}\n                    <div>\n                        <span>Tax amount:</span>\n                        <span>\n                            <b>\n                                {currency}\n                                {tax_total_str}\n                            </b>\n                        </span>\n                    </div>\n                    <div>\n                        <span>Other fees*:</span>\n                        <span>\n                            <b>{currency}0.00</b>\n                        </span>\n                    </div>\n                    <div>\n                        <span>Total:</span>\n                        <span className='invoice__total-sum'>\n                            {currency}\n                            {invoice_total_str}\n                        </span>\n                    </div>\n                </section>\n            </section>\n\n            <footer>Thank you for your business!</footer>\n        </Fragment>\n    );\n};\n\nInvoiceDocFooter.propTypes = {\n    invoice: PropTypes.object,\n    tasks: PropTypes.array,\n    updateInvoiceNotes: PropTypes.func,\n    updateInvoiceDiscount: PropTypes.func,\n    updateInvoiceCurrency: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    invoice: state.invoice,\n    tasks: state.companies.find((c) => c._id === state.session.currentCompany)\n        .tasks,\n});\nconst mapDispatchToProps = {\n    updateInvoiceNotes,\n    updateInvoiceDiscount,\n    updateInvoiceCurrency,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocFooter);\n"]},"metadata":{},"sourceType":"module"}