{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Calendar.scss';\nimport { DAYS, DAYS_LEAP, DAYS_OF_THE_WEEK, MONTHS, THIS_YEAR } from './dates';\nexport function Calendar() {\n  const today = new Date();\n  const [date, setDate] = useState(today); // const [day, setDay] = useState(date.getDate());\n  // const [month, setMonth] = useState(date.getMonth());\n  // const [year, setYear] = useState(date.getFullYear());\n  // const [startDay, setStartDay] = useState(getStartDayOfMonth(date));\n  // useEffect(() => {\n  //     // console.log(date);\n  //     // setDay(date.getDate());\n  //     // setMonth(date.getMonth());\n  //     // setYear(date.getFullYear());\n  //     // setStartDay(getStartDayOfMonth(date));\n  //     // console.log('start day', startDay);\n  // }, [date]);\n\n  function getStartDayOfMonth(date) {\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  }\n\n  function isLeapYear(year) {\n    return !(year % 4 || !(year % 100) && year % 400);\n  }\n\n  const days = isLeapYear(date.getFullYear()) ? DAYS_LEAP : DAYS;\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setDate(new Date(date.getFullYear(), date.getMonth() - 1, 1)),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"\\u27A4\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, MONTHS[date.getMonth()], \" \", date.getFullYear())), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setDate(new Date(date.getFullYear(), date.getMonth() + 1, 1)),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"\\u27A4\"))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, DAYS_OF_THE_WEEK.map(d => /*#__PURE__*/React.createElement(\"li\", {\n    key: 'cal-day-names-' + d,\n    className: \"day day__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, d))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, Array(days[date.getMonth()] + (getStartDayOfMonth(date) - 1)).fill(null).map((_, index, arr) => {\n    console.log(arr);\n    const d = index - (getStartDayOfMonth(date) - 2);\n    console.log(index, d);\n    if (d < 1) return /*#__PURE__*/React.createElement(\"li\", {\n      key: 'calendar-day-' + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 36\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"day\",\n      key: 'calendar-day-' + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onMouseDown: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, d));\n  })));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js"],"names":["React","useState","useEffect","DAYS","DAYS_LEAP","DAYS_OF_THE_WEEK","MONTHS","THIS_YEAR","Calendar","today","Date","date","setDate","getStartDayOfMonth","getFullYear","getMonth","getDay","isLeapYear","year","days","e","preventDefault","map","d","Array","fill","_","index","arr","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Calendar.scss';\nimport { DAYS, DAYS_LEAP, DAYS_OF_THE_WEEK, MONTHS, THIS_YEAR } from './dates';\n\nexport function Calendar() {\n    const today = new Date();\n    const [date, setDate] = useState(today);\n    // const [day, setDay] = useState(date.getDate());\n    // const [month, setMonth] = useState(date.getMonth());\n    // const [year, setYear] = useState(date.getFullYear());\n    // const [startDay, setStartDay] = useState(getStartDayOfMonth(date));\n\n    // useEffect(() => {\n    //     // console.log(date);\n    //     // setDay(date.getDate());\n    //     // setMonth(date.getMonth());\n    //     // setYear(date.getFullYear());\n    //     // setStartDay(getStartDayOfMonth(date));\n    //     // console.log('start day', startDay);\n    // }, [date]);\n\n    function getStartDayOfMonth(date) {\n        return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n    }\n\n    function isLeapYear(year) {\n        return !(year % 4 || (!(year % 100) && year % 400));\n    }\n\n    const days = isLeapYear(date.getFullYear()) ? DAYS_LEAP : DAYS;\n\n    return (\n        <article className='calendar'>\n            <div className='calendar__header'>\n                <button\n                    onClick={() =>\n                        setDate(\n                            new Date(date.getFullYear(), date.getMonth() - 1, 1)\n                        )\n                    }\n                    onMouseDown={(e) => e.preventDefault()}\n                >\n                    <span>&#x27A4;</span>\n                </button>\n                <div>\n                    <b>\n                        {MONTHS[date.getMonth()]} {date.getFullYear()}\n                    </b>\n                </div>\n                <button\n                    onClick={() =>\n                        setDate(\n                            new Date(date.getFullYear(), date.getMonth() + 1, 1)\n                        )\n                    }\n                    onMouseDown={(e) => e.preventDefault()}\n                >\n                    <span>&#x27A4;</span>\n                </button>\n            </div>\n            <ul>\n                {DAYS_OF_THE_WEEK.map((d) => (\n                    <li key={'cal-day-names-' + d} className='day day__name'>\n                        {d}\n                    </li>\n                ))}\n            </ul>\n\n            <ul>\n                {Array(days[date.getMonth()] + (getStartDayOfMonth(date) - 1))\n                    .fill(null)\n                    .map((_, index, arr) => {\n                        console.log(arr);\n                        const d = index - (getStartDayOfMonth(date) - 2);\n                        console.log(index, d);\n                        if (d < 1)\n                            return <li key={'calendar-day-' + index}></li>;\n                        return (\n                            <li className='day' key={'calendar-day-' + index}>\n                                <button onMouseDown={(e) => e.preventDefault()}>\n                                    {d}\n                                </button>\n                            </li>\n                        );\n                    })}\n            </ul>\n        </article>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}