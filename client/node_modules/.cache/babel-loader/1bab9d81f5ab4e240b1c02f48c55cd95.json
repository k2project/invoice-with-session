{"ast":null,"code":"//Wed: May 8, 2020\nexport const dateUX = date => {\n  const options = {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  date = new Date(date).toLocaleDateString('en-US', options);\n  return date.slice(0, 3) + ':' + date.slice(4);\n}; //add zero to single digit\n\nexport const dayFormating = day => day.length > 1 ? day : '0' + day;\nexport const monthFormating = month => month.length > 1 ? month : '0' + month; //format:DD/MM/YYYY\n\nexport const date_DD_MM_YYYY = date => {\n  date = new Date(date);\n  let month = String(date.getMonth() + 1);\n  month = monthFormating(month);\n  let day = String(date.getDate());\n  day = dayFormating(day);\n  let year = date.getFullYear();\n  return day + '/' + month + '/' + year; // return date.slice(0, 11).replace(/-/g, '/');\n}; //format:YYYY-MM\n\nexport const date_YYYY_MM = date => {\n  date = new Date(date);\n  let month = String(date.getMonth() + 1);\n  month = month.length > 1 ? month : '0' + month;\n  return date.getFullYear() + '-' + month;\n};\nexport const isToday = d => {\n  d = new Date(d);\n  const today = new Date();\n  return d.getDate() === today.getDate() && d.getMonth() === today.getMonth() && d.getFullYear() === today.getFullYear();\n};\n\nconst getTime = d => {\n  d = new Date(d);\n  let hr = d.getHours();\n  let min = d.getMinutes();\n\n  if (min < 10) {\n    min = '0' + min;\n  }\n\n  var ampm = 'am';\n\n  if (hr > 12) {\n    hr -= 12;\n    ampm = 'pm';\n  }\n\n  return hr + ':' + min + ampm;\n};\n\nconst msPassedToday = () => {\n  const t = new Date();\n  return t.getMilliseconds() + t.getSeconds() * 1000 + t.getMinutes() * 6e4 + t.getHours() * 3.6e6;\n};\n\nconst wasYesterday = date => {\n  const msInADay = 8.64e7;\n  const msToday = +msPassedToday();\n  date = new Date(date).getTime();\n  const today = new Date().getTime();\n  return date > today - msToday - msInADay && date < today - msToday;\n};\n\nexport const getDateAndTimeUX = date => {\n  const t = getTime(date);\n  if (isToday(date)) return ' today at ' + t;\n  if (wasYesterday(date)) return ' yesterday at ' + t;\n  return ' on ' + dateUX(date) + ' at ' + t;\n}; // (int) The current year\n\nexport const THIS_YEAR = +new Date().getFullYear(); // (int) The current month starting from 1 - 12\n// 1 => January, 12 => December\n\nexport const THIS_MONTH = +new Date().getMonth() + 1;\nexport const DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexport const DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexport const DAYS_OF_THE_WEEK = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nexport const MONTHS = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/dates.js"],"names":["dateUX","date","options","weekday","year","month","day","Date","toLocaleDateString","slice","dayFormating","length","monthFormating","date_DD_MM_YYYY","String","getMonth","getDate","getFullYear","date_YYYY_MM","isToday","d","today","getTime","hr","getHours","min","getMinutes","ampm","msPassedToday","t","getMilliseconds","getSeconds","wasYesterday","msInADay","msToday","getDateAndTimeUX","THIS_YEAR","THIS_MONTH","DAYS","DAYS_LEAP","DAYS_OF_THE_WEEK","MONTHS"],"mappings":"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","sourcesContent":["//Wed: May 8, 2020\nexport const dateUX = (date) => {\n    const options = {\n        weekday: 'short',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    };\n    date = new Date(date).toLocaleDateString('en-US', options);\n    return date.slice(0, 3) + ':' + date.slice(4);\n};\n//add zero to single digit\nexport const dayFormating = (day) => (day.length > 1 ? day : '0' + day);\nexport const monthFormating = (month) =>\n    month.length > 1 ? month : '0' + month;\n//format:DD/MM/YYYY\nexport const date_DD_MM_YYYY = (date) => {\n    date = new Date(date);\n    let month = String(date.getMonth() + 1);\n    month = monthFormating(month);\n    let day = String(date.getDate());\n    day = dayFormating(day);\n    let year = date.getFullYear();\n\n    return day + '/' + month + '/' + year;\n    // return date.slice(0, 11).replace(/-/g, '/');\n};\n//format:YYYY-MM\nexport const date_YYYY_MM = (date) => {\n    date = new Date(date);\n    let month = String(date.getMonth() + 1);\n    month = month.length > 1 ? month : '0' + month;\n    return date.getFullYear() + '-' + month;\n};\nexport const isToday = (d) => {\n    d = new Date(d);\n    const today = new Date();\n    return (\n        d.getDate() === today.getDate() &&\n        d.getMonth() === today.getMonth() &&\n        d.getFullYear() === today.getFullYear()\n    );\n};\nconst getTime = (d) => {\n    d = new Date(d);\n    let hr = d.getHours();\n    let min = d.getMinutes();\n    if (min < 10) {\n        min = '0' + min;\n    }\n    var ampm = 'am';\n    if (hr > 12) {\n        hr -= 12;\n        ampm = 'pm';\n    }\n    return hr + ':' + min + ampm;\n};\nconst msPassedToday = () => {\n    const t = new Date();\n    return (\n        t.getMilliseconds() +\n        t.getSeconds() * 1000 +\n        t.getMinutes() * 6e4 +\n        t.getHours() * 3.6e6\n    );\n};\nconst wasYesterday = (date) => {\n    const msInADay = 8.64e7;\n    const msToday = +msPassedToday();\n    date = new Date(date).getTime();\n    const today = new Date().getTime();\n    return date > today - msToday - msInADay && date < today - msToday;\n};\nexport const getDateAndTimeUX = (date) => {\n    const t = getTime(date);\n    if (isToday(date)) return ' today at ' + t;\n    if (wasYesterday(date)) return ' yesterday at ' + t;\n    return ' on ' + dateUX(date) + ' at ' + t;\n};\n// (int) The current year\nexport const THIS_YEAR = +new Date().getFullYear();\n\n// (int) The current month starting from 1 - 12\n// 1 => January, 12 => December\nexport const THIS_MONTH = +new Date().getMonth() + 1;\n\nexport const DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexport const DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexport const DAYS_OF_THE_WEEK = [\n    'Mon',\n    'Tue',\n    'Wed',\n    'Thu',\n    'Fri',\n    'Sat',\n    'Sun',\n];\nexport const MONTHS = [\n    'JAN',\n    'FEB',\n    'MAR',\n    'APR',\n    'MAY',\n    'JUN',\n    'JUL',\n    'AUG',\n    'SEP',\n    'OCT',\n    'NOV',\n    'DEC',\n];\n"]},"metadata":{},"sourceType":"module"}