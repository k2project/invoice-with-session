{"ast":null,"code":"function isEmail(email) {\n  return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n}\n\nfunction isNumber(email) {\n  return /^\\d+$/.test(email);\n}\n\nexport const isRequired = (state, outputArr) => {\n  state.forEach(input => {\n    if (input.required && !input.value.trim()) {\n      const error = {\n        param: input._id,\n        msg: `${input.label} is required.`\n      };\n      outputArr.push(error);\n    }\n  });\n};\nexport const isValidated = (state, outputArr) => {\n  state.forEach(input => {\n    if (input.validate && input.value.trim()) {\n      const {\n        type,\n        msg\n      } = input.validate;\n      let error = null;\n\n      if (type == 'isEmail') {\n        error = isEmail(input.value) ? null : {\n          param: input._id,\n          msg\n        };\n      }\n\n      if (type == 'isNumber') {\n        error = isNumber(input.value) ? null : {\n          param: input._id,\n          msg\n        };\n      }\n\n      if (error) outputArr.push(error);\n    }\n  });\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/validations.js"],"names":["isEmail","email","test","isNumber","isRequired","state","outputArr","forEach","input","required","value","trim","error","param","_id","msg","label","push","isValidated","validate","type"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,SAAO,6BAA6BC,IAA7B,CAAkCD,KAAlC,CAAP;AACH;;AACD,SAASE,QAAT,CAAkBF,KAAlB,EAAyB;AACrB,SAAO,QAAQC,IAAR,CAAaD,KAAb,CAAP;AACH;;AAED,OAAO,MAAMG,UAAU,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AAC5CD,EAAAA,KAAK,CAACE,OAAN,CAAeC,KAAD,IAAW;AACrB,QAAIA,KAAK,CAACC,QAAN,IAAkB,CAACD,KAAK,CAACE,KAAN,CAAYC,IAAZ,EAAvB,EAA2C;AACvC,YAAMC,KAAK,GAAG;AACVC,QAAAA,KAAK,EAAEL,KAAK,CAACM,GADH;AAEVC,QAAAA,GAAG,EAAG,GAAEP,KAAK,CAACQ,KAAM;AAFV,OAAd;AAIAV,MAAAA,SAAS,CAACW,IAAV,CAAeL,KAAf;AACH;AACJ,GARD;AASH,CAVM;AAWP,OAAO,MAAMM,WAAW,GAAG,CAACb,KAAD,EAAQC,SAAR,KAAsB;AAC7CD,EAAAA,KAAK,CAACE,OAAN,CAAeC,KAAD,IAAW;AACrB,QAAIA,KAAK,CAACW,QAAN,IAAkBX,KAAK,CAACE,KAAN,CAAYC,IAAZ,EAAtB,EAA0C;AACtC,YAAM;AAAES,QAAAA,IAAF;AAAQL,QAAAA;AAAR,UAAgBP,KAAK,CAACW,QAA5B;AACA,UAAIP,KAAK,GAAG,IAAZ;;AACA,UAAIQ,IAAI,IAAI,SAAZ,EAAuB;AACnBR,QAAAA,KAAK,GAAGZ,OAAO,CAACQ,KAAK,CAACE,KAAP,CAAP,GACF,IADE,GAEF;AACIG,UAAAA,KAAK,EAAEL,KAAK,CAACM,GADjB;AAEIC,UAAAA;AAFJ,SAFN;AAMH;;AACD,UAAIK,IAAI,IAAI,UAAZ,EAAwB;AACpBR,QAAAA,KAAK,GAAGT,QAAQ,CAACK,KAAK,CAACE,KAAP,CAAR,GACF,IADE,GAEF;AACIG,UAAAA,KAAK,EAAEL,KAAK,CAACM,GADjB;AAEIC,UAAAA;AAFJ,SAFN;AAMH;;AAED,UAAIH,KAAJ,EAAWN,SAAS,CAACW,IAAV,CAAeL,KAAf;AACd;AACJ,GAvBD;AAwBH,CAzBM","sourcesContent":["function isEmail(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n}\nfunction isNumber(email) {\n    return /^\\d+$/.test(email);\n}\n\nexport const isRequired = (state, outputArr) => {\n    state.forEach((input) => {\n        if (input.required && !input.value.trim()) {\n            const error = {\n                param: input._id,\n                msg: `${input.label} is required.`,\n            };\n            outputArr.push(error);\n        }\n    });\n};\nexport const isValidated = (state, outputArr) => {\n    state.forEach((input) => {\n        if (input.validate && input.value.trim()) {\n            const { type, msg } = input.validate;\n            let error = null;\n            if (type == 'isEmail') {\n                error = isEmail(input.value)\n                    ? null\n                    : {\n                          param: input._id,\n                          msg,\n                      };\n            }\n            if (type == 'isNumber') {\n                error = isNumber(input.value)\n                    ? null\n                    : {\n                          param: input._id,\n                          msg,\n                      };\n            }\n\n            if (error) outputArr.push(error);\n        }\n    });\n};\n"]},"metadata":{},"sourceType":"module"}