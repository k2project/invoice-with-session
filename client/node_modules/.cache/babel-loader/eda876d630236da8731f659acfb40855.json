{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocHeader.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeInvoiceColors } from '../../../../redux/actions/invoice';\nimport settingsIcon from '../../../../imgs/icons/cogs.png';\nimport updateIcon from '../../../../imgs/icons/updateIcon.png';\n\nconst InvoiceDocHeader = ({\n  profile,\n  invoice,\n  changeInvoiceColors\n}) => {\n  const [settings, setSettings] = useState(false);\n  const profileDetails = profile.details.map(input => {\n    if (input.label === 'Name' && input.addToInvoice) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: input._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, input.value));\n    } else if (input.addToInvoice) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: input._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }\n      }, input.value);\n    }\n  });\n  const BG_COLORS = [['#000', 'black'], ['#5F7C8A', 'grey'], ['#785447', 'brown'], ['#F76B00', 'bright-orange'], ['#EB9346', 'orange'], ['#FFC108', 'yellow'], ['#CDDD39', 'yellow-green'], ['#8BC34A', 'light-green'], ['#4BAF50', 'green'], ['#009688', 'dark-green'], ['#01BCD5', 'see-blue'], ['#03A9F4', 'light-blue'], ['#2065A8', 'blue'], ['#203354', 'dark-blue'], ['#3F50B6', 'dark-purple'], ['#673BB7', 'purple'], ['#9C27B0', 'purple-pink'], ['#E91F63', 'pink'], ['#D5133A', 'dark-pink'], ['#F44337', 'red']];\n  const bgColorPicker = BG_COLORS.map(color => /*#__PURE__*/React.createElement(\"li\", {\n    key: 'bg-color-picker-' + color[0],\n    style: {\n      backgroundColor: `${color[0]}`\n    },\n    title: color[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeInvoiceColors([color[1], invoice.text_color]),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"color[1]\"))));\n  const TXT_COLORS = [['#000', 'black'], ['#FFF', 'white']];\n  const txtColorPicker = TXT_COLORS.map(color => /*#__PURE__*/React.createElement(\"li\", {\n    key: 'txt-color-picker-' + color[0],\n    style: {\n      backgroundColor: `${color[0]}`\n    },\n    title: color[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeInvoiceColors([invoice.bg_color, color[1]]),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"color[1]\"))));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, settings && /*#__PURE__*/React.createElement(\"section\", {\n    className: \"color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"bg-color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"Choose invoice background colors theme.\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"aria-labelledby\": \"bg-color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, bgColorPicker)), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"txt-color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Choose text color.\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"aria-labelledby\": \"txt-color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, txtColorPicker)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close\",\n    onClick: () => setSettings(false),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"header\", {\n    className: `bg-${invoice.bg_color} txt-${invoice.text_color}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"invoice__btn icon_iSettings\",\n    title: \"Change invoice settings\",\n    onClick: () => setSettings(true),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: settingsIcon,\n    alt: \"Invoice settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"invoice\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"txt--right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"invoice__btn\",\n    title: \"Change Profile details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: updateIcon,\n    alt: \"Change Profile details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, profileDetails))));\n};\n\nInvoiceDocHeader.propTypes = {\n  profile: PropTypes.object,\n  changeInvoiceColors: PropTypes.func,\n  invoice: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  invoice: state.invoice\n});\n\nconst mapDispatchToProps = {\n  changeInvoiceColors\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocHeader);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocHeader.js"],"names":["React","useState","useEffect","Fragment","PropTypes","connect","changeInvoiceColors","settingsIcon","updateIcon","InvoiceDocHeader","profile","invoice","settings","setSettings","profileDetails","details","map","input","label","addToInvoice","_id","value","BG_COLORS","bgColorPicker","color","backgroundColor","text_color","e","preventDefault","TXT_COLORS","txtColorPicker","bg_color","propTypes","object","func","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeInvoiceColors } from '../../../../redux/actions/invoice';\nimport settingsIcon from '../../../../imgs/icons/cogs.png';\nimport updateIcon from '../../../../imgs/icons/updateIcon.png';\n\nconst InvoiceDocHeader = ({ profile, invoice, changeInvoiceColors }) => {\n    const [settings, setSettings] = useState(false);\n    const profileDetails = profile.details.map((input) => {\n        if (input.label === 'Name' && input.addToInvoice) {\n            return (\n                <li key={input._id}>\n                    <b>{input.value}</b>\n                </li>\n            );\n        } else if (input.addToInvoice) {\n            return <li key={input._id}>{input.value}</li>;\n        }\n    });\n\n    const BG_COLORS = [\n        ['#000', 'black'],\n        ['#5F7C8A', 'grey'],\n        ['#785447', 'brown'],\n        ['#F76B00', 'bright-orange'],\n        ['#EB9346', 'orange'],\n        ['#FFC108', 'yellow'],\n        ['#CDDD39', 'yellow-green'],\n        ['#8BC34A', 'light-green'],\n        ['#4BAF50', 'green'],\n        ['#009688', 'dark-green'],\n        ['#01BCD5', 'see-blue'],\n        ['#03A9F4', 'light-blue'],\n        ['#2065A8', 'blue'],\n        ['#203354', 'dark-blue'],\n        ['#3F50B6', 'dark-purple'],\n        ['#673BB7', 'purple'],\n        ['#9C27B0', 'purple-pink'],\n        ['#E91F63', 'pink'],\n        ['#D5133A', 'dark-pink'],\n        ['#F44337', 'red'],\n    ];\n    const bgColorPicker = BG_COLORS.map((color) => (\n        <li\n            key={'bg-color-picker-' + color[0]}\n            style={{ backgroundColor: `${color[0]}` }}\n            title={color[0]}\n        >\n            <button\n                onClick={() =>\n                    changeInvoiceColors([color[1], invoice.text_color])\n                }\n                onMouseDown={(e) => e.preventDefault()}\n            >\n                <span className='sr-only'>color[1]</span>\n            </button>\n        </li>\n    ));\n    const TXT_COLORS = [\n        ['#000', 'black'],\n        ['#FFF', 'white'],\n    ];\n    const txtColorPicker = TXT_COLORS.map((color) => (\n        <li\n            key={'txt-color-picker-' + color[0]}\n            style={{ backgroundColor: `${color[0]}` }}\n            title={color[0]}\n        >\n            <button\n                onClick={() =>\n                    changeInvoiceColors([invoice.bg_color, color[1]])\n                }\n                onMouseDown={(e) => e.preventDefault()}\n            >\n                <span className='sr-only'>color[1]</span>\n            </button>\n        </li>\n    ));\n    return (\n        <Fragment>\n            {settings && (\n                <section className='color-picker'>\n                    <section>\n                        <h3 id='bg-color-picker'>\n                            Choose invoice background colors theme.\n                        </h3>\n                        <ul aria-labelledby='bg-color-picker'>\n                            {bgColorPicker}\n                        </ul>\n                    </section>\n                    <section>\n                        <h3 id='txt-color-picker'>Choose text color.</h3>\n                        <ul aria-labelledby='txt-color-picker'>\n                            {txtColorPicker}\n                        </ul>\n                    </section>\n                    <button\n                        className='close'\n                        onClick={() => setSettings(false)}\n                        onMouseDown={(e) => e.preventDefault()}\n                    >\n                        &times;\n                    </button>\n                </section>\n            )}\n            <header\n                className={`bg-${invoice.bg_color} txt-${invoice.text_color}`}\n            >\n                <button\n                    className='invoice__btn icon_iSettings'\n                    title='Change invoice settings'\n                    onClick={() => setSettings(true)}\n                    onMouseDown={(e) => e.preventDefault()}\n                >\n                    <img src={settingsIcon} alt='Invoice settings' />\n                </button>\n                <div>\n                    <h1>invoice</h1>\n                </div>\n                <div className='txt--right'>\n                    <button\n                        className='invoice__btn'\n                        title='Change Profile details'\n                    >\n                        <img src={updateIcon} alt='Change Profile details' />\n                    </button>\n                    <ul>{profileDetails}</ul>\n                </div>\n            </header>\n        </Fragment>\n    );\n};\n\nInvoiceDocHeader.propTypes = {\n    profile: PropTypes.object,\n    changeInvoiceColors: PropTypes.func,\n    invoice: PropTypes.object,\n};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    invoice: state.invoice,\n});\nconst mapDispatchToProps = {\n    changeInvoiceColors,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocHeader);\n"]},"metadata":{},"sourceType":"module"}