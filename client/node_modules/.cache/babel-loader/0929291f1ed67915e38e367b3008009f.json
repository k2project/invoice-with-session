{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nfunction HTMLUListElement() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(HTMLUListElement.prototype, HTMLElement.interface.prototype);\nObject.setPrototypeOf(HTMLUListElement, HTMLElement.interface);\nObject.defineProperty(HTMLUListElement, \"prototype\", {\n  value: HTMLUListElement.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(HTMLUListElement.prototype, \"compact\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttribute(\"compact\");\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'compact' property on 'HTMLUListElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttribute(\"compact\", \"\");\n    } else {\n      this.removeAttribute(\"compact\");\n    }\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLUListElement.prototype, \"type\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"type\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'type' property on 'HTMLUListElement': The provided value\"\n    });\n    this.setAttribute(\"type\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLUListElement.prototype, Symbol.toStringTag, {\n  value: \"HTMLUListElement\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLUListElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLUListElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLUListElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLUListElement,\n  expose: {\n    Window: {\n      HTMLUListElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLUListElement-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/HTMLUListElement.js"],"names":["conversions","require","utils","impl","implSymbol","HTMLElement","HTMLUListElement","TypeError","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","get","module","exports","is","hasAttribute","set","V","context","setAttribute","removeAttribute","getAttribute","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nfunction HTMLUListElement() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(HTMLUListElement.prototype, HTMLElement.interface.prototype);\nObject.setPrototypeOf(HTMLUListElement, HTMLElement.interface);\n\nObject.defineProperty(HTMLUListElement, \"prototype\", {\n  value: HTMLUListElement.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(HTMLUListElement.prototype, \"compact\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttribute(\"compact\");\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'compact' property on 'HTMLUListElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttribute(\"compact\", \"\");\n    } else {\n      this.removeAttribute(\"compact\");\n    }\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLUListElement.prototype, \"type\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"type\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'type' property on 'HTMLUListElement': The provided value\"\n    });\n\n    this.setAttribute(\"type\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLUListElement.prototype, Symbol.toStringTag, {\n  value: \"HTMLUListElement\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLUListElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLUListElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLUListElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLUListElement,\n  expose: {\n    Window: { HTMLUListElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLUListElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}