{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/forms/TaskForm.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormInput from '../components/FormInput';\nimport FormErrorsDisplay from '../components/FormErrorsDisplay';\nimport { formErrorsStyling } from '../utils/formFuns';\nimport { getAllTasks, updateCompanyArr } from '../../../redux/actions/companies';\nexport default function TaskForm({\n  companyID,\n  updateTasksArr,\n  update\n}) {\n  const [formData, setFormData] = useState({\n    description: '',\n    qty: '',\n    rate: '',\n    amount: '',\n    errors: []\n  });\n\n  const handleAdd = async e => {\n    e.preventDefault();\n    const {\n      description,\n      qty,\n      rate,\n      amount\n    } = formData;\n    const errors = [];\n\n    if (!description.trim()) {\n      const error = {\n        param: 'description',\n        msg: 'Please describe the task.'\n      };\n      errors.push(error);\n    }\n\n    if (errors.length > 0) {\n      setFormData({ ...formData,\n        errors\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }; //create task\n\n      const task = {\n        _id: uuidv4(),\n        description,\n        qty: 'N/A' || qty,\n        rate: 'N/A' || rate,\n        amount: 'N/A' || amount,\n        addToInvoice: true,\n        createdAt: new Date()\n      };\n      let body = {\n        task\n      };\n      if (update) body.update = update;\n      body = JSON.stringify(body);\n      console.log(companyID);\n      await axios.post(`/api/companies/tasks/${companyID}`, body, config); //update company tasks\n\n      updateCompanyArr(); //reset state\n\n      setFormData({\n        description: '',\n        qty: '',\n        rate: '',\n        amount: '',\n        errors: []\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    formErrorsStyling(formData.errors);\n  }, [formData.errors]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Add a new task to bill for. \", companyID), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \" *Required\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-3-cls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"col-span-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    name: \"description\",\n    size: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Description*\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    name: \"qty\",\n    size: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Qty\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, ' ', /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    name: \"rate\",\n    size: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"Rate\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    name: \"amount\",\n    size: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, \"Amount\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--info\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Add Item\")), formData.errors.length > 0 && /*#__PURE__*/React.createElement(FormErrorsDisplay, {\n    errors: formData.errors,\n    label: \"Add custom field form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/forms/TaskForm.js"],"names":["React","useState","useEffect","Fragment","axios","v4","uuidv4","FormInput","FormErrorsDisplay","formErrorsStyling","getAllTasks","updateCompanyArr","TaskForm","companyID","updateTasksArr","update","formData","setFormData","description","qty","rate","amount","errors","handleAdd","e","preventDefault","trim","error","param","msg","push","length","config","headers","task","_id","addToInvoice","createdAt","Date","body","JSON","stringify","console","log","post","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormInput from '../components/FormInput';\nimport FormErrorsDisplay from '../components/FormErrorsDisplay';\nimport { formErrorsStyling } from '../utils/formFuns';\nimport {\n    getAllTasks,\n    updateCompanyArr,\n} from '../../../redux/actions/companies';\n\nexport default function TaskForm({ companyID, updateTasksArr, update }) {\n    const [formData, setFormData] = useState({\n        description: '',\n        qty: '',\n        rate: '',\n        amount: '',\n        errors: [],\n    });\n    const handleAdd = async (e) => {\n        e.preventDefault();\n        const { description, qty, rate, amount } = formData;\n        const errors = [];\n        if (!description.trim()) {\n            const error = {\n                param: 'description',\n                msg: 'Please describe the task.',\n            };\n            errors.push(error);\n        }\n        if (errors.length > 0) {\n            setFormData({\n                ...formData,\n                errors,\n            });\n            return;\n        }\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            //create task\n            const task = {\n                _id: uuidv4(),\n                description,\n                qty: 'N/A' || qty,\n                rate: 'N/A' || rate,\n                amount: 'N/A' || amount,\n                addToInvoice: true,\n                createdAt: new Date(),\n            };\n            let body = { task };\n            if (update) body.update = update;\n            body = JSON.stringify(body);\n            console.log(companyID);\n            await axios.post(`/api/companies/tasks/${companyID}`, body, config);\n            //update company tasks\n            updateCompanyArr();\n            //reset state\n            setFormData({\n                description: '',\n                qty: '',\n                rate: '',\n                amount: '',\n                errors: [],\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    useEffect(() => {\n        formErrorsStyling(formData.errors);\n    }, [formData.errors]);\n    return (\n        <form className='task-form' onSubmit={handleAdd}>\n            <fieldset>\n                <legend>\n                    <b>Add a new task to bill for. {companyID}</b>\n                    <p>\n                        <small> *Required</small>\n                    </p>\n                </legend>\n                <div className='grid-3-cls'>\n                    <span className='col-span-3'>\n                        <FormInput\n                            form={{ formData, setFormData }}\n                            name='description'\n                            size='auto'\n                        >\n                            Description*\n                        </FormInput>\n                    </span>\n                    <span>\n                        <FormInput\n                            form={{ formData, setFormData }}\n                            name='qty'\n                            size='auto'\n                        >\n                            Qty\n                        </FormInput>\n                    </span>\n                    <span>\n                        {' '}\n                        <FormInput\n                            form={{ formData, setFormData }}\n                            name='rate'\n                            size='auto'\n                        >\n                            Rate\n                        </FormInput>\n                    </span>\n                    <span>\n                        <FormInput\n                            form={{ formData, setFormData }}\n                            name='amount'\n                            size='auto'\n                        >\n                            Amount\n                        </FormInput>\n                    </span>\n                </div>\n                <button\n                    className='btn btn--info'\n                    onMouseDown={(e) => e.preventDefault()}\n                    onClick={handleAdd}\n                >\n                    Add Item\n                </button>\n            </fieldset>\n            {formData.errors.length > 0 && (\n                <FormErrorsDisplay\n                    errors={formData.errors}\n                    label='Add custom field form'\n                />\n            )}\n        </form>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}