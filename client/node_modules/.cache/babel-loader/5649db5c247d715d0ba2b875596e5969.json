{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst {\n  cloningSteps,\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\n\nconst {\n  clone\n} = require(\"../node\");\n\nclass HTMLTemplateElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._templateContents = this._ownerDocument.createDocumentFragment();\n  }\n\n  get content() {\n    return this._templateContents;\n  }\n\n  [cloningSteps](copy, node, document, cloneChildren) {\n    if (!cloneChildren) {\n      return;\n    }\n\n    for (const child of domSymbolTree.childrenIterator(node._templateContents)) {\n      const childCopy = clone(child, copy._templateContents._ownerDocument, true);\n\n      copy._templateContents.appendChild(childCopy);\n    }\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLTemplateElementImpl\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTemplateElement-impl.js"],"names":["HTMLElementImpl","require","implementation","cloningSteps","domSymbolTree","clone","HTMLTemplateElementImpl","constructor","args","privateData","_templateContents","_ownerDocument","createDocumentFragment","content","copy","node","document","cloneChildren","child","childrenIterator","childCopy","appendChild","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,cAAtD;;AAEA,MAAM;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,IAAkCH,OAAO,CAAC,+BAAD,CAA/C;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAYJ,OAAO,CAAC,SAAD,CAAzB;;AAEA,MAAMK,uBAAN,SAAsCN,eAAtC,CAAsD;AACpDO,EAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,EAAoB;AAC7B,UAAMD,IAAN,EAAYC,WAAZ;AACA,SAAKC,iBAAL,GAAyB,KAAKC,cAAL,CAAoBC,sBAApB,EAAzB;AACD;;AAED,MAAIC,OAAJ,GAAc;AACZ,WAAO,KAAKH,iBAAZ;AACD;;AAED,GAACP,YAAD,EAAeW,IAAf,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,aAArC,EAAoD;AAClD,QAAI,CAACA,aAAL,EAAoB;AAClB;AACD;;AAED,SAAK,MAAMC,KAAX,IAAoBd,aAAa,CAACe,gBAAd,CAA+BJ,IAAI,CAACL,iBAApC,CAApB,EAA4E;AAC1E,YAAMU,SAAS,GAAGf,KAAK,CAACa,KAAD,EAAQJ,IAAI,CAACJ,iBAAL,CAAuBC,cAA/B,EAA+C,IAA/C,CAAvB;;AACAG,MAAAA,IAAI,CAACJ,iBAAL,CAAuBW,WAAvB,CAAmCD,SAAnC;AACD;AACF;;AAnBmD;;AAsBtDE,MAAM,CAACC,OAAP,GAAiB;AACfrB,EAAAA,cAAc,EAAEI;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst { cloningSteps, domSymbolTree } = require(\"../helpers/internal-constants\");\nconst { clone } = require(\"../node\");\n\nclass HTMLTemplateElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._templateContents = this._ownerDocument.createDocumentFragment();\n  }\n\n  get content() {\n    return this._templateContents;\n  }\n\n  [cloningSteps](copy, node, document, cloneChildren) {\n    if (!cloneChildren) {\n      return;\n    }\n\n    for (const child of domSymbolTree.childrenIterator(node._templateContents)) {\n      const childCopy = clone(child, copy._templateContents._ownerDocument, true);\n      copy._templateContents.appendChild(childCopy);\n    }\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLTemplateElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}