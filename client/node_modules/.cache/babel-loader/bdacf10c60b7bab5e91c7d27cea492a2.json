{"ast":null,"code":"export const getInputObjById = (arr, id) => {\n  return arr.find(input => input._id === id);\n};\nexport const getInputValueByLabel = (arr, l) => {\n  return arr.find(input => input.label === l).value;\n}; //arr1 -> obj with arr2 ( obj with value property  that position in arr2 chnages dinamicaly )\n\nexport const sortInputsByNamesAlphabeticaly = (arr, subarr) => {\n  //get all names and sort them alphabeticaly\n  if (arr.length > 1) {\n    const arrAllNames = [];\n    arr.forEach(el => {\n      arrAllNames.push(getInputValueByLabel(el[subarr], 'Name'));\n    });\n    arrAllNames.sort((a, b) => a.localeCompare(b)); //index the arrays\n\n    const arrWithIndex = [];\n    arr.forEach(el => {\n      const indexInSortedArr = arrAllNames.indexOf(getInputValueByLabel(el[subarr], 'Name'));\n      arrWithIndex.push({\n        el,\n        indexInSortedArr\n      });\n    }); //sort the arrays according to their indexes\n\n    arrWithIndex.sort((a, b) => a.indexInSortedArr - b.indexInSortedArr); //drop the index and return original arr\n\n    return arrWithIndex.map(el => el.el);\n  }\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/utils/customFormQueries.js"],"names":["getInputObjById","arr","id","find","input","_id","getInputValueByLabel","l","label","value","sortInputsByNamesAlphabeticaly","subarr","length","arrAllNames","forEach","el","push","sort","a","b","localeCompare","arrWithIndex","indexInSortedArr","indexOf","map"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,CAACC,GAAD,EAAMC,EAAN,KAAa;AACxC,SAAOD,GAAG,CAACE,IAAJ,CAAUC,KAAD,IAAWA,KAAK,CAACC,GAAN,KAAcH,EAAlC,CAAP;AACH,CAFM;AAIP,OAAO,MAAMI,oBAAoB,GAAG,CAACL,GAAD,EAAMM,CAAN,KAAY;AAC5C,SAAON,GAAG,CAACE,IAAJ,CAAUC,KAAD,IAAWA,KAAK,CAACI,KAAN,KAAgBD,CAApC,EAAuCE,KAA9C;AACH,CAFM,C,CAIP;;AACA,OAAO,MAAMC,8BAA8B,GAAG,CAACT,GAAD,EAAMU,MAAN,KAAiB;AAC3D;AACA,MAAIV,GAAG,CAACW,MAAJ,GAAa,CAAjB,EAAoB;AAChB,UAAMC,WAAW,GAAG,EAApB;AACAZ,IAAAA,GAAG,CAACa,OAAJ,CAAaC,EAAD,IAAQ;AAChBF,MAAAA,WAAW,CAACG,IAAZ,CAAiBV,oBAAoB,CAACS,EAAE,CAACJ,MAAD,CAAH,EAAa,MAAb,CAArC;AACH,KAFD;AAGAE,IAAAA,WAAW,CAACI,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAA3B,EALgB,CAMhB;;AACA,UAAME,YAAY,GAAG,EAArB;AACApB,IAAAA,GAAG,CAACa,OAAJ,CAAaC,EAAD,IAAQ;AAChB,YAAMO,gBAAgB,GAAGT,WAAW,CAACU,OAAZ,CACrBjB,oBAAoB,CAACS,EAAE,CAACJ,MAAD,CAAH,EAAa,MAAb,CADC,CAAzB;AAGAU,MAAAA,YAAY,CAACL,IAAb,CAAkB;AAAED,QAAAA,EAAF;AAAMO,QAAAA;AAAN,OAAlB;AACH,KALD,EARgB,CAchB;;AACAD,IAAAA,YAAY,CAACJ,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,gBAAF,GAAqBH,CAAC,CAACG,gBAAnD,EAfgB,CAgBhB;;AACA,WAAOD,YAAY,CAACG,GAAb,CAAkBT,EAAD,IAAQA,EAAE,CAACA,EAA5B,CAAP;AACH;AACJ,CArBM","sourcesContent":["export const getInputObjById = (arr, id) => {\n    return arr.find((input) => input._id === id);\n};\n\nexport const getInputValueByLabel = (arr, l) => {\n    return arr.find((input) => input.label === l).value;\n};\n\n//arr1 -> obj with arr2 ( obj with value property  that position in arr2 chnages dinamicaly )\nexport const sortInputsByNamesAlphabeticaly = (arr, subarr) => {\n    //get all names and sort them alphabeticaly\n    if (arr.length > 1) {\n        const arrAllNames = [];\n        arr.forEach((el) => {\n            arrAllNames.push(getInputValueByLabel(el[subarr], 'Name'));\n        });\n        arrAllNames.sort((a, b) => a.localeCompare(b));\n        //index the arrays\n        const arrWithIndex = [];\n        arr.forEach((el) => {\n            const indexInSortedArr = arrAllNames.indexOf(\n                getInputValueByLabel(el[subarr], 'Name')\n            );\n            arrWithIndex.push({ el, indexInSortedArr });\n        });\n        //sort the arrays according to their indexes\n        arrWithIndex.sort((a, b) => a.indexInSortedArr - b.indexInSortedArr);\n        //drop the index and return original arr\n        return arrWithIndex.map((el) => el.el);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}