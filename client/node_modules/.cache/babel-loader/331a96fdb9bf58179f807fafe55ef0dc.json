{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocHeader.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport settingsIcon from '../../../../imgs/icons/cogs.png';\nimport updateIcon from '../../../../imgs/icons/updateIcon.png';\n\nconst InvoiceDocHeader = ({\n  profile\n}) => {\n  const [settings, setSettings] = useState(false);\n  const profileDetails = profile.details.map(input => {\n    if (input.label === 'Name' && input.addToInvoice) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: input._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }\n      }, input.value));\n    } else if (input.addToInvoice) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: input._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 20\n        }\n      }, input.value);\n    }\n  });\n  const colors = ['000', //black\n  '5F7C8A', //grey\n  '785447', //brown\n  'FF5623', //bright orange\n  'EB9346', //orange\n  'FFC108', //yellow\n  'CDDD39', //green 1\n  '8BC34A', //green 2\n  '4BAF50', //green 3\n  '009688', //green 4\n  '01BCD5', //blue 1\n  '03A9F4', //blue 2\n  '2296F3', //blue 3,\n  '3F50B6', //purple 1\n  '673BB7', //purple 2\n  '9C27B0', //purple 3\n  'E91F63', //pink 1\n  'D5133A', //pink 2\n  'F44337', //red 1\n  'C91020' //red 2\n  ];\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, settings && /*#__PURE__*/React.createElement(\"section\", {\n    className: \"tile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Choose invoice color theme.\"), colorPicker, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close\",\n    onClick: () => setSettings(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"icon_iSettings\",\n    title: \"Change invoice settings\",\n    onClick: () => setSettings(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: settingsIcon,\n    alt: \"Invoice settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"invoice\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"txt--right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"icon_iProfile\",\n    title: \"Change Profile details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: updateIcon,\n    alt: \"Change Profile details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, profileDetails))));\n};\n\nInvoiceDocHeader.propTypes = {};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps)(InvoiceDocHeader);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocHeader.js"],"names":["React","useState","useEffect","Fragment","PropTypes","connect","settingsIcon","updateIcon","InvoiceDocHeader","profile","settings","setSettings","profileDetails","details","map","input","label","addToInvoice","_id","value","colors","colorPicker","propTypes","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport settingsIcon from '../../../../imgs/icons/cogs.png';\nimport updateIcon from '../../../../imgs/icons/updateIcon.png';\n\nconst InvoiceDocHeader = ({ profile }) => {\n    const [settings, setSettings] = useState(false);\n    const profileDetails = profile.details.map((input) => {\n        if (input.label === 'Name' && input.addToInvoice) {\n            return (\n                <li key={input._id}>\n                    <b>{input.value}</b>\n                </li>\n            );\n        } else if (input.addToInvoice) {\n            return <li key={input._id}>{input.value}</li>;\n        }\n    });\n\n    const colors = [\n        '000', //black\n        '5F7C8A', //grey\n        '785447', //brown\n        'FF5623', //bright orange\n        'EB9346', //orange\n        'FFC108', //yellow\n        'CDDD39', //green 1\n        '8BC34A', //green 2\n        '4BAF50', //green 3\n        '009688', //green 4\n        '01BCD5', //blue 1\n        '03A9F4', //blue 2\n        '2296F3', //blue 3,\n        '3F50B6', //purple 1\n        '673BB7', //purple 2\n        '9C27B0', //purple 3\n        'E91F63', //pink 1\n        'D5133A', //pink 2\n        'F44337', //red 1\n        'C91020', //red 2\n    ];\n\n    return (\n        <Fragment>\n            {settings && (\n                <section className='tile'>\n                    <h3>Choose invoice color theme.</h3>\n                    {colorPicker}\n                    <button\n                        className='close'\n                        onClick={() => setSettings(false)}\n                    >\n                        &times;\n                    </button>\n                </section>\n            )}\n            <header>\n                <button\n                    className='icon_iSettings'\n                    title='Change invoice settings'\n                    onClick={() => setSettings(true)}\n                >\n                    <img src={settingsIcon} alt='Invoice settings' />\n                </button>\n                <div>\n                    <h1>invoice</h1>\n                </div>\n                <div className='txt--right'>\n                    <button\n                        className='icon_iProfile'\n                        title='Change Profile details'\n                    >\n                        <img src={updateIcon} alt='Change Profile details' />\n                    </button>\n                    <ul>{profileDetails}</ul>\n                </div>\n            </header>\n        </Fragment>\n    );\n};\n\nInvoiceDocHeader.propTypes = {};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps)(InvoiceDocHeader);\n"]},"metadata":{},"sourceType":"module"}