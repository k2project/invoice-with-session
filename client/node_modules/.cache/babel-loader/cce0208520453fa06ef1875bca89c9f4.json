{"ast":null,"code":"import axios from 'axios';\nimport { GET_ALL_COMPANIES, CLEAR_COMPANIES, SET_CURRENT_COMPANY, GET_USER, END_SESS } from '../actions/types';\nexport const getAllCompanies = () => async dispatch => {\n  try {\n    //get profile\n    const res = await axios.get('/api/companies');\n    dispatch({\n      type: GET_ALL_COMPANIES,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error('AUTH ERROR ON LOADING ALL COMPANIES', err);\n    console.log(err);\n    dispatch({\n      type: END_SESS\n    });\n  }\n};\nexport const clearCompanies = () => dispatch => {\n  dispatch({\n    type: CLEAR_COMPANIES\n  });\n};\nexport const setCurrentCompany = company => dispatch => {\n  dispatch({\n    type: SET_CURRENT_COMPANY,\n    company\n  });\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/redux/actions/companies.js"],"names":["axios","GET_ALL_COMPANIES","CLEAR_COMPANIES","SET_CURRENT_COMPANY","GET_USER","END_SESS","getAllCompanies","dispatch","res","get","type","payload","data","err","console","error","log","clearCompanies","setCurrentCompany","company"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,iBADJ,EAEIC,eAFJ,EAGIC,mBAHJ,EAIIC,QAJJ,EAKIC,QALJ,QAMO,kBANP;AAQA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,MAAI;AACA;AACA,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,gBAAV,CAAlB;AACAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,iBADD;AAELU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAc,qCAAd,EAAqDF,GAArD;AACAC,IAAAA,OAAO,CAACE,GAAR,CAAYH,GAAZ;AACAN,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACH;AACJ,CAbM;AAcP,OAAO,MAAMY,cAAc,GAAG,MAAOV,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACH,CAFM;AAGP,OAAO,MAAMgB,iBAAiB,GAAIC,OAAD,IAAcZ,QAAD,IAAc;AACxDA,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEP,mBADD;AAELgB,IAAAA;AAFK,GAAD,CAAR;AAIH,CALM","sourcesContent":["import axios from 'axios';\nimport {\n    GET_ALL_COMPANIES,\n    CLEAR_COMPANIES,\n    SET_CURRENT_COMPANY,\n    GET_USER,\n    END_SESS,\n} from '../actions/types';\n\nexport const getAllCompanies = () => async (dispatch) => {\n    try {\n        //get profile\n        const res = await axios.get('/api/companies');\n        dispatch({\n            type: GET_ALL_COMPANIES,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.error('AUTH ERROR ON LOADING ALL COMPANIES', err);\n        console.log(err);\n        dispatch({ type: END_SESS });\n    }\n};\nexport const clearCompanies = () => (dispatch) => {\n    dispatch({ type: CLEAR_COMPANIES });\n};\nexport const setCurrentCompany = (company) => (dispatch) => {\n    dispatch({\n        type: SET_CURRENT_COMPANY,\n        company,\n    });\n};\n"]},"metadata":{},"sourceType":"module"}