{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/NavSubmenu.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\n\nconst NavSubmenu = ({\n  companies\n}) => {\n  const handleSunnavOpening = e => {\n    e.target.classList.toggle('dashboard-subnav--is-active'); //remove active class from main links if exist\n\n    const activeNavLink = document.querySelectorAll('.dashboard__link--is-active');\n    if (activeNavLink) activeNavLink.classList.remove('.dashboard__link--is-active');\n  };\n\n  useEffect(() => {\n    // orange color rgb: (235,147,70)\n    //grade sublink bg shade\n    const subLinks = document.querySelectorAll('.dashboard-subnav__link ');\n    const max = subLinks.length;\n    Array.from(subLinks).forEach((el, index) => {\n      let opacity = (max - index) / max + 0.1;\n      el.style.backgroundColor = `rgba(235,147,70,${opacity})`;\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dashboard-subnav__list\",\n    \"aria-label\": \"companies list - dashboard submenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile dashboard-subnav\",\n    onClick: handleSunnavOpening,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Companies\")), companies.map(company => {\n    const {\n      _id,\n      details\n    } = company;\n    const name = details.find(input => input.label === 'Name').value;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: _id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/dashboard/companies/${_id}`,\n      className: \"dashboard-subnav__link tile\",\n      activeClassName: \"dashboard-subnav__link--is-active\",\n      onMouseDown: e => e.preventDefault(),\n      onClick: () => {\n        setAlert(`${name} is now desplayed on the page `, 'success');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, name));\n  }));\n};\n\nNavSubmenu.propTypes = {\n  companies: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  companies: state.companies.companies\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(NavSubmenu);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/NavSubmenu.js"],"names":["React","useEffect","PropTypes","NavLink","Link","connect","setAlert","NavSubmenu","companies","handleSunnavOpening","e","target","classList","toggle","activeNavLink","document","querySelectorAll","remove","subLinks","max","length","Array","from","forEach","el","index","opacity","style","backgroundColor","map","company","_id","details","name","find","input","label","value","preventDefault","propTypes","array","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAO,IAAIC,IAApB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,8BAAzB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAClC,QAAMC,mBAAmB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,MAAnB,CAA0B,6BAA1B,EAD+B,CAE/B;;AACA,UAAMC,aAAa,GAAGC,QAAQ,CAACC,gBAAT,CAClB,6BADkB,CAAtB;AAGA,QAAIF,aAAJ,EACIA,aAAa,CAACF,SAAd,CAAwBK,MAAxB,CAA+B,6BAA/B;AACP,GARD;;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA,UAAMiB,QAAQ,GAAGH,QAAQ,CAACC,gBAAT,CAA0B,0BAA1B,CAAjB;AACA,UAAMG,GAAG,GAAGD,QAAQ,CAACE,MAArB;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAWJ,QAAX,EAAqBK,OAArB,CAA6B,CAACC,EAAD,EAAKC,KAAL,KAAe;AACxC,UAAIC,OAAO,GAAG,CAACP,GAAG,GAAGM,KAAP,IAAgBN,GAAhB,GAAsB,GAApC;AACAK,MAAAA,EAAE,CAACG,KAAH,CAASC,eAAT,GAA4B,mBAAkBF,OAAQ,GAAtD;AACH,KAHD;AAIH,GATQ,CAAT;AAUA,sBACI;AACI,IAAA,SAAS,EAAC,wBADd;AAEI,kBAAW,oCAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AACI,IAAA,SAAS,EAAC,uBADd;AAEI,IAAA,OAAO,EAAEjB,mBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAM,mBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CAJJ,EAUKD,SAAS,CAACqB,GAAV,CAAeC,OAAD,IAAa;AACxB,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAmBF,OAAzB;AACA,UAAMG,IAAI,GAAGD,OAAO,CAACE,IAAR,CAAcC,KAAD,IAAWA,KAAK,CAACC,KAAN,KAAgB,MAAxC,EACRC,KADL;AAEA,wBACI;AAAI,MAAA,GAAG,EAAEN,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,EAAE,EAAG,wBAAuBA,GAAI,EADpC;AAEI,MAAA,SAAS,EAAC,6BAFd;AAGI,MAAA,eAAe,EAAC,mCAHpB;AAII,MAAA,WAAW,EAAGrB,CAAD,IAAOA,CAAC,CAAC4B,cAAF,EAJxB;AAKI,MAAA,OAAO,EAAE,MAAM;AACXhC,QAAAA,QAAQ,CACH,GAAE2B,IAAK,gCADJ,EAEJ,SAFI,CAAR;AAIH,OAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYKA,IAZL,CADJ,CADJ;AAkBH,GAtBA,CAVL,CADJ;AAoCH,CAxDD;;AA0DA1B,UAAU,CAACgC,SAAX,GAAuB;AACnB/B,EAAAA,SAAS,EAAEN,SAAS,CAACsC;AADF,CAAvB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChClC,EAAAA,SAAS,EAAEkC,KAAK,CAAClC,SAAN,CAAgBA;AADK,CAAZ,CAAxB;;AAIA,MAAMmC,kBAAkB,GAAG,EAA3B;AAEA,eAAetC,OAAO,CAACoC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpC,UAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\n\nconst NavSubmenu = ({ companies }) => {\n    const handleSunnavOpening = (e) => {\n        e.target.classList.toggle('dashboard-subnav--is-active');\n        //remove active class from main links if exist\n        const activeNavLink = document.querySelectorAll(\n            '.dashboard__link--is-active'\n        );\n        if (activeNavLink)\n            activeNavLink.classList.remove('.dashboard__link--is-active');\n    };\n    useEffect(() => {\n        // orange color rgb: (235,147,70)\n        //grade sublink bg shade\n        const subLinks = document.querySelectorAll('.dashboard-subnav__link ');\n        const max = subLinks.length;\n        Array.from(subLinks).forEach((el, index) => {\n            let opacity = (max - index) / max + 0.1;\n            el.style.backgroundColor = `rgba(235,147,70,${opacity})`;\n        });\n    });\n    return (\n        <ul\n            className='dashboard-subnav__list'\n            aria-label='companies list - dashboard submenu'\n        >\n            <div\n                className='tile dashboard-subnav'\n                onClick={handleSunnavOpening}\n            >\n                <span aria-hidden='true'>Companies</span>\n            </div>\n            {companies.map((company) => {\n                const { _id, details } = company;\n                const name = details.find((input) => input.label === 'Name')\n                    .value;\n                return (\n                    <li key={_id}>\n                        <Link\n                            to={`/dashboard/companies/${_id}`}\n                            className='dashboard-subnav__link tile'\n                            activeClassName='dashboard-subnav__link--is-active'\n                            onMouseDown={(e) => e.preventDefault()}\n                            onClick={() => {\n                                setAlert(\n                                    `${name} is now desplayed on the page `,\n                                    'success'\n                                );\n                            }}\n                        >\n                            {name}\n                        </Link>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n\nNavSubmenu.propTypes = {\n    companies: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n    companies: state.companies.companies,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavSubmenu);\n"]},"metadata":{},"sourceType":"module"}