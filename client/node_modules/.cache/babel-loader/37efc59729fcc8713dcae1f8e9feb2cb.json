{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/FormInput.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { inputOnChange, checkboxOnChange } from './formFuns';\n\nconst FormInput = ({\n  type = 'text',\n  name,\n  size = 'sml',\n  children,\n  form,\n  selectionArr\n}) => {\n  const onChange = e => {\n    inputOnChange(e, form.formData, form.setFormData);\n  };\n\n  const handleCheckboxOnChange = e => {\n    checkboxOnChange(e, form.formData, form.setFormData);\n  };\n\n  switch (type) {\n    case 'checkbox':\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }, children), form.formData.showAcronym && /*#__PURE__*/React.createElement(\"input\", {\n        type: type,\n        name: name,\n        id: name,\n        onChange: handleCheckboxOnChange,\n        className: 'form__input',\n        onMouseDown: e => e.preventDefault(),\n        checked: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }\n      }), !form.formData.showAcronym && /*#__PURE__*/React.createElement(\"input\", {\n        type: type,\n        name: name,\n        id: name,\n        onChange: handleCheckboxOnChange,\n        className: 'form__input',\n        onMouseDown: e => e.preventDefault(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"input-checkbox__checkmark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      })));\n\n    case 'selection':\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, children), /*#__PURE__*/React.createElement(\"textarea\", {\n        name: name,\n        id: name,\n        onChange: onChange,\n        className: \"txtarea txtarea--md\",\n        value: form.formData[name] || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }));\n\n    case 'textarea':\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, children), /*#__PURE__*/React.createElement(\"textarea\", {\n        name: name,\n        id: name,\n        onChange: onChange,\n        className: \"txtarea txtarea--md\",\n        value: form.formData[name] || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }));\n\n    case 'text':\n    default:\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, children), /*#__PURE__*/React.createElement(\"input\", {\n        type: type,\n        name: name,\n        id: name,\n        onChange: onChange,\n        className: 'form__input form__input--' + size,\n        value: form.formData[name] || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }));\n  }\n};\n\nFormInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  form: PropTypes.object.isRequired\n};\nexport default FormInput;","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/FormInput.js"],"names":["React","Fragment","PropTypes","inputOnChange","checkboxOnChange","FormInput","type","name","size","children","form","selectionArr","onChange","e","formData","setFormData","handleCheckboxOnChange","showAcronym","preventDefault","propTypes","string","isRequired","object"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { inputOnChange, checkboxOnChange } from './formFuns';\n\nconst FormInput = ({\n    type = 'text',\n    name,\n    size = 'sml',\n    children,\n    form,\n    selectionArr,\n}) => {\n    const onChange = (e) => {\n        inputOnChange(e, form.formData, form.setFormData);\n    };\n    const handleCheckboxOnChange = (e) => {\n        checkboxOnChange(e, form.formData, form.setFormData);\n    };\n\n    switch (type) {\n        case 'checkbox':\n            return (\n                <Fragment>\n                    <div className='input-checkbox'>\n                        <label htmlFor={name}>{children}</label>\n                        {form.formData.showAcronym && (\n                            <input\n                                type={type}\n                                name={name}\n                                id={name}\n                                onChange={handleCheckboxOnChange}\n                                className={'form__input'}\n                                onMouseDown={(e) => e.preventDefault()}\n                                checked\n                            />\n                        )}\n                        {!form.formData.showAcronym && (\n                            <input\n                                type={type}\n                                name={name}\n                                id={name}\n                                onChange={handleCheckboxOnChange}\n                                className={'form__input'}\n                                onMouseDown={(e) => e.preventDefault()}\n                            />\n                        )}\n                        <span className='input-checkbox__checkmark'></span>\n                    </div>\n                </Fragment>\n            );\n        case 'selection':\n            return (\n                <Fragment>\n                    <label htmlFor={name}>{children}</label>\n                    <textarea\n                        name={name}\n                        id={name}\n                        onChange={onChange}\n                        className='txtarea txtarea--md'\n                        value={form.formData[name] || ''}\n                    />\n                </Fragment>\n            );\n        case 'textarea':\n            return (\n                <Fragment>\n                    <label htmlFor={name}>{children}</label>\n                    <textarea\n                        name={name}\n                        id={name}\n                        onChange={onChange}\n                        className='txtarea txtarea--md'\n                        value={form.formData[name] || ''}\n                    />\n                </Fragment>\n            );\n        case 'text':\n        default:\n            return (\n                <Fragment>\n                    <label htmlFor={name}>{children}</label>\n                    <input\n                        type={type}\n                        name={name}\n                        id={name}\n                        onChange={onChange}\n                        className={'form__input form__input--' + size}\n                        value={form.formData[name] || ''}\n                    />\n                </Fragment>\n            );\n    }\n};\n\nFormInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    children: PropTypes.string.isRequired,\n    form: PropTypes.object.isRequired,\n};\n\nexport default FormInput;\n"]},"metadata":{},"sourceType":"module"}