{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/routes/PrivateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from '../redux/actions/session';\n\nconst PrivateRoute = async ({\n  getCurrentUser,\n  component: Component,\n  authenticated,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => !authenticated ? /*#__PURE__*/React.createElement(Redirect, {\n    to: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 30\n    }\n  }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 54\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}));\n\nPrivateRoute.propTypes = {\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.session.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentUser\n})(PrivateRoute);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/routes/PrivateRoute.js"],"names":["React","PropTypes","Redirect","Route","connect","getCurrentUser","PrivateRoute","component","Component","authenticated","rest","props","propTypes","bool","isRequired","mapStateToProps","state","session"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AAEA,MAAMC,YAAY,GAAG,OAAO;AACxBD,EAAAA,cADwB;AAExBE,EAAAA,SAAS,EAAEC,SAFa;AAGxBC,EAAAA,aAHwB;AAIxB,KAAGC;AAJqB,CAAP,kBAMjB,oBAAC,KAAD,oBACQA,IADR;AAEI,EAAA,MAAM,EAAGC,KAAD,IACJ,CAACF,aAAD,gBAAiB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,gBAAyC,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GANJ;;AAcAL,YAAY,CAACM,SAAb,GAAyB;AACrBH,EAAAA,aAAa,EAAER,SAAS,CAACY,IAAV,CAAeC;AADT,CAAzB;;AAGA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,aAAa,EAAEO,KAAK,CAACC,OAAN,CAAcR;AADG,CAAZ,CAAxB;;AAGA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,YAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from '../redux/actions/session';\n\nconst PrivateRoute = async ({\n    getCurrentUser,\n    component: Component,\n    authenticated,\n    ...rest\n}) => (\n    <Route\n        {...rest}\n        render={(props) =>\n            !authenticated ? <Redirect to={'/'} /> : <Component {...props} />\n        }\n    />\n);\n\nPrivateRoute.propTypes = {\n    authenticated: PropTypes.bool.isRequired,\n};\nconst mapStateToProps = (state) => ({\n    authenticated: state.session.authenticated,\n});\nexport default connect(mapStateToProps, { getCurrentUser })(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}