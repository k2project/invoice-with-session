{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nfunction Screen() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(Screen, \"prototype\", {\n  value: Screen.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(Screen.prototype, \"availWidth\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"availWidth\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Screen.prototype, \"availHeight\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"availHeight\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Screen.prototype, \"width\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"width\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Screen.prototype, \"height\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"height\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Screen.prototype, \"colorDepth\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"colorDepth\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Screen.prototype, \"pixelDepth\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"pixelDepth\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Screen.prototype, Symbol.toStringTag, {\n  value: \"Screen\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'Screen'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Screen.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Screen.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: Screen,\n  expose: {\n    Window: {\n      Screen\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../window/Screen-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/Screen.js"],"names":["conversions","require","utils","impl","implSymbol","Screen","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","get","module","exports","is","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","interface","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nfunction Screen() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(Screen, \"prototype\", {\n  value: Screen.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(Screen.prototype, \"availWidth\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"availWidth\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Screen.prototype, \"availHeight\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"availHeight\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Screen.prototype, \"width\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"width\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Screen.prototype, \"height\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"height\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Screen.prototype, \"colorDepth\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"colorDepth\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Screen.prototype, \"pixelDepth\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"pixelDepth\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Screen.prototype, Symbol.toStringTag, {\n  value: \"Screen\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'Screen'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Screen.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Screen.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: Screen,\n  expose: {\n    Window: { Screen }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../window/Screen-impl.js\");\n"]},"metadata":{},"sourceType":"script"}