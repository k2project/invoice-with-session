{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyUpdate.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { getAllCompanies } from '../../redux/actions/companies';\nexport const CompanyUpdate = ({\n  company,\n  getAllCompanies\n}) => {\n  const formData = {\n    details: company.details,\n    http: `/api/companies/${company._id}`,\n    url: '/dashboard/companies/',\n    cb: this.props.getAllCompanies,\n    updateInitStateToReduxStateOnSubmit: this.updateInitStateToReduxStateOnSubmit,\n    //stops firing alertUnsavedChanges on submit\n    msg: 'Company has been updated successfully.'\n  };\n  return /*#__PURE__*/React.createElement(CustomBuiltForm, {\n    data: formData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  });\n};\nCompanyUpdate.propTypes = {\n  authenticated: PropTypes.bool,\n  company: PropTypes.object.isRequired,\n  getAllCompanies: PropTypes.func,\n  setAlert: PropTypes.func,\n  setUpdates: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.session.authenticated,\n  initialState: state.updates.initialState\n});\n\nconst mapDispatchToProps = {\n  getAllCompanies,\n  setUpdates\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CompanyUpdate));","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyUpdate.js"],"names":["React","PropTypes","connect","CustomBuiltForm","getAllCompanies","CompanyUpdate","company","formData","details","http","_id","url","cb","props","updateInitStateToReduxStateOnSubmit","msg","propTypes","authenticated","bool","object","isRequired","func","setAlert","setUpdates","mapStateToProps","state","session","initialState","updates","mapDispatchToProps","withRouter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,SAASC,eAAT,QAAgC,+BAAhC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWF,EAAAA;AAAX,CAAD,KAAkC;AAC3D,QAAMG,QAAQ,GAAG;AACbC,IAAAA,OAAO,EAAEF,OAAO,CAACE,OADJ;AAEbC,IAAAA,IAAI,EAAG,kBAAiBH,OAAO,CAACI,GAAI,EAFvB;AAGbC,IAAAA,GAAG,EAAE,uBAHQ;AAIbC,IAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWT,eAJF;AAKbU,IAAAA,mCAAmC,EAAE,KAChCA,mCANQ;AAM6B;AAC1CC,IAAAA,GAAG,EAAE;AAPQ,GAAjB;AASA,sBAAO,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAER,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAXM;AAYPF,aAAa,CAACW,SAAd,GAA0B;AACtBC,EAAAA,aAAa,EAAEhB,SAAS,CAACiB,IADH;AAEtBZ,EAAAA,OAAO,EAAEL,SAAS,CAACkB,MAAV,CAAiBC,UAFJ;AAGtBhB,EAAAA,eAAe,EAAEH,SAAS,CAACoB,IAHL;AAItBC,EAAAA,QAAQ,EAAErB,SAAS,CAACoB,IAJE;AAKtBE,EAAAA,UAAU,EAAEtB,SAAS,CAACoB;AALA,CAA1B;;AAOA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAChCR,EAAAA,aAAa,EAAEQ,KAAK,CAACC,OAAN,CAAcT,aADG;AAEhCU,EAAAA,YAAY,EAAEF,KAAK,CAACG,OAAN,CAAcD;AAFI,CAAZ,CAAxB;;AAKA,MAAME,kBAAkB,GAAG;AACvBzB,EAAAA,eADuB;AAEvBmB,EAAAA;AAFuB,CAA3B;AAKA,eAAerB,OAAO,CAClBsB,eADkB,EAElBK,kBAFkB,CAAP,CAGbC,UAAU,CAACzB,aAAD,CAHG,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { getAllCompanies } from '../../redux/actions/companies';\n\nexport const CompanyUpdate = ({ company, getAllCompanies }) => {\n    const formData = {\n        details: company.details,\n        http: `/api/companies/${company._id}`,\n        url: '/dashboard/companies/',\n        cb: this.props.getAllCompanies,\n        updateInitStateToReduxStateOnSubmit: this\n            .updateInitStateToReduxStateOnSubmit, //stops firing alertUnsavedChanges on submit\n        msg: 'Company has been updated successfully.',\n    };\n    return <CustomBuiltForm data={formData} />;\n};\nCompanyUpdate.propTypes = {\n    authenticated: PropTypes.bool,\n    company: PropTypes.object.isRequired,\n    getAllCompanies: PropTypes.func,\n    setAlert: PropTypes.func,\n    setUpdates: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    authenticated: state.session.authenticated,\n    initialState: state.updates.initialState,\n});\n\nconst mapDispatchToProps = {\n    getAllCompanies,\n    setUpdates,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(CompanyUpdate));\n"]},"metadata":{},"sourceType":"module"}