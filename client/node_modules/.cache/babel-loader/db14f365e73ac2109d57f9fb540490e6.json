{"ast":null,"code":"// import { createStore, applyMiddleware } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import thunk from 'redux-thunk';\n// import rootReducer from './reducers';\n// const initialState = {};\n// const middleware = [thunk];\n// const store = createStore(\n//     rootReducer,\n//     initialState,\n//     composeWithDevTools(applyMiddleware(...middleware))\n// );\n// export default store;\nimport { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport rootReducer from './reducers';\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport default (() => {\n  let store = createStore(persistedReducer);\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor\n  };\n});","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/redux/store.js"],"names":["createStore","persistStore","persistReducer","storage","rootReducer","persistConfig","key","persistedReducer","store","persistor"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBH,EAAAA;AAFkB,CAAtB;AAKA,MAAMI,gBAAgB,GAAGL,cAAc,CAACG,aAAD,EAAgBD,WAAhB,CAAvC;AAEA,gBAAe,MAAM;AACjB,MAAII,KAAK,GAAGR,WAAW,CAACO,gBAAD,CAAvB;AACA,MAAIE,SAAS,GAAGR,YAAY,CAACO,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACH,CAJD","sourcesContent":["// import { createStore, applyMiddleware } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import thunk from 'redux-thunk';\n// import rootReducer from './reducers';\n\n// const initialState = {};\n// const middleware = [thunk];\n\n// const store = createStore(\n//     rootReducer,\n//     initialState,\n//     composeWithDevTools(applyMiddleware(...middleware))\n// );\n// export default store;\nimport { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n    let store = createStore(persistedReducer);\n    let persistor = persistStore(store);\n    return { store, persistor };\n};\n"]},"metadata":{},"sourceType":"module"}