{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocFooter.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { numberWithCommas } from '../../../../components/form/utils/validations';\nimport plusIcon from '../../../../imgs/icons/plusIcon.png';\nimport updateIcon from '../../../../imgs/icons/updateIcon.png';\nimport tasksIcon from '../../../../imgs/icons/tasksIcon.png';\n\nconst InvoiceDocFooter = ({\n  invoice,\n  tasks\n}) => {\n  const [showNotesForm, setShowNotesForm] = useState(false);\n\n  const open_notes_form = async () => {\n    if (showNotesForm === true) return setShowNotesForm(false);\n    await setShowNotesForm(true); // document.querySelector('.tasks-table tbody').focus();\n  };\n\n  const [notes, setNotes] = useState('Edit your notes here...');\n\n  const handleNotesEdit = e => {\n    setNotes(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"invoice__notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, \"Notes:\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"invoice__notes-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, notes)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `bg-${invoice.bg_color}  invoice__cover`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice__notes-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"invoice-notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, \" Notes:\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"invoice-notes\",\n    onChange: handleNotesEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, \"Write some notes here...\")))), /*#__PURE__*/React.createElement(\"section\", {\n    className: `bg-${invoice.bg_color} txt-${invoice.text_color} invoice__total`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Net and gross amount.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Total: \\xA30.00\"))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Thank you for your business!\"));\n};\n\nInvoiceDocFooter.propTypes = {\n  invoice: PropTypes.object,\n  tasks: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  invoice: state.invoice,\n  tasks: state.companies.find(c => c._id === state.session.currentCompany).tasks\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocFooter);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceDoc/InvoiceDocFooter.js"],"names":["React","useState","useEffect","Fragment","PropTypes","connect","numberWithCommas","plusIcon","updateIcon","tasksIcon","InvoiceDocFooter","invoice","tasks","showNotesForm","setShowNotesForm","open_notes_form","notes","setNotes","handleNotesEdit","e","target","value","bg_color","text_color","propTypes","object","array","mapStateToProps","state","companies","find","c","_id","session","currentCompany","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './InvoiceDoc.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { numberWithCommas } from '../../../../components/form/utils/validations';\nimport plusIcon from '../../../../imgs/icons/plusIcon.png';\nimport updateIcon from '../../../../imgs/icons/updateIcon.png';\nimport tasksIcon from '../../../../imgs/icons/tasksIcon.png';\n\nconst InvoiceDocFooter = ({ invoice, tasks }) => {\n    const [showNotesForm, setShowNotesForm] = useState(false);\n    const open_notes_form = async () => {\n        if (showNotesForm === true) return setShowNotesForm(false);\n        await setShowNotesForm(true);\n        // document.querySelector('.tasks-table tbody').focus();\n    };\n    const [notes, setNotes] = useState('Edit your notes here...');\n    const handleNotesEdit = (e) => {\n        setNotes(e.target.value);\n    };\n\n    return (\n        <Fragment>\n            <section className='invoice__footer'>\n                <section className='invoice__notes'>\n                    <div>\n                        <h3>\n                            <b>Notes:</b>\n                        </h3>\n                        <p className='invoice__notes-display'>{notes}</p>\n                    </div>\n                    <div\n                        className={`bg-${invoice.bg_color}  invoice__cover`}\n                    ></div>\n                    <div className='invoice__notes-form'>\n                        <form>\n                            <label for='invoice-notes'>\n                                <b> Notes:</b>\n                            </label>\n                            <textarea\n                                id='invoice-notes'\n                                onChange={handleNotesEdit}\n                            >\n                                Write some notes here...\n                            </textarea>\n                        </form>\n                    </div>\n                </section>\n                <section\n                    className={`bg-${invoice.bg_color} txt-${invoice.text_color} invoice__total`}\n                >\n                    <h3 className='sr-only'>Net and gross amount.</h3>\n                    <div>Total: £0.00</div>\n                </section>\n            </section>\n\n            <footer>Thank you for your business!</footer>\n        </Fragment>\n    );\n};\n\nInvoiceDocFooter.propTypes = {\n    invoice: PropTypes.object,\n    tasks: PropTypes.array,\n};\nconst mapStateToProps = (state) => ({\n    invoice: state.invoice,\n    tasks: state.companies.find((c) => c._id === state.session.currentCompany)\n        .tasks,\n});\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceDocFooter);\n"]},"metadata":{},"sourceType":"module"}