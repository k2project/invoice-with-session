{"ast":null,"code":"\"use strict\";\n\nconst ValidityState = require(\"../generated/ValidityState\");\n\nconst Event = require(\"../generated/Event\");\n\nconst {\n  isDisabled\n} = require(\"../helpers/form-controls\");\n\nconst {\n  closest\n} = require(\"../helpers/traversal\");\n\nexports.implementation = class DefaultConstraintValidationImpl {\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-willvalidate\n  get willValidate() {\n    return this._isCandidateForConstraintValidation();\n  }\n\n  get validity() {\n    if (!this._validity) {\n      this._validity = ValidityState.createImpl(this);\n    }\n\n    return this._validity;\n  } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-checkvalidity\n\n\n  checkValidity() {\n    if (!this._isCandidateForConstraintValidation()) {\n      return true;\n    }\n\n    if (this._satisfiesConstraints()) {\n      return true;\n    }\n\n    this.dispatchEvent(Event.createImpl([\"invalid\", {\n      cancelable: true\n    }]));\n    return false;\n  } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-setcustomvalidity\n\n\n  setCustomValidity(message) {\n    this._customValidityErrorMessage = message;\n  } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-reportvalidity\n  // Since jsdom has no user interaction, it's the same as #checkValidity\n\n\n  reportValidity() {\n    return this.checkValidity();\n  } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-validationmessage\n\n\n  get validationMessage() {\n    const {\n      validity\n    } = this;\n\n    if (!this._isCandidateForConstraintValidation() || this._satisfiesConstraints()) {\n      return \"\";\n    }\n\n    const isSufferingFromCustomError = validity.customError;\n\n    if (isSufferingFromCustomError) {\n      return this._customValidityErrorMessage;\n    }\n\n    return \"Constraints not satisfied\";\n  }\n\n  _isCandidateForConstraintValidation() {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n    return !isDisabled(this) && // If an element has a datalist element ancestor,\n    // it is barred from constraint validation.\n    closest(this, \"datalist\") === null && !this._barredFromConstraintValidationSpecialization();\n  }\n\n  _isBarredFromConstraintValidation() {\n    return !this._isCandidateForConstraintValidation();\n  }\n\n  _satisfiesConstraints() {\n    return this.validity.valid;\n  }\n\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/constraint-validation/DefaultConstraintValidation-impl.js"],"names":["ValidityState","require","Event","isDisabled","closest","exports","implementation","DefaultConstraintValidationImpl","willValidate","_isCandidateForConstraintValidation","validity","_validity","createImpl","checkValidity","_satisfiesConstraints","dispatchEvent","cancelable","setCustomValidity","message","_customValidityErrorMessage","reportValidity","validationMessage","isSufferingFromCustomError","customError","_barredFromConstraintValidationSpecialization","_isBarredFromConstraintValidation","valid"],"mappings":"AAAA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,4BAAD,CAA7B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,oBAAD,CAArB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAiBF,OAAO,CAAC,0BAAD,CAA9B;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAcH,OAAO,CAAC,sBAAD,CAA3B;;AAEAI,OAAO,CAACC,cAAR,GAAyB,MAAMC,+BAAN,CAAsC;AAC7D;AACA,MAAIC,YAAJ,GAAmB;AACjB,WAAO,KAAKC,mCAAL,EAAP;AACD;;AAED,MAAIC,QAAJ,GAAe;AACb,QAAI,CAAC,KAAKC,SAAV,EAAqB;AACnB,WAAKA,SAAL,GAAiBX,aAAa,CAACY,UAAd,CAAyB,IAAzB,CAAjB;AACD;;AACD,WAAO,KAAKD,SAAZ;AACD,GAX4D,CAa7D;;;AACAE,EAAAA,aAAa,GAAG;AACd,QAAI,CAAC,KAAKJ,mCAAL,EAAL,EAAiD;AAC/C,aAAO,IAAP;AACD;;AACD,QAAI,KAAKK,qBAAL,EAAJ,EAAkC;AAChC,aAAO,IAAP;AACD;;AACD,SAAKC,aAAL,CAAmBb,KAAK,CAACU,UAAN,CAAiB,CAAC,SAAD,EAAY;AAAEI,MAAAA,UAAU,EAAE;AAAd,KAAZ,CAAjB,CAAnB;AACA,WAAO,KAAP;AACD,GAvB4D,CAyB7D;;;AACAC,EAAAA,iBAAiB,CAACC,OAAD,EAAU;AACzB,SAAKC,2BAAL,GAAmCD,OAAnC;AACD,GA5B4D,CA8B7D;AACA;;;AACAE,EAAAA,cAAc,GAAG;AACf,WAAO,KAAKP,aAAL,EAAP;AACD,GAlC4D,CAoC7D;;;AACA,MAAIQ,iBAAJ,GAAwB;AACtB,UAAM;AAAEX,MAAAA;AAAF,QAAe,IAArB;;AACA,QAAI,CAAC,KAAKD,mCAAL,EAAD,IAA+C,KAAKK,qBAAL,EAAnD,EAAiF;AAC/E,aAAO,EAAP;AACD;;AACD,UAAMQ,0BAA0B,GAAGZ,QAAQ,CAACa,WAA5C;;AACA,QAAID,0BAAJ,EAAgC;AAC9B,aAAO,KAAKH,2BAAZ;AACD;;AACD,WAAO,2BAAP;AACD;;AAEDV,EAAAA,mCAAmC,GAAG;AACpC;AACA,WAAO,CAACN,UAAU,CAAC,IAAD,CAAX,IACL;AACA;AACAC,IAAAA,OAAO,CAAC,IAAD,EAAO,UAAP,CAAP,KAA8B,IAHzB,IAIL,CAAC,KAAKoB,6CAAL,EAJH;AAKD;;AAEDC,EAAAA,iCAAiC,GAAG;AAClC,WAAO,CAAC,KAAKhB,mCAAL,EAAR;AACD;;AAEDK,EAAAA,qBAAqB,GAAG;AACtB,WAAO,KAAKJ,QAAL,CAAcgB,KAArB;AACD;;AAhE4D,CAA/D","sourcesContent":["\"use strict\";\n\nconst ValidityState = require(\"../generated/ValidityState\");\nconst Event = require(\"../generated/Event\");\nconst { isDisabled } = require(\"../helpers/form-controls\");\nconst { closest } = require(\"../helpers/traversal\");\n\nexports.implementation = class DefaultConstraintValidationImpl {\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-willvalidate\n  get willValidate() {\n    return this._isCandidateForConstraintValidation();\n  }\n\n  get validity() {\n    if (!this._validity) {\n      this._validity = ValidityState.createImpl(this);\n    }\n    return this._validity;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-checkvalidity\n  checkValidity() {\n    if (!this._isCandidateForConstraintValidation()) {\n      return true;\n    }\n    if (this._satisfiesConstraints()) {\n      return true;\n    }\n    this.dispatchEvent(Event.createImpl([\"invalid\", { cancelable: true }]));\n    return false;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-setcustomvalidity\n  setCustomValidity(message) {\n    this._customValidityErrorMessage = message;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-reportvalidity\n  // Since jsdom has no user interaction, it's the same as #checkValidity\n  reportValidity() {\n    return this.checkValidity();\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-validationmessage\n  get validationMessage() {\n    const { validity } = this;\n    if (!this._isCandidateForConstraintValidation() || this._satisfiesConstraints()) {\n      return \"\";\n    }\n    const isSufferingFromCustomError = validity.customError;\n    if (isSufferingFromCustomError) {\n      return this._customValidityErrorMessage;\n    }\n    return \"Constraints not satisfied\";\n  }\n\n  _isCandidateForConstraintValidation() {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n    return !isDisabled(this) &&\n      // If an element has a datalist element ancestor,\n      // it is barred from constraint validation.\n      closest(this, \"datalist\") === null &&\n      !this._barredFromConstraintValidationSpecialization();\n  }\n\n  _isBarredFromConstraintValidation() {\n    return !this._isCandidateForConstraintValidation();\n  }\n\n  _satisfiesConstraints() {\n    return this.validity.valid;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}