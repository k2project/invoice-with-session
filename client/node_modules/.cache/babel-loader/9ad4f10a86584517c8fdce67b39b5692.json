{"ast":null,"code":"\"use strict\";\n\nconst cssom = require(\"cssom\");\n\nconst cssstyle = require(\"cssstyle\"); // http://dev.w3.org/csswg/cssom/#stylesheetlist\n// TODO: implement using webidl2js\n\n\nfunction StyleSheetList() {}\n\nObject.setPrototypeOf(StyleSheetList.prototype, Array.prototype);\n\nStyleSheetList.prototype.item = function item(i) {\n  return Object.prototype.hasOwnProperty.call(this, i) ? this[i] : null;\n};\n\nexports.StyleSheetList = StyleSheetList;\n\nexports.addToCore = core => {\n  // What works now:\n  // - Accessing the rules defined in individual stylesheets\n  // - Modifications to style content attribute are reflected in style property\n  // - Modifications to style property are reflected in style content attribute\n  // TODO\n  // - Modifications to style element's textContent are reflected in sheet property.\n  // - Modifications to style element's sheet property are reflected in textContent.\n  // - Modifications to link.href property are reflected in sheet property.\n  // - Less-used features of link: disabled\n  // - Less-used features of style: disabled, scoped, title\n  // - CSSOM-View\n  //   - getComputedStyle(): requires default stylesheet, cascading, inheritance,\n  //     filtering by @media (screen? print?), layout for widths/heights\n  // - Load events are not in the specs, but apparently some browsers\n  //   implement something. Should onload only fire after all @imports have been\n  //   loaded, or only the primary sheet?\n  core.StyleSheet = cssom.StyleSheet;\n  core.MediaList = cssom.MediaList;\n  core.CSSStyleSheet = cssom.CSSStyleSheet;\n  core.CSSRule = cssom.CSSRule;\n  core.CSSStyleRule = cssom.CSSStyleRule;\n  core.CSSMediaRule = cssom.CSSMediaRule;\n  core.CSSImportRule = cssom.CSSImportRule;\n  core.CSSStyleDeclaration = cssstyle.CSSStyleDeclaration;\n  core.StyleSheetList = StyleSheetList; // Relavant specs\n  // http://www.w3.org/TR/DOM-Level-2-Style (2000)\n  // http://www.w3.org/TR/cssom-view/ (2008)\n  // http://dev.w3.org/csswg/cssom/ (2010) Meant to replace DOM Level 2 Style\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/ HTML5, of course\n  // http://dev.w3.org/csswg/css-style-attr/  not sure what's new here\n  // Objects that aren't in cssom library but should be:\n  //   CSSRuleList  (cssom just uses array)\n  //   CSSFontFaceRule\n  //   CSSPageRule\n  // These rules don't really make sense to implement, so CSSOM draft makes them\n  // obsolete.\n  //   CSSCharsetRule\n  //   CSSUnknownRule\n  // These objects are considered obsolete by CSSOM draft, although modern\n  // browsers implement them.\n  //   CSSValue\n  //   CSSPrimitiveValue\n  //   CSSValueList\n  //   RGBColor\n  //   Rect\n  //   Counter\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/level2/style.js"],"names":["cssom","require","cssstyle","StyleSheetList","Object","setPrototypeOf","prototype","Array","item","i","hasOwnProperty","call","exports","addToCore","core","StyleSheet","MediaList","CSSStyleSheet","CSSRule","CSSStyleRule","CSSMediaRule","CSSImportRule","CSSStyleDeclaration"],"mappings":"AAAA;;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB,C,CAEA;AACA;;;AACA,SAASE,cAAT,GAA0B,CAAE;;AAE5BC,MAAM,CAACC,cAAP,CAAsBF,cAAc,CAACG,SAArC,EAAgDC,KAAK,CAACD,SAAtD;;AAEAH,cAAc,CAACG,SAAf,CAAyBE,IAAzB,GAAgC,SAASA,IAAT,CAAcC,CAAd,EAAiB;AAC/C,SAAOL,MAAM,CAACE,SAAP,CAAiBI,cAAjB,CAAgCC,IAAhC,CAAqC,IAArC,EAA2CF,CAA3C,IAAgD,KAAKA,CAAL,CAAhD,GAA0D,IAAjE;AACD,CAFD;;AAIAG,OAAO,CAACT,cAAR,GAAyBA,cAAzB;;AAEAS,OAAO,CAACC,SAAR,GAAoBC,IAAI,IAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAAA,IAAI,CAACC,UAAL,GAAkBf,KAAK,CAACe,UAAxB;AACAD,EAAAA,IAAI,CAACE,SAAL,GAAiBhB,KAAK,CAACgB,SAAvB;AACAF,EAAAA,IAAI,CAACG,aAAL,GAAqBjB,KAAK,CAACiB,aAA3B;AACAH,EAAAA,IAAI,CAACI,OAAL,GAAelB,KAAK,CAACkB,OAArB;AACAJ,EAAAA,IAAI,CAACK,YAAL,GAAoBnB,KAAK,CAACmB,YAA1B;AACAL,EAAAA,IAAI,CAACM,YAAL,GAAoBpB,KAAK,CAACoB,YAA1B;AACAN,EAAAA,IAAI,CAACO,aAAL,GAAqBrB,KAAK,CAACqB,aAA3B;AACAP,EAAAA,IAAI,CAACQ,mBAAL,GAA2BpB,QAAQ,CAACoB,mBAApC;AACAR,EAAAA,IAAI,CAACX,cAAL,GAAsBA,cAAtB,CA1B0B,CA4B1B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CArDD","sourcesContent":["\"use strict\";\nconst cssom = require(\"cssom\");\nconst cssstyle = require(\"cssstyle\");\n\n// http://dev.w3.org/csswg/cssom/#stylesheetlist\n// TODO: implement using webidl2js\nfunction StyleSheetList() {}\n\nObject.setPrototypeOf(StyleSheetList.prototype, Array.prototype);\n\nStyleSheetList.prototype.item = function item(i) {\n  return Object.prototype.hasOwnProperty.call(this, i) ? this[i] : null;\n};\n\nexports.StyleSheetList = StyleSheetList;\n\nexports.addToCore = core => {\n  // What works now:\n  // - Accessing the rules defined in individual stylesheets\n  // - Modifications to style content attribute are reflected in style property\n  // - Modifications to style property are reflected in style content attribute\n  // TODO\n  // - Modifications to style element's textContent are reflected in sheet property.\n  // - Modifications to style element's sheet property are reflected in textContent.\n  // - Modifications to link.href property are reflected in sheet property.\n  // - Less-used features of link: disabled\n  // - Less-used features of style: disabled, scoped, title\n  // - CSSOM-View\n  //   - getComputedStyle(): requires default stylesheet, cascading, inheritance,\n  //     filtering by @media (screen? print?), layout for widths/heights\n  // - Load events are not in the specs, but apparently some browsers\n  //   implement something. Should onload only fire after all @imports have been\n  //   loaded, or only the primary sheet?\n\n  core.StyleSheet = cssom.StyleSheet;\n  core.MediaList = cssom.MediaList;\n  core.CSSStyleSheet = cssom.CSSStyleSheet;\n  core.CSSRule = cssom.CSSRule;\n  core.CSSStyleRule = cssom.CSSStyleRule;\n  core.CSSMediaRule = cssom.CSSMediaRule;\n  core.CSSImportRule = cssom.CSSImportRule;\n  core.CSSStyleDeclaration = cssstyle.CSSStyleDeclaration;\n  core.StyleSheetList = StyleSheetList;\n\n  // Relavant specs\n  // http://www.w3.org/TR/DOM-Level-2-Style (2000)\n  // http://www.w3.org/TR/cssom-view/ (2008)\n  // http://dev.w3.org/csswg/cssom/ (2010) Meant to replace DOM Level 2 Style\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/ HTML5, of course\n  // http://dev.w3.org/csswg/css-style-attr/  not sure what's new here\n\n  // Objects that aren't in cssom library but should be:\n  //   CSSRuleList  (cssom just uses array)\n  //   CSSFontFaceRule\n  //   CSSPageRule\n\n  // These rules don't really make sense to implement, so CSSOM draft makes them\n  // obsolete.\n  //   CSSCharsetRule\n  //   CSSUnknownRule\n\n  // These objects are considered obsolete by CSSOM draft, although modern\n  // browsers implement them.\n  //   CSSValue\n  //   CSSPrimitiveValue\n  //   CSSValueList\n  //   RGBColor\n  //   Rect\n  //   Counter\n};\n"]},"metadata":{},"sourceType":"script"}