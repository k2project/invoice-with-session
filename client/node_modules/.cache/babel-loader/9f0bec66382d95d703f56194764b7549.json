{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileInit.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport infoIcon from '../../imgs/icons/infoIcon.png';\n\nconst ProfileInit = ({\n  profile: {\n    details\n  },\n  getProfile\n}) => {\n  const formData = {\n    details,\n    http: '/api/profile/',\n    url: '/dashboard/profile',\n    cb: getProfile,\n    msg: 'Your profile has been created successfully.'\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile tile--info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: infoIcon,\n    alt: \"\",\n    className: \"icon--md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), ' ', /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Please create your profile.\")), /*#__PURE__*/React.createElement(CustomBuiltForm, {\n    data: formData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }));\n};\n\nProfileInit.propTypes = {\n  profile: PropTypes.object,\n  getProfile: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nconst mapDispatchToProps = {\n  getProfile\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileInit);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileInit.js"],"names":["React","Fragment","PropTypes","CustomBuiltForm","connect","getProfile","infoIcon","ProfileInit","profile","details","formData","http","url","cb","msg","propTypes","object","func","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,QAAP,MAAqB,+BAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF,GAAX;AAAwBJ,EAAAA;AAAxB,CAAD,KAA0C;AAC1D,QAAMK,QAAQ,GAAG;AACbD,IAAAA,OADa;AAEbE,IAAAA,IAAI,EAAE,eAFO;AAGbC,IAAAA,GAAG,EAAE,oBAHQ;AAIbC,IAAAA,EAAE,EAAER,UAJS;AAKbS,IAAAA,GAAG,EAAE;AALQ,GAAjB;AAQA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAER,QAAV;AAAoB,IAAA,GAAG,EAAC,EAAxB;AAA2B,IAAA,SAAS,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EACuD,GADvD,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFJ,CADJ,eAKI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEI,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH,CAlBD;;AAoBAH,WAAW,CAACQ,SAAZ,GAAwB;AACpBP,EAAAA,OAAO,EAAEN,SAAS,CAACc,MADC;AAEpBX,EAAAA,UAAU,EAAEH,SAAS,CAACe;AAFF,CAAxB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADiB,CAAZ,CAAxB;;AAGA,MAAMY,kBAAkB,GAAG;AACvBf,EAAAA;AADuB,CAA3B;AAGA,eAAeD,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,WAA7C,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport infoIcon from '../../imgs/icons/infoIcon.png';\n\nconst ProfileInit = ({ profile: { details }, getProfile }) => {\n    const formData = {\n        details,\n        http: '/api/profile/',\n        url: '/dashboard/profile',\n        cb: getProfile,\n        msg: 'Your profile has been created successfully.',\n    };\n\n    return (\n        <Fragment>\n            <div className='tile tile--info'>\n                <img src={infoIcon} alt='' className='icon--md' />{' '}\n                <h2>Please create your profile.</h2>\n            </div>\n            <CustomBuiltForm data={formData} />\n        </Fragment>\n    );\n};\n\nProfileInit.propTypes = {\n    profile: PropTypes.object,\n    getProfile: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\nconst mapDispatchToProps = {\n    getProfile,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileInit);\n"]},"metadata":{},"sourceType":"module"}