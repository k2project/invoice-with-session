{"ast":null,"code":"\"use strict\";\n\nconst parse5 = require(\"parse5\");\n\nconst treeAdapter = require(\"./parse5-adapter-serialization\");\n\nconst NODE_TYPE = require(\"../living/node-type\");\n\nexports.domToHtml = iterable => {\n  let ret = \"\";\n\n  for (const node of iterable) {\n    if (node.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n      ret += parse5.serialize(node, {\n        treeAdapter\n      });\n    } else {\n      // TODO: maybe parse5 can give us a hook where it serializes the node itself too:\n      // https://github.com/inikulin/parse5/issues/230\n      ret += parse5.serialize({\n        childNodesForSerializing: [node]\n      }, {\n        treeAdapter\n      });\n    }\n  }\n\n  return ret;\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/browser/domtohtml.js"],"names":["parse5","require","treeAdapter","NODE_TYPE","exports","domToHtml","iterable","ret","node","nodeType","DOCUMENT_NODE","serialize","childNodesForSerializing"],"mappings":"AAAA;;AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,gCAAD,CAA3B;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAzB;;AAEAG,OAAO,CAACC,SAAR,GAAoBC,QAAQ,IAAI;AAC9B,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,MAAMC,IAAX,IAAmBF,QAAnB,EAA6B;AAC3B,QAAIE,IAAI,CAACC,QAAL,KAAkBN,SAAS,CAACO,aAAhC,EAA+C;AAC7CH,MAAAA,GAAG,IAAIP,MAAM,CAACW,SAAP,CAAiBH,IAAjB,EAAuB;AAAEN,QAAAA;AAAF,OAAvB,CAAP;AACD,KAFD,MAEO;AACL;AACA;AACAK,MAAAA,GAAG,IAAIP,MAAM,CAACW,SAAP,CAAiB;AAAEC,QAAAA,wBAAwB,EAAE,CAACJ,IAAD;AAA5B,OAAjB,EAAuD;AAAEN,QAAAA;AAAF,OAAvD,CAAP;AACD;AACF;;AACD,SAAOK,GAAP;AACD,CAZD","sourcesContent":["\"use strict\";\nconst parse5 = require(\"parse5\");\nconst treeAdapter = require(\"./parse5-adapter-serialization\");\nconst NODE_TYPE = require(\"../living/node-type\");\n\nexports.domToHtml = iterable => {\n  let ret = \"\";\n  for (const node of iterable) {\n    if (node.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n      ret += parse5.serialize(node, { treeAdapter });\n    } else {\n      // TODO: maybe parse5 can give us a hook where it serializes the node itself too:\n      // https://github.com/inikulin/parse5/issues/230\n      ret += parse5.serialize({ childNodesForSerializing: [node] }, { treeAdapter });\n    }\n  }\n  return ret;\n};\n"]},"metadata":{},"sourceType":"script"}