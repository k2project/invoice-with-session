{"ast":null,"code":"import axios from 'axios';\nimport { dialogBox } from '../../alerts/alertsFuns';\nexport const alertUnsavedChanges = async (details, setStateTab, http, //api call\nurl, //redirection back to the form\nhistory) => {\n  try {\n    const stateDB = await axios.get(http);\n\n    if (JSON.stringify(details) !== JSON.stringify(stateDB.data.details)) {\n      const msg = `You have some unsaved changes. What would you like to do?`;\n      const cancelBtnText = 'Discharge updates';\n      const confirmBtnText = 'Return to the form!';\n\n      const cancelCb = () => {\n        window.location.reload();\n      };\n\n      const confirmCb = () => {\n        history.push(url);\n        setStateTab('form');\n      };\n\n      dialogBox({\n        msg,\n        cancelBtnText,\n        confirmBtnText,\n        cancelCb,\n        confirmCb\n      });\n    }\n  } catch (err) {\n    console.log(err); // setAlert(\n    //     `We think you may have some unsaved changes. Unfortunately due to server error we weren't able to proceed them.`,\n    //     'danger',\n    //     null,\n    //     false,\n    //     15000\n    // );\n  }\n};\nexport const saveChangesOnLeave = async (initilState, state, getState, http //api call\n) => {\n  try {\n    if (JSON.stringify(state) !== JSON.stringify(initilState)) {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      await axios.post(http, JSON.stringify(state), config);\n      await getState();\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/utils/handleUnsavedChanges.js"],"names":["axios","dialogBox","alertUnsavedChanges","details","setStateTab","http","url","history","stateDB","get","JSON","stringify","data","msg","cancelBtnText","confirmBtnText","cancelCb","window","location","reload","confirmCb","push","err","console","log","saveChangesOnLeave","initilState","state","getState","config","headers","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,OAC/BC,OAD+B,EAE/BC,WAF+B,EAG/BC,IAH+B,EAGzB;AACNC,GAJ+B,EAI1B;AACLC,OAL+B,KAM9B;AACD,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUJ,IAAV,CAAtB;;AAEA,QAAIK,IAAI,CAACC,SAAL,CAAeR,OAAf,MAA4BO,IAAI,CAACC,SAAL,CAAeH,OAAO,CAACI,IAAR,CAAaT,OAA5B,CAAhC,EAAsE;AAClE,YAAMU,GAAG,GAAI,2DAAb;AACA,YAAMC,aAAa,GAAG,mBAAtB;AACA,YAAMC,cAAc,GAAG,qBAAvB;;AACA,YAAMC,QAAQ,GAAG,MAAM;AACnBC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OAFD;;AAGA,YAAMC,SAAS,GAAG,MAAM;AACpBb,QAAAA,OAAO,CAACc,IAAR,CAAaf,GAAb;AACAF,QAAAA,WAAW,CAAC,MAAD,CAAX;AACH,OAHD;;AAIAH,MAAAA,SAAS,CAAC;AACNY,QAAAA,GADM;AAENC,QAAAA,aAFM;AAGNC,QAAAA,cAHM;AAINC,QAAAA,QAJM;AAKNI,QAAAA;AALM,OAAD,CAAT;AAOH;AACJ,GAtBD,CAsBE,OAAOE,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADU,CAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ,CAvCM;AAyCP,OAAO,MAAMG,kBAAkB,GAAG,OAC9BC,WAD8B,EAE9BC,KAF8B,EAG9BC,QAH8B,EAI9BvB,IAJ8B,CAIzB;AAJyB,KAK7B;AACD,MAAI;AACA,QAAIK,IAAI,CAACC,SAAL,CAAegB,KAAf,MAA0BjB,IAAI,CAACC,SAAL,CAAee,WAAf,CAA9B,EAA2D;AACvD,YAAMG,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADE,OAAf;AAKA,YAAM9B,KAAK,CAAC+B,IAAN,CAAW1B,IAAX,EAAiBK,IAAI,CAACC,SAAL,CAAegB,KAAf,CAAjB,EAAwCE,MAAxC,CAAN;AACA,YAAMD,QAAQ,EAAd;AACH;AACJ,GAVD,CAUE,OAAON,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAnBM","sourcesContent":["import axios from 'axios';\nimport { dialogBox } from '../../alerts/alertsFuns';\n\nexport const alertUnsavedChanges = async (\n    details,\n    setStateTab,\n    http, //api call\n    url, //redirection back to the form\n    history\n) => {\n    try {\n        const stateDB = await axios.get(http);\n\n        if (JSON.stringify(details) !== JSON.stringify(stateDB.data.details)) {\n            const msg = `You have some unsaved changes. What would you like to do?`;\n            const cancelBtnText = 'Discharge updates';\n            const confirmBtnText = 'Return to the form!';\n            const cancelCb = () => {\n                window.location.reload();\n            };\n            const confirmCb = () => {\n                history.push(url);\n                setStateTab('form');\n            };\n            dialogBox({\n                msg,\n                cancelBtnText,\n                confirmBtnText,\n                cancelCb,\n                confirmCb,\n            });\n        }\n    } catch (err) {\n        console.log(err);\n        // setAlert(\n        //     `We think you may have some unsaved changes. Unfortunately due to server error we weren't able to proceed them.`,\n        //     'danger',\n        //     null,\n        //     false,\n        //     15000\n        // );\n    }\n};\n\nexport const saveChangesOnLeave = async (\n    initilState,\n    state,\n    getState,\n    http //api call\n) => {\n    try {\n        if (JSON.stringify(state) !== JSON.stringify(initilState)) {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            await axios.post(http, JSON.stringify(state), config);\n            await getState();\n        }\n    } catch (err) {\n        console.log(err);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}