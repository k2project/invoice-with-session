{"ast":null,"code":"\"use strict\";\n\nconst nodeType = require(\"../node-type.js\");\n\nconst FocusEvent = require(\"../generated/FocusEvent.js\");\n\nconst idlUtils = require(\"../generated/utils.js\");\n\nconst {\n  isDisabled\n} = require(\"./form-controls.js\");\n\nconst {\n  HTML_NS\n} = require(\"./namespaces\");\n\nconst focusableFormElements = new Set([\"input\", \"select\", \"textarea\", \"button\"]); // https://html.spec.whatwg.org/multipage/interaction.html#focusable-area, but also some of\n// https://html.spec.whatwg.org/multipage/interaction.html#focusing-steps: e.g., Documents are not actually focusable\n// areas, but their viewports are, and the first step of the latter algorithm translates Documents to their viewports.\n// And also https://html.spec.whatwg.org/multipage/interaction.html#specially-focusable!\n\nexports.isFocusableAreaElement = elImpl => {\n  if (!elImpl._ownerDocument._defaultView && !elImpl._defaultView) {\n    return false;\n  }\n\n  if (elImpl._nodeType === nodeType.DOCUMENT_NODE) {\n    return true;\n  }\n\n  if (!Number.isNaN(parseInt(elImpl.getAttribute(\"tabindex\")))) {\n    return true;\n  }\n\n  if (elImpl._namespaceURI === HTML_NS) {\n    if (elImpl._localName === \"iframe\") {\n      return true;\n    }\n\n    if (elImpl._localName === \"a\" && elImpl.hasAttribute(\"href\")) {\n      return true;\n    }\n\n    if (focusableFormElements.has(elImpl._localName) && !isDisabled(elImpl)) {\n      if (elImpl._localName === \"input\" && elImpl.type === \"hidden\") {\n        return false;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}; // https://html.spec.whatwg.org/multipage/interaction.html#fire-a-focus-event plus the steps of\n// https://html.spec.whatwg.org/multipage/interaction.html#focus-update-steps that adjust Documents to Windows\n\n\nexports.fireFocusEventWithTargetAdjustment = (name, target, relatedTarget) => {\n  if (target === null) {\n    // E.g. firing blur with nothing previously focused.\n    return;\n  }\n\n  const event = FocusEvent.createImpl([name, {\n    bubbles: false,\n    cancelable: false,\n    relatedTarget,\n    view: target._ownerDocument._defaultView,\n    detail: 0\n  }], {\n    isTrusted: true\n  });\n\n  if (target._defaultView) {\n    target = idlUtils.implForWrapper(target._defaultView);\n  } // _dispatch allows setting isTrusted\n\n\n  target._dispatch(event);\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/helpers/focusing.js"],"names":["nodeType","require","FocusEvent","idlUtils","isDisabled","HTML_NS","focusableFormElements","Set","exports","isFocusableAreaElement","elImpl","_ownerDocument","_defaultView","_nodeType","DOCUMENT_NODE","Number","isNaN","parseInt","getAttribute","_namespaceURI","_localName","hasAttribute","has","type","fireFocusEventWithTargetAdjustment","name","target","relatedTarget","event","createImpl","bubbles","cancelable","view","detail","isTrusted","implForWrapper","_dispatch"],"mappings":"AAAA;;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAxB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,4BAAD,CAA1B;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,uBAAD,CAAxB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAiBH,OAAO,CAAC,oBAAD,CAA9B;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAcJ,OAAO,CAAC,cAAD,CAA3B;;AAEA,MAAMK,qBAAqB,GAAG,IAAIC,GAAJ,CAAQ,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,EAAgC,QAAhC,CAAR,CAA9B,C,CAEA;AACA;AACA;AACA;;AACAC,OAAO,CAACC,sBAAR,GAAiCC,MAAM,IAAI;AACzC,MAAI,CAACA,MAAM,CAACC,cAAP,CAAsBC,YAAvB,IAAuC,CAACF,MAAM,CAACE,YAAnD,EAAiE;AAC/D,WAAO,KAAP;AACD;;AAED,MAAIF,MAAM,CAACG,SAAP,KAAqBb,QAAQ,CAACc,aAAlC,EAAiD;AAC/C,WAAO,IAAP;AACD;;AAED,MAAI,CAACC,MAAM,CAACC,KAAP,CAAaC,QAAQ,CAACP,MAAM,CAACQ,YAAP,CAAoB,UAApB,CAAD,CAArB,CAAL,EAA8D;AAC5D,WAAO,IAAP;AACD;;AAED,MAAIR,MAAM,CAACS,aAAP,KAAyBd,OAA7B,EAAsC;AACpC,QAAIK,MAAM,CAACU,UAAP,KAAsB,QAA1B,EAAoC;AAClC,aAAO,IAAP;AACD;;AAED,QAAIV,MAAM,CAACU,UAAP,KAAsB,GAAtB,IAA6BV,MAAM,CAACW,YAAP,CAAoB,MAApB,CAAjC,EAA8D;AAC5D,aAAO,IAAP;AACD;;AAED,QAAIf,qBAAqB,CAACgB,GAAtB,CAA0BZ,MAAM,CAACU,UAAjC,KAAgD,CAAChB,UAAU,CAACM,MAAD,CAA/D,EAAyE;AACvE,UAAIA,MAAM,CAACU,UAAP,KAAsB,OAAtB,IAAiCV,MAAM,CAACa,IAAP,KAAgB,QAArD,EAA+D;AAC7D,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD,CAhCD,C,CAkCA;AACA;;;AACAf,OAAO,CAACgB,kCAAR,GAA6C,CAACC,IAAD,EAAOC,MAAP,EAAeC,aAAf,KAAiC;AAC5E,MAAID,MAAM,KAAK,IAAf,EAAqB;AACnB;AACA;AACD;;AAED,QAAME,KAAK,GAAG1B,UAAU,CAAC2B,UAAX,CACZ,CACEJ,IADF,EAEE;AACEK,IAAAA,OAAO,EAAE,KADX;AAEEC,IAAAA,UAAU,EAAE,KAFd;AAGEJ,IAAAA,aAHF;AAIEK,IAAAA,IAAI,EAAEN,MAAM,CAACf,cAAP,CAAsBC,YAJ9B;AAKEqB,IAAAA,MAAM,EAAE;AALV,GAFF,CADY,EAWZ;AACEC,IAAAA,SAAS,EAAE;AADb,GAXY,CAAd;;AAgBA,MAAIR,MAAM,CAACd,YAAX,EAAyB;AACvBc,IAAAA,MAAM,GAAGvB,QAAQ,CAACgC,cAAT,CAAwBT,MAAM,CAACd,YAA/B,CAAT;AACD,GAxB2E,CA0B5E;;;AACAc,EAAAA,MAAM,CAACU,SAAP,CAAiBR,KAAjB;AACD,CA5BD","sourcesContent":["\"use strict\";\nconst nodeType = require(\"../node-type.js\");\nconst FocusEvent = require(\"../generated/FocusEvent.js\");\nconst idlUtils = require(\"../generated/utils.js\");\nconst { isDisabled } = require(\"./form-controls.js\");\nconst { HTML_NS } = require(\"./namespaces\");\n\nconst focusableFormElements = new Set([\"input\", \"select\", \"textarea\", \"button\"]);\n\n// https://html.spec.whatwg.org/multipage/interaction.html#focusable-area, but also some of\n// https://html.spec.whatwg.org/multipage/interaction.html#focusing-steps: e.g., Documents are not actually focusable\n// areas, but their viewports are, and the first step of the latter algorithm translates Documents to their viewports.\n// And also https://html.spec.whatwg.org/multipage/interaction.html#specially-focusable!\nexports.isFocusableAreaElement = elImpl => {\n  if (!elImpl._ownerDocument._defaultView && !elImpl._defaultView) {\n    return false;\n  }\n\n  if (elImpl._nodeType === nodeType.DOCUMENT_NODE) {\n    return true;\n  }\n\n  if (!Number.isNaN(parseInt(elImpl.getAttribute(\"tabindex\")))) {\n    return true;\n  }\n\n  if (elImpl._namespaceURI === HTML_NS) {\n    if (elImpl._localName === \"iframe\") {\n      return true;\n    }\n\n    if (elImpl._localName === \"a\" && elImpl.hasAttribute(\"href\")) {\n      return true;\n    }\n\n    if (focusableFormElements.has(elImpl._localName) && !isDisabled(elImpl)) {\n      if (elImpl._localName === \"input\" && elImpl.type === \"hidden\") {\n        return false;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n};\n\n// https://html.spec.whatwg.org/multipage/interaction.html#fire-a-focus-event plus the steps of\n// https://html.spec.whatwg.org/multipage/interaction.html#focus-update-steps that adjust Documents to Windows\nexports.fireFocusEventWithTargetAdjustment = (name, target, relatedTarget) => {\n  if (target === null) {\n    // E.g. firing blur with nothing previously focused.\n    return;\n  }\n\n  const event = FocusEvent.createImpl(\n    [\n      name,\n      {\n        bubbles: false,\n        cancelable: false,\n        relatedTarget,\n        view: target._ownerDocument._defaultView,\n        detail: 0\n      }\n    ],\n    {\n      isTrusted: true\n    }\n  );\n\n  if (target._defaultView) {\n    target = idlUtils.implForWrapper(target._defaultView);\n  }\n\n  // _dispatch allows setting isTrusted\n  target._dispatch(event);\n};\n"]},"metadata":{},"sourceType":"script"}