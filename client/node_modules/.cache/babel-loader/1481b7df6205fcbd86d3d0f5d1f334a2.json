{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Calendar.scss';\nimport calendar, { isDate, isSameDay, isSameMonth, getDateISO, getNextMonth, getPreviousMonth, WEEK_DAYS, CALENDAR_MONTHS } from './dates';\n\nclass Calendar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...this.resolveStateFromProp(),\n      today: new Date()\n    };\n\n    this.getCalendarDates = () => {\n      const {\n        current,\n        month,\n        year\n      } = this.state;\n      const calendarMonth = month || +current.getMonth() + 1;\n      const calendarYear = year || current.getFullYear();\n      return calendar(calendarMonth, calendarYear);\n    };\n  }\n\n  resolveStateFromDate(date) {\n    const isDateObject = isDate(date);\n\n    const _date = isDateObject ? date : new Date();\n\n    return {\n      current: isDateObject ? date : null,\n      month: +_date.getMonth() + 1,\n      year: _date.getFullYear()\n    };\n  }\n\n  resolveStateFromProp() {\n    return this.resolveStateFromDate(this.props.date);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Styled.CalendarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, this.renderMonthAndYear(), /*#__PURE__*/React.createElement(Styled.CalendarGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, Object.keys(WEEK_DAYS).map(this.renderDayLabel)), /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, this.getCalendarDates().map(this.renderCalendarDate))));\n  }\n\n}\n\nCalendar.propTypes = {\n  date: PropTypes.instanceOf(Date),\n  onDateChanged: PropTypes.func\n};\nexport default Calendar;","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js"],"names":["React","PropTypes","calendar","isDate","isSameDay","isSameMonth","getDateISO","getNextMonth","getPreviousMonth","WEEK_DAYS","CALENDAR_MONTHS","Calendar","Component","state","resolveStateFromProp","today","Date","getCalendarDates","current","month","year","calendarMonth","getMonth","calendarYear","getFullYear","resolveStateFromDate","date","isDateObject","_date","props","render","renderMonthAndYear","Object","keys","map","renderDayLabel","renderCalendarDate","propTypes","instanceOf","onDateChanged","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,IACIC,MADJ,EAEIC,SAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,YALJ,EAMIC,gBANJ,EAOIC,SAPJ,EAQIC,eARJ,QASO,SATP;;AAWA,MAAMC,QAAN,SAAuBC,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BC,KAD6B,GACrB,EAAE,GAAG,KAAKC,oBAAL,EAAL;AAAkCC,MAAAA,KAAK,EAAE,IAAIC,IAAJ;AAAzC,KADqB;;AAAA,SAkB7BC,gBAlB6B,GAkBV,MAAM;AACrB,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,KAAX;AAAkBC,QAAAA;AAAlB,UAA2B,KAAKP,KAAtC;AACA,YAAMQ,aAAa,GAAGF,KAAK,IAAI,CAACD,OAAO,CAACI,QAAR,EAAD,GAAsB,CAArD;AACA,YAAMC,YAAY,GAAGH,IAAI,IAAIF,OAAO,CAACM,WAAR,EAA7B;AAEA,aAAOtB,QAAQ,CAACmB,aAAD,EAAgBE,YAAhB,CAAf;AACH,KAxB4B;AAAA;;AAG7BE,EAAAA,oBAAoB,CAACC,IAAD,EAAO;AACvB,UAAMC,YAAY,GAAGxB,MAAM,CAACuB,IAAD,CAA3B;;AACA,UAAME,KAAK,GAAGD,YAAY,GAAGD,IAAH,GAAU,IAAIV,IAAJ,EAApC;;AAEA,WAAO;AACHE,MAAAA,OAAO,EAAES,YAAY,GAAGD,IAAH,GAAU,IAD5B;AAEHP,MAAAA,KAAK,EAAE,CAACS,KAAK,CAACN,QAAN,EAAD,GAAoB,CAFxB;AAGHF,MAAAA,IAAI,EAAEQ,KAAK,CAACJ,WAAN;AAHH,KAAP;AAKH;;AAEDV,EAAAA,oBAAoB,GAAG;AACnB,WAAO,KAAKW,oBAAL,CAA0B,KAAKI,KAAL,CAAWH,IAArC,CAAP;AACH;;AAUDI,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,MAAD,CAAQ,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,kBAAL,EADL,eAGI,oBAAC,MAAD,CAAQ,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,MAAM,CAACC,IAAP,CAAYxB,SAAZ,EAAuByB,GAAvB,CAA2B,KAAKC,cAAhC,CADL,CADJ,eAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlB,gBAAL,GAAwBiB,GAAxB,CAA4B,KAAKE,kBAAjC,CADL,CALJ,CAHJ,CADJ;AAeH;;AA1C4B;;AA6CjCzB,QAAQ,CAAC0B,SAAT,GAAqB;AACjBX,EAAAA,IAAI,EAAEzB,SAAS,CAACqC,UAAV,CAAqBtB,IAArB,CADW;AAEjBuB,EAAAA,aAAa,EAAEtC,SAAS,CAACuC;AAFR,CAArB;AAKA,eAAe7B,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Calendar.scss';\nimport calendar, {\n    isDate,\n    isSameDay,\n    isSameMonth,\n    getDateISO,\n    getNextMonth,\n    getPreviousMonth,\n    WEEK_DAYS,\n    CALENDAR_MONTHS,\n} from './dates';\n\nclass Calendar extends Component {\n    state = { ...this.resolveStateFromProp(), today: new Date() };\n\n    resolveStateFromDate(date) {\n        const isDateObject = isDate(date);\n        const _date = isDateObject ? date : new Date();\n\n        return {\n            current: isDateObject ? date : null,\n            month: +_date.getMonth() + 1,\n            year: _date.getFullYear(),\n        };\n    }\n\n    resolveStateFromProp() {\n        return this.resolveStateFromDate(this.props.date);\n    }\n\n    getCalendarDates = () => {\n        const { current, month, year } = this.state;\n        const calendarMonth = month || +current.getMonth() + 1;\n        const calendarYear = year || current.getFullYear();\n\n        return calendar(calendarMonth, calendarYear);\n    };\n\n    render() {\n        return (\n            <Styled.CalendarContainer>\n                {this.renderMonthAndYear()}\n\n                <Styled.CalendarGrid>\n                    <Fragment>\n                        {Object.keys(WEEK_DAYS).map(this.renderDayLabel)}\n                    </Fragment>\n\n                    <Fragment>\n                        {this.getCalendarDates().map(this.renderCalendarDate)}\n                    </Fragment>\n                </Styled.CalendarGrid>\n            </Styled.CalendarContainer>\n        );\n    }\n}\n\nCalendar.propTypes = {\n    date: PropTypes.instanceOf(Date),\n    onDateChanged: PropTypes.func,\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}