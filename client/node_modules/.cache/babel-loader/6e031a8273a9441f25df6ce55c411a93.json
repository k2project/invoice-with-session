{"ast":null,"code":"import { getInputValueByLabel } from '../../../components/form/utils/customFormQueries';\nimport { date_YYYY_MM, date_DD_MM_YYYY } from '../../../components/calendar/dates';\nimport { v4 as uuidv4 } from 'uuid';\nexport const setNewInvoice = (profile, company) => {\n  //invoice #\n  let company_abbr = getInputValueByLabel(company.details, 'Name').split(' ');\n\n  if (company_abbr.length > 1 && company_abbr[1]) {\n    company_abbr = company_abbr.map(el => el[0].toUpperCase()).join('');\n  } else {\n    company_abbr = company_abbr[0].slice(0, 3).toUpperCase();\n  }\n\n  let invoices_num = '1';\n  if (company.invoices) invoices_num = String(company.invoices.length + 1);\n\n  while (invoices_num.length < 5) {\n    invoices_num = '0' + invoices_num;\n  }\n\n  let saved_as = company_abbr + '-';\n  saved_as += date_YYYY_MM(new Date()) + '-';\n  saved_as += invoices_num; //generate due date in 14 days\n\n  const TWO_WEEKS = 1.21e9;\n  let due_date = date_DD_MM_YYYY(new Date().getTime() + TWO_WEEKS); //a new invoice\n\n  return {\n    _id: uuidv4(),\n    created_at: new Date(),\n    saved_as,\n    issue_date: date_DD_MM_YYYY(new Date()),\n    due_date,\n    bg_color: localStorage.invoice_bg || 'blue',\n    text_color: localStorage.invoice_txt || 'white',\n    profile: JSON.parse(JSON.stringify(profile.details)),\n    company: JSON.parse(JSON.stringify(company.details)),\n    tasks: [],\n    discount: 0,\n    tax: 0,\n    fees: 0,\n    notes: 'Thank you for your business.',\n    currency: ''\n  };\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/companyInvoice/invoiceFun.js"],"names":["getInputValueByLabel","date_YYYY_MM","date_DD_MM_YYYY","v4","uuidv4","setNewInvoice","profile","company","company_abbr","details","split","length","map","el","toUpperCase","join","slice","invoices_num","invoices","String","saved_as","Date","TWO_WEEKS","due_date","getTime","_id","created_at","issue_date","bg_color","localStorage","invoice_bg","text_color","invoice_txt","JSON","parse","stringify","tasks","discount","tax","fees","notes","currency"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,kDAArC;AACA,SACIC,YADJ,EAEIC,eAFJ,QAGO,oCAHP;AAIA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAC/C;AACA,MAAIC,YAAY,GAAGR,oBAAoB,CAACO,OAAO,CAACE,OAAT,EAAkB,MAAlB,CAApB,CAA8CC,KAA9C,CAAoD,GAApD,CAAnB;;AACA,MAAIF,YAAY,CAACG,MAAb,GAAsB,CAAtB,IAA2BH,YAAY,CAAC,CAAD,CAA3C,EAAgD;AAC5CA,IAAAA,YAAY,GAAGA,YAAY,CAACI,GAAb,CAAkBC,EAAD,IAAQA,EAAE,CAAC,CAAD,CAAF,CAAMC,WAAN,EAAzB,EAA8CC,IAA9C,CAAmD,EAAnD,CAAf;AACH,GAFD,MAEO;AACHP,IAAAA,YAAY,GAAGA,YAAY,CAAC,CAAD,CAAZ,CAAgBQ,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,EAA4BF,WAA5B,EAAf;AACH;;AACD,MAAIG,YAAY,GAAG,GAAnB;AACA,MAAIV,OAAO,CAACW,QAAZ,EAAsBD,YAAY,GAAGE,MAAM,CAACZ,OAAO,CAACW,QAAR,CAAiBP,MAAjB,GAA0B,CAA3B,CAArB;;AACtB,SAAOM,YAAY,CAACN,MAAb,GAAsB,CAA7B,EAAgC;AAC5BM,IAAAA,YAAY,GAAG,MAAMA,YAArB;AACH;;AACD,MAAIG,QAAQ,GAAGZ,YAAY,GAAG,GAA9B;AACAY,EAAAA,QAAQ,IAAInB,YAAY,CAAC,IAAIoB,IAAJ,EAAD,CAAZ,GAA2B,GAAvC;AACAD,EAAAA,QAAQ,IAAIH,YAAZ,CAf+C,CAgB/C;;AACA,QAAMK,SAAS,GAAG,MAAlB;AACA,MAAIC,QAAQ,GAAGrB,eAAe,CAAC,IAAImB,IAAJ,GAAWG,OAAX,KAAuBF,SAAxB,CAA9B,CAlB+C,CAmB/C;;AACA,SAAO;AACHG,IAAAA,GAAG,EAAErB,MAAM,EADR;AAEHsB,IAAAA,UAAU,EAAE,IAAIL,IAAJ,EAFT;AAGHD,IAAAA,QAHG;AAIHO,IAAAA,UAAU,EAAEzB,eAAe,CAAC,IAAImB,IAAJ,EAAD,CAJxB;AAKHE,IAAAA,QALG;AAMHK,IAAAA,QAAQ,EAAEC,YAAY,CAACC,UAAb,IAA2B,MANlC;AAOHC,IAAAA,UAAU,EAAEF,YAAY,CAACG,WAAb,IAA4B,OAPrC;AAQH1B,IAAAA,OAAO,EAAE2B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe7B,OAAO,CAACG,OAAvB,CAAX,CARN;AASHF,IAAAA,OAAO,EAAE0B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe5B,OAAO,CAACE,OAAvB,CAAX,CATN;AAUH2B,IAAAA,KAAK,EAAE,EAVJ;AAWHC,IAAAA,QAAQ,EAAE,CAXP;AAYHC,IAAAA,GAAG,EAAE,CAZF;AAaHC,IAAAA,IAAI,EAAE,CAbH;AAcHC,IAAAA,KAAK,EAAE,8BAdJ;AAeHC,IAAAA,QAAQ,EAAE;AAfP,GAAP;AAiBH,CArCM","sourcesContent":["import { getInputValueByLabel } from '../../../components/form/utils/customFormQueries';\nimport {\n    date_YYYY_MM,\n    date_DD_MM_YYYY,\n} from '../../../components/calendar/dates';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const setNewInvoice = (profile, company) => {\n    //invoice #\n    let company_abbr = getInputValueByLabel(company.details, 'Name').split(' ');\n    if (company_abbr.length > 1 && company_abbr[1]) {\n        company_abbr = company_abbr.map((el) => el[0].toUpperCase()).join('');\n    } else {\n        company_abbr = company_abbr[0].slice(0, 3).toUpperCase();\n    }\n    let invoices_num = '1';\n    if (company.invoices) invoices_num = String(company.invoices.length + 1);\n    while (invoices_num.length < 5) {\n        invoices_num = '0' + invoices_num;\n    }\n    let saved_as = company_abbr + '-';\n    saved_as += date_YYYY_MM(new Date()) + '-';\n    saved_as += invoices_num;\n    //generate due date in 14 days\n    const TWO_WEEKS = 1.21e9;\n    let due_date = date_DD_MM_YYYY(new Date().getTime() + TWO_WEEKS);\n    //a new invoice\n    return {\n        _id: uuidv4(),\n        created_at: new Date(),\n        saved_as,\n        issue_date: date_DD_MM_YYYY(new Date()),\n        due_date,\n        bg_color: localStorage.invoice_bg || 'blue',\n        text_color: localStorage.invoice_txt || 'white',\n        profile: JSON.parse(JSON.stringify(profile.details)),\n        company: JSON.parse(JSON.stringify(company.details)),\n        tasks: [],\n        discount: 0,\n        tax: 0,\n        fees: 0,\n        notes: 'Thank you for your business.',\n        currency: '',\n    };\n};\n"]},"metadata":{},"sourceType":"module"}