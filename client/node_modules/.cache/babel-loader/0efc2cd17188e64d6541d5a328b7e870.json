{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/forms/TaskForm.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormInput from '../components/FormInput';\nimport FormErrorsDisplay from '../components/FormErrorsDisplay';\nimport { formErrorsStyling } from '../utils/formFuns';\nimport { validateStringToQty, validateStringToCurrency, validateStringToPercentage } from '../utils/validations';\nexport default function TaskForm({\n  companyID,\n  updateTasksArr,\n  taskID\n}) {\n  const [formData, setFormData] = useState({\n    description: '',\n    qty: 'N/A',\n    rate: 'N/A',\n    tax: 'N/A',\n    errors: []\n  });\n\n  const handleAdd = async e => {\n    e.preventDefault();\n    let {\n      description,\n      qty,\n      rate,\n      tax\n    } = formData;\n    const strValues = ['free', 'n/a'];\n    const errors = [];\n    description = description.trim();\n\n    if (!description) {\n      const error = {\n        param: 'description',\n        msg: 'Please describe the task.'\n      };\n      errors.push(error);\n    } //validate qty input\n\n\n    qty = qty.trim();\n\n    if (!strValues.includes(qty.toLocaleLowerCase()) && !validateStringToQty(qty)) {\n      const error = {\n        param: 'qty',\n        msg: 'Please enter Qty value in one of the following formats: 1,000.50, 1 , 3 items, FREE or N/A.'\n      };\n      errors.push(error);\n    } //validate rate input\n\n\n    rate = rate.trim();\n    const rateObj = validateStringToCurrency(rate);\n\n    if (!strValues.includes(rate.toLocaleLowerCase()) && !rateObj) {\n      const error = {\n        param: 'rate',\n        msg: 'Please enter Rate value in one of the following formats: 1,000 PLN, Â£ 10.50 , FREE or N/A.'\n      };\n      errors.push(error);\n    } else {\n      if (rateObj) rate = rateObj.currency + rateObj.numValue;\n    } //validate tax input\n\n\n    tax = tax.trim();\n    const taxValue = validateStringToPercentage(tax);\n\n    if (!strValues.includes(tax.toLocaleLowerCase()) && !taxValue) {\n      const error = {\n        param: 'tax',\n        msg: 'Please enter the Tax value in one of the following formats: 10%, 1-100 , FREE or N/A.'\n      };\n      errors.push(error);\n    } else {\n      if (taxValue) tax = tax + '%';\n    } //calculate gross and net amount\n\n\n    let amount;\n\n    if (rateObj) {\n      amount = {\n        currency: rateObj.currency,\n        amountGross: rateObj.numValue,\n        amountNet: taxValue === 0 ? rateObj.numValue : rateObj.numValue * taxValue / 100\n      };\n    } else {\n      amount = rate;\n    }\n\n    if (errors.length > 0) {\n      setFormData({ ...formData,\n        errors\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }; //create task\n\n      const task = {\n        _id: taskID || uuidv4(),\n        description,\n        qty: qty || 'N/A',\n        rate: rate || 'N/A',\n        tax: tax || '0%',\n        amount,\n        addToInvoice: true,\n        createdAt: new Date()\n      };\n      await axios.post(`/api/companies/tasks/${companyID}`, JSON.stringify(task), config); //update company tasks\n\n      updateTasksArr(); //reset state\n\n      setFormData({\n        description: '',\n        qty: '',\n        rate: '',\n        amount: '',\n        errors: []\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    formErrorsStyling(formData.errors);\n  }, [formData.errors]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Add a new task to bill for. \", companyID), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, \" *Required\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-3-cls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"col-span-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    name: \"description\",\n    size: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"Description*\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    name: \"qty\",\n    size: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, \"Qty* (eg. 1, 2.5hr, N/A, Free)\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, ' ', /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    name: \"rate\",\n    size: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, \"Rate* (eg. \\xA311, N/A, Free)\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    form: {\n      formData,\n      setFormData\n    },\n    name: \"tax\",\n    size: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"Tax* (eg. 10%, 10)\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--info\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, \"Add Item\")), formData.errors.length > 0 && /*#__PURE__*/React.createElement(FormErrorsDisplay, {\n    errors: formData.errors,\n    label: \"Add custom field form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/forms/TaskForm.js"],"names":["React","useState","useEffect","Fragment","axios","v4","uuidv4","FormInput","FormErrorsDisplay","formErrorsStyling","validateStringToQty","validateStringToCurrency","validateStringToPercentage","TaskForm","companyID","updateTasksArr","taskID","formData","setFormData","description","qty","rate","tax","errors","handleAdd","e","preventDefault","strValues","trim","error","param","msg","push","includes","toLocaleLowerCase","rateObj","currency","numValue","taxValue","amount","amountGross","amountNet","length","config","headers","task","_id","addToInvoice","createdAt","Date","post","JSON","stringify","err","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormInput from '../components/FormInput';\nimport FormErrorsDisplay from '../components/FormErrorsDisplay';\nimport { formErrorsStyling } from '../utils/formFuns';\nimport {\n    validateStringToQty,\n    validateStringToCurrency,\n    validateStringToPercentage,\n} from '../utils/validations';\n\nexport default function TaskForm({ companyID, updateTasksArr, taskID }) {\n    const [formData, setFormData] = useState({\n        description: '',\n        qty: 'N/A',\n        rate: 'N/A',\n        tax: 'N/A',\n        errors: [],\n    });\n    const handleAdd = async (e) => {\n        e.preventDefault();\n        let { description, qty, rate, tax } = formData;\n        const strValues = ['free', 'n/a'];\n        const errors = [];\n\n        description = description.trim();\n        if (!description) {\n            const error = {\n                param: 'description',\n                msg: 'Please describe the task.',\n            };\n            errors.push(error);\n        }\n        //validate qty input\n        qty = qty.trim();\n        if (\n            !strValues.includes(qty.toLocaleLowerCase()) &&\n            !validateStringToQty(qty)\n        ) {\n            const error = {\n                param: 'qty',\n                msg:\n                    'Please enter Qty value in one of the following formats: 1,000.50, 1 , 3 items, FREE or N/A.',\n            };\n            errors.push(error);\n        }\n        //validate rate input\n        rate = rate.trim();\n        const rateObj = validateStringToCurrency(rate);\n        if (!strValues.includes(rate.toLocaleLowerCase()) && !rateObj) {\n            const error = {\n                param: 'rate',\n                msg:\n                    'Please enter Rate value in one of the following formats: 1,000 PLN, Â£ 10.50 , FREE or N/A.',\n            };\n            errors.push(error);\n        } else {\n            if (rateObj) rate = rateObj.currency + rateObj.numValue;\n        }\n        //validate tax input\n        tax = tax.trim();\n        const taxValue = validateStringToPercentage(tax);\n        if (!strValues.includes(tax.toLocaleLowerCase()) && !taxValue) {\n            const error = {\n                param: 'tax',\n                msg:\n                    'Please enter the Tax value in one of the following formats: 10%, 1-100 , FREE or N/A.',\n            };\n            errors.push(error);\n        } else {\n            if (taxValue) tax = tax + '%';\n        }\n        //calculate gross and net amount\n        let amount;\n        if (rateObj) {\n            amount = {\n                currency: rateObj.currency,\n                amountGross: rateObj.numValue,\n                amountNet:\n                    taxValue === 0\n                        ? rateObj.numValue\n                        : (rateObj.numValue * taxValue) / 100,\n            };\n        } else {\n            amount = rate;\n        }\n\n        if (errors.length > 0) {\n            setFormData({\n                ...formData,\n                errors,\n            });\n            return;\n        }\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            //create task\n            const task = {\n                _id: taskID || uuidv4(),\n                description,\n                qty: qty || 'N/A',\n                rate: rate || 'N/A',\n                tax: tax || '0%',\n                amount,\n                addToInvoice: true,\n                createdAt: new Date(),\n            };\n            await axios.post(\n                `/api/companies/tasks/${companyID}`,\n                JSON.stringify(task),\n                config\n            );\n            //update company tasks\n            updateTasksArr();\n            //reset state\n            setFormData({\n                description: '',\n                qty: '',\n                rate: '',\n                amount: '',\n                errors: [],\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    useEffect(() => {\n        formErrorsStyling(formData.errors);\n    }, [formData.errors]);\n    return (\n        <form className='task-form' onSubmit={handleAdd}>\n            <fieldset>\n                <legend>\n                    <b>Add a new task to bill for. {companyID}</b>\n                    <p>\n                        <small> *Required</small>\n                    </p>\n                </legend>\n                <div className='grid-3-cls'>\n                    <span className='col-span-3'>\n                        <FormInput\n                            form={{ formData, setFormData }}\n                            name='description'\n                            size='auto'\n                        >\n                            Description*\n                        </FormInput>\n                    </span>\n                    <span>\n                        <FormInput\n                            form={{ formData, setFormData }}\n                            name='qty'\n                            size='auto'\n                        >\n                            Qty* (eg. 1, 2.5hr, N/A, Free)\n                        </FormInput>\n                    </span>\n                    <span>\n                        {' '}\n                        <FormInput\n                            form={{ formData, setFormData }}\n                            name='rate'\n                            size='auto'\n                        >\n                            Rate* (eg. Â£11, N/A, Free)\n                        </FormInput>\n                    </span>\n                    <span>\n                        <FormInput\n                            form={{ formData, setFormData }}\n                            name='tax'\n                            size='auto'\n                        >\n                            Tax* (eg. 10%, 10)\n                        </FormInput>\n                    </span>\n                </div>\n                <button\n                    className='btn btn--info'\n                    onMouseDown={(e) => e.preventDefault()}\n                    onClick={handleAdd}\n                >\n                    Add Item\n                </button>\n            </fieldset>\n            {formData.errors.length > 0 && (\n                <FormErrorsDisplay\n                    errors={formData.errors}\n                    label='Add custom field form'\n                />\n            )}\n        </form>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}