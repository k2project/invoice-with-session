{"ast":null,"code":"export const dateUX = date => {\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return date.toLocaleDateString(undefined, options);\n};\n\nconst isToday = d => {\n  const today = new Date();\n  return d.getDate() == today.getDate() && d.getMonth() == today.getMonth() && d.getFullYear() == today.getFullYear();\n};\n\nconst getTime = d => {\n  return d.getHoures() + ':' + d.getMInutes();\n};\n\nexport const compareDates = date => {\n  const t = getTime(date);\n  if (isToday(date)) return 'today at' + t;\n  return dateUX(date) + 'at ' + t;\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/utils/dates.js"],"names":["dateUX","date","options","weekday","year","month","day","toLocaleDateString","undefined","isToday","d","today","Date","getDate","getMonth","getFullYear","getTime","getHoures","getMInutes","compareDates","t"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAIC,IAAD,IAAU;AAC5B,QAAMC,OAAO,GAAG;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,IAAI,EAAE,SAFM;AAGZC,IAAAA,KAAK,EAAE,MAHK;AAIZC,IAAAA,GAAG,EAAE;AAJO,GAAhB;AAMA,SAAOL,IAAI,CAACM,kBAAL,CAAwBC,SAAxB,EAAmCN,OAAnC,CAAP;AACH,CARM;;AASP,MAAMO,OAAO,GAAIC,CAAD,IAAO;AACnB,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,SACIF,CAAC,CAACG,OAAF,MAAeF,KAAK,CAACE,OAAN,EAAf,IACAH,CAAC,CAACI,QAAF,MAAgBH,KAAK,CAACG,QAAN,EADhB,IAEAJ,CAAC,CAACK,WAAF,MAAmBJ,KAAK,CAACI,WAAN,EAHvB;AAKH,CAPD;;AAQA,MAAMC,OAAO,GAAIN,CAAD,IAAO;AACnB,SAAOA,CAAC,CAACO,SAAF,KAAgB,GAAhB,GAAsBP,CAAC,CAACQ,UAAF,EAA7B;AACH,CAFD;;AAGA,OAAO,MAAMC,YAAY,GAAIlB,IAAD,IAAU;AAClC,QAAMmB,CAAC,GAAGJ,OAAO,CAACf,IAAD,CAAjB;AACA,MAAIQ,OAAO,CAACR,IAAD,CAAX,EAAmB,OAAO,aAAamB,CAApB;AACnB,SAAOpB,MAAM,CAACC,IAAD,CAAN,GAAe,KAAf,GAAuBmB,CAA9B;AACH,CAJM","sourcesContent":["export const dateUX = (date) => {\n    const options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    };\n    return date.toLocaleDateString(undefined, options);\n};\nconst isToday = (d) => {\n    const today = new Date();\n    return (\n        d.getDate() == today.getDate() &&\n        d.getMonth() == today.getMonth() &&\n        d.getFullYear() == today.getFullYear()\n    );\n};\nconst getTime = (d) => {\n    return d.getHoures() + ':' + d.getMInutes();\n};\nexport const compareDates = (date) => {\n    const t = getTime(date);\n    if (isToday(date)) return 'today at' + t;\n    return dateUX(date) + 'at ' + t;\n};\n"]},"metadata":{},"sourceType":"module"}