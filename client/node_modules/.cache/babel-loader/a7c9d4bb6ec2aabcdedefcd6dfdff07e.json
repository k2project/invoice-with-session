{"ast":null,"code":"\"use strict\";\n\nconst {\n  mixin\n} = require(\"../../utils\");\n\nconst SVGNumber = require(\"../generated/SVGNumber\");\n\nconst SVGGraphicsElementImpl = require(\"./SVGGraphicsElement-impl\").implementation;\n\nconst WindowEventHandlersImpl = require(\"./WindowEventHandlers-impl\").implementation;\n\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\n\nconst {\n  ELEMENT_NODE\n} = require(\"../node-type\");\n\nclass SVGSVGElementImpl extends SVGGraphicsElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this._proxyWindowEventsToWindow();\n  }\n\n  createSVGNumber() {\n    return SVGNumber.createImpl([], {});\n  }\n\n  getElementById(elementId) {\n    // TODO: optimize with _ids caching trick; see Document class.\n    for (const node of domSymbolTree.treeIterator(this)) {\n      if (node.nodeType === ELEMENT_NODE && node.getAttribute(\"id\") === elementId) {\n        return node;\n      }\n    }\n\n    return null;\n  }\n\n  suspendRedraw() {\n    return 1;\n  }\n\n  unsuspendRedraw() {}\n\n  unsuspendRedrawAll() {}\n\n  forceRedraw() {}\n\n}\n\nmixin(SVGSVGElementImpl.prototype, WindowEventHandlersImpl.prototype);\nmodule.exports = {\n  implementation: SVGSVGElementImpl\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/nodes/SVGSVGElement-impl.js"],"names":["mixin","require","SVGNumber","SVGGraphicsElementImpl","implementation","WindowEventHandlersImpl","domSymbolTree","ELEMENT_NODE","SVGSVGElementImpl","constructor","args","privateData","_proxyWindowEventsToWindow","createSVGNumber","createImpl","getElementById","elementId","node","treeIterator","nodeType","getAttribute","suspendRedraw","unsuspendRedraw","unsuspendRedrawAll","forceRedraw","prototype","module","exports"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAYC,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,wBAAD,CAAzB;;AACA,MAAME,sBAAsB,GAAGF,OAAO,CAAC,2BAAD,CAAP,CAAqCG,cAApE;;AACA,MAAMC,uBAAuB,GAAGJ,OAAO,CAAC,4BAAD,CAAP,CAAsCG,cAAtE;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAoBL,OAAO,CAAC,+BAAD,CAAjC;;AACA,MAAM;AAAEM,EAAAA;AAAF,IAAmBN,OAAO,CAAC,cAAD,CAAhC;;AAEA,MAAMO,iBAAN,SAAgCL,sBAAhC,CAAuD;AACrDM,EAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,EAAoB;AAC7B,UAAMD,IAAN,EAAYC,WAAZ;;AACA,SAAKC,0BAAL;AACD;;AAEDC,EAAAA,eAAe,GAAG;AAChB,WAAOX,SAAS,CAACY,UAAV,CAAqB,EAArB,EAAyB,EAAzB,CAAP;AACD;;AAEDC,EAAAA,cAAc,CAACC,SAAD,EAAY;AACxB;AACA,SAAK,MAAMC,IAAX,IAAmBX,aAAa,CAACY,YAAd,CAA2B,IAA3B,CAAnB,EAAqD;AACnD,UAAID,IAAI,CAACE,QAAL,KAAkBZ,YAAlB,IAAkCU,IAAI,CAACG,YAAL,CAAkB,IAAlB,MAA4BJ,SAAlE,EAA6E;AAC3E,eAAOC,IAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD;;AAEDI,EAAAA,aAAa,GAAG;AACd,WAAO,CAAP;AACD;;AACDC,EAAAA,eAAe,GAAG,CAAE;;AACpBC,EAAAA,kBAAkB,GAAG,CAAE;;AACvBC,EAAAA,WAAW,GAAG,CAAE;;AAzBqC;;AA4BvDxB,KAAK,CAACQ,iBAAiB,CAACiB,SAAnB,EAA8BpB,uBAAuB,CAACoB,SAAtD,CAAL;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfvB,EAAAA,cAAc,EAAEI;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst { mixin } = require(\"../../utils\");\nconst SVGNumber = require(\"../generated/SVGNumber\");\nconst SVGGraphicsElementImpl = require(\"./SVGGraphicsElement-impl\").implementation;\nconst WindowEventHandlersImpl = require(\"./WindowEventHandlers-impl\").implementation;\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst { ELEMENT_NODE } = require(\"../node-type\");\n\nclass SVGSVGElementImpl extends SVGGraphicsElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._proxyWindowEventsToWindow();\n  }\n\n  createSVGNumber() {\n    return SVGNumber.createImpl([], {});\n  }\n\n  getElementById(elementId) {\n    // TODO: optimize with _ids caching trick; see Document class.\n    for (const node of domSymbolTree.treeIterator(this)) {\n      if (node.nodeType === ELEMENT_NODE && node.getAttribute(\"id\") === elementId) {\n        return node;\n      }\n    }\n    return null;\n  }\n\n  suspendRedraw() {\n    return 1;\n  }\n  unsuspendRedraw() {}\n  unsuspendRedrawAll() {}\n  forceRedraw() {}\n}\n\nmixin(SVGSVGElementImpl.prototype, WindowEventHandlersImpl.prototype);\n\nmodule.exports = {\n  implementation: SVGSVGElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}