{"ast":null,"code":"//Wed: May 8, 2020\nexport const dateUX = date => {\n  const options = {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  date = new Date(date).toLocaleDateString('en-US', options);\n  return date.slice(0, 3) + ':' + date.slice(4);\n}; //format:DD/MM/YYYY\n\nexport const date_DD_MM_YYYY = date => {\n  date = new Date(date);\n  let month = String(date.getMonth() + 1);\n  month = month.length > 1 ? month : '0' + month;\n  let day = String(date.getDate());\n  day = day.length > 1 ? day : '0' + day;\n  let year = date.getFullYear();\n  return day + '/' + month + '/' + year; // return date.slice(0, 11).replace(/-/g, '/');\n}; //format:YYYY-MM\n\nexport const date_YYYY_MM = date => {\n  date = new Date(date);\n  let month = String(date.getMonth() + 1);\n  month = month.length > 1 ? month : '0' + month;\n  return date.getFullYear() + '-' + month;\n};\n\nconst isToday = d => {\n  d = new Date(d);\n  const today = new Date();\n  return d.getDate() === today.getDate() && d.getMonth() === today.getMonth() && d.getFullYear() === today.getFullYear();\n};\n\nconst getTime = d => {\n  d = new Date(d);\n  let hr = d.getHours();\n  let min = d.getMinutes();\n\n  if (min < 10) {\n    min = '0' + min;\n  }\n\n  var ampm = 'am';\n\n  if (hr > 12) {\n    hr -= 12;\n    ampm = 'pm';\n  }\n\n  return hr + ':' + min + ampm;\n};\n\nconst msPassedToday = () => {\n  const t = new Date();\n  return t.getMilliseconds() + t.getSeconds() * 1000 + t.getMinutes() * 6e4 + t.getHours() * 3.6e6;\n};\n\nconst wasYesterday = date => {\n  const msInADay = 8.64e7;\n  const msToday = +msPassedToday();\n  date = new Date(date).getTime();\n  const today = new Date().getTime();\n  return date > today - msToday - msInADay && date < today - msToday;\n};\n\nexport const getDateAndTimeUX = date => {\n  const t = getTime(date);\n  if (isToday(date)) return ' today at ' + t;\n  if (wasYesterday(date)) return ' yesterday at ' + t;\n  return ' on ' + dateUX(date) + ' at ' + t;\n}; // (int) The current year\n\nexport const THIS_YEAR = +new Date().getFullYear(); // (int) The current month starting from 1 - 12\n// 1 => January, 12 => December\n\nexport const THIS_MONTH = +new Date().getMonth() + 1; // Week days names and shortnames\n\nexport const WEEK_DAYS = {\n  Sunday: 'Sun',\n  Monday: 'Mon',\n  Tuesday: 'Tue',\n  Wednesday: 'Wed',\n  Thursday: 'Thu',\n  Friday: 'Fri',\n  Saturday: 'Sat'\n}; // Calendar months names and shortnames\n\nexport const CALENDAR_MONTHS = {\n  January: 'Jan',\n  February: 'Feb',\n  March: 'Mar',\n  April: 'Apr',\n  May: 'May',\n  June: 'Jun',\n  July: 'Jul',\n  August: 'Aug',\n  September: 'Sep',\n  October: 'Oct',\n  November: 'Nov',\n  December: 'Dec'\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/utils/dates.js"],"names":["dateUX","date","options","weekday","year","month","day","Date","toLocaleDateString","slice","date_DD_MM_YYYY","String","getMonth","length","getDate","getFullYear","date_YYYY_MM","isToday","d","today","getTime","hr","getHours","min","getMinutes","ampm","msPassedToday","t","getMilliseconds","getSeconds","wasYesterday","msInADay","msToday","getDateAndTimeUX","THIS_YEAR","THIS_MONTH","WEEK_DAYS","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","CALENDAR_MONTHS","January","February","March","April","May","June","July","August","September","October","November","December"],"mappings":"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","sourcesContent":["//Wed: May 8, 2020\nexport const dateUX = (date) => {\n    const options = {\n        weekday: 'short',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    };\n    date = new Date(date).toLocaleDateString('en-US', options);\n    return date.slice(0, 3) + ':' + date.slice(4);\n};\n//format:DD/MM/YYYY\nexport const date_DD_MM_YYYY = (date) => {\n    date = new Date(date);\n    let month = String(date.getMonth() + 1);\n    month = month.length > 1 ? month : '0' + month;\n    let day = String(date.getDate());\n    day = day.length > 1 ? day : '0' + day;\n    let year = date.getFullYear();\n\n    return day + '/' + month + '/' + year;\n    // return date.slice(0, 11).replace(/-/g, '/');\n};\n//format:YYYY-MM\nexport const date_YYYY_MM = (date) => {\n    date = new Date(date);\n    let month = String(date.getMonth() + 1);\n    month = month.length > 1 ? month : '0' + month;\n    return date.getFullYear() + '-' + month;\n};\nconst isToday = (d) => {\n    d = new Date(d);\n    const today = new Date();\n    return (\n        d.getDate() === today.getDate() &&\n        d.getMonth() === today.getMonth() &&\n        d.getFullYear() === today.getFullYear()\n    );\n};\nconst getTime = (d) => {\n    d = new Date(d);\n    let hr = d.getHours();\n    let min = d.getMinutes();\n    if (min < 10) {\n        min = '0' + min;\n    }\n    var ampm = 'am';\n    if (hr > 12) {\n        hr -= 12;\n        ampm = 'pm';\n    }\n    return hr + ':' + min + ampm;\n};\nconst msPassedToday = () => {\n    const t = new Date();\n    return (\n        t.getMilliseconds() +\n        t.getSeconds() * 1000 +\n        t.getMinutes() * 6e4 +\n        t.getHours() * 3.6e6\n    );\n};\nconst wasYesterday = (date) => {\n    const msInADay = 8.64e7;\n    const msToday = +msPassedToday();\n    date = new Date(date).getTime();\n    const today = new Date().getTime();\n    return date > today - msToday - msInADay && date < today - msToday;\n};\nexport const getDateAndTimeUX = (date) => {\n    const t = getTime(date);\n    if (isToday(date)) return ' today at ' + t;\n    if (wasYesterday(date)) return ' yesterday at ' + t;\n    return ' on ' + dateUX(date) + ' at ' + t;\n};\n// (int) The current year\nexport const THIS_YEAR = +new Date().getFullYear();\n\n// (int) The current month starting from 1 - 12\n// 1 => January, 12 => December\nexport const THIS_MONTH = +new Date().getMonth() + 1;\n\n// Week days names and shortnames\nexport const WEEK_DAYS = {\n    Sunday: 'Sun',\n    Monday: 'Mon',\n    Tuesday: 'Tue',\n    Wednesday: 'Wed',\n    Thursday: 'Thu',\n    Friday: 'Fri',\n    Saturday: 'Sat',\n};\n\n// Calendar months names and shortnames\nexport const CALENDAR_MONTHS = {\n    January: 'Jan',\n    February: 'Feb',\n    March: 'Mar',\n    April: 'Apr',\n    May: 'May',\n    June: 'Jun',\n    July: 'Jul',\n    August: 'Aug',\n    September: 'Sep',\n    October: 'Oct',\n    November: 'Nov',\n    December: 'Dec',\n};\n"]},"metadata":{},"sourceType":"module"}