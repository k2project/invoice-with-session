{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js\";\nimport React, { useEffect, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport { setProfileTab } from '../../redux/actions/session';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges';\n\nclass ProfileUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //deep copy of the redux state on component load\n      details: JSON.parse(JSON.stringify(props.profile.details))\n    };\n    this.handleChanges = this.handleChanges.bind(this);\n    this.updateInitStateToReduxState = this.updateInitStateToReduxState.bind(this);\n  }\n\n  handleChanges() {\n    alertUnsavedChanges(this.state.details, //initial state\n    this.props.profile.details, //redux updated state\n    this.props.setProfileTab, '/dashboard/profile', this.props.history);\n  }\n\n  updateInitStateToReduxState() {\n    this.setState({\n      details: this.props.profile.details\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener('beforeunload', this.handleChanges);\n  }\n\n  componentWillUnmount() {\n    this.handleChanges();\n    window.removeEventListener('beforeunload', this.handleChanges);\n  }\n\n  render() {\n    const formData = {\n      details: this.props.profile.details,\n      http: '/api/profile',\n      url: '/dashboard/profile',\n      cb: this.props.getProfile,\n      updateInitStateToReduxState: this.updateInitStateToReduxState,\n      //stops firing alertUnsavedChanges on submit\n      msg: 'Your profile has been updated successfully.'\n    };\n    return /*#__PURE__*/React.createElement(CustomBuiltForm, {\n      data: formData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    });\n  }\n\n} // const ProfileUpdate = ({\n//     profile: { details },\n//     getProfile,\n//     setProfileTab,\n//     setSessionUpdatesStatus,\n//     history,\n// }) => {\n//     const formData = {\n//         details,\n//         http: '/api/profile',\n//         url: '/dashboard/profile',\n//         cb: getProfile,\n//         msg: 'Your profile has been updated successfully.',\n//     };\n//     //handle unsaved changes\n//     useEffect(() => {\n//         const initialDetails = JSON.parse(JSON.stringify(details));\n//         return () => {\n//             alertUnsavedChanges(\n//                 initialDetails,\n//                 details,\n//                 setProfileTab,\n//                 setSessionUpdatesStatus,\n//                 '/dashboard/profile',\n//                 history\n//             );\n//         };\n//     }, []);\n//     return <CustomBuiltForm data={formData} />;\n// };\n\n\nProfileUpdate.propTypes = {\n  details: PropTypes.array,\n  getProfile: PropTypes.func,\n  setAlert: PropTypes.func,\n  setProfileTab: PropTypes.func,\n  setSessionUpdatesStatus: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nconst mapDispatchToProps = {\n  getProfile,\n  setProfileTab\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileUpdate));","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js"],"names":["React","useEffect","Component","withRouter","PropTypes","CustomBuiltForm","connect","getProfile","setProfileTab","alertUnsavedChanges","ProfileUpdate","constructor","props","state","details","JSON","parse","stringify","profile","handleChanges","bind","updateInitStateToReduxState","history","setState","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","formData","http","url","cb","msg","propTypes","array","func","setAlert","setSessionUpdatesStatus","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport { setProfileTab } from '../../redux/actions/session';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges';\n\nclass ProfileUpdate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //deep copy of the redux state on component load\n            details: JSON.parse(JSON.stringify(props.profile.details)),\n        };\n        this.handleChanges = this.handleChanges.bind(this);\n        this.updateInitStateToReduxState = this.updateInitStateToReduxState.bind(\n            this\n        );\n    }\n    handleChanges() {\n        alertUnsavedChanges(\n            this.state.details, //initial state\n            this.props.profile.details, //redux updated state\n            this.props.setProfileTab,\n            '/dashboard/profile',\n            this.props.history\n        );\n    }\n\n    updateInitStateToReduxState() {\n        this.setState({ details: this.props.profile.details });\n    }\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.handleChanges);\n    }\n    componentWillUnmount() {\n        this.handleChanges();\n        window.removeEventListener('beforeunload', this.handleChanges);\n    }\n    render() {\n        const formData = {\n            details: this.props.profile.details,\n            http: '/api/profile',\n            url: '/dashboard/profile',\n            cb: this.props.getProfile,\n            updateInitStateToReduxState: this.updateInitStateToReduxState, //stops firing alertUnsavedChanges on submit\n            msg: 'Your profile has been updated successfully.',\n        };\n        return <CustomBuiltForm data={formData} />;\n    }\n}\n// const ProfileUpdate = ({\n//     profile: { details },\n//     getProfile,\n//     setProfileTab,\n//     setSessionUpdatesStatus,\n//     history,\n// }) => {\n//     const formData = {\n//         details,\n//         http: '/api/profile',\n//         url: '/dashboard/profile',\n//         cb: getProfile,\n//         msg: 'Your profile has been updated successfully.',\n//     };\n//     //handle unsaved changes\n//     useEffect(() => {\n//         const initialDetails = JSON.parse(JSON.stringify(details));\n//         return () => {\n//             alertUnsavedChanges(\n//                 initialDetails,\n//                 details,\n//                 setProfileTab,\n//                 setSessionUpdatesStatus,\n//                 '/dashboard/profile',\n//                 history\n//             );\n//         };\n//     }, []);\n//     return <CustomBuiltForm data={formData} />;\n// };\n\nProfileUpdate.propTypes = {\n    details: PropTypes.array,\n    getProfile: PropTypes.func,\n    setAlert: PropTypes.func,\n    setProfileTab: PropTypes.func,\n    setSessionUpdatesStatus: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\nconst mapDispatchToProps = {\n    getProfile,\n    setProfileTab,\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ProfileUpdate));\n"]},"metadata":{},"sourceType":"module"}