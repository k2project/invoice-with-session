{"ast":null,"code":"\"use strict\";\n\nconst attributes = require(\"./attributes\");\n\nconst {\n  cloningSteps,\n  domSymbolTree\n} = require(\"./helpers/internal-constants\");\n\nconst NODE_TYPE = require(\"./node-type\");\n\nconst orderedSetParse = require(\"./helpers/ordered-set\").parse;\n\nconst {\n  asciiCaseInsensitiveMatch,\n  asciiLowercase\n} = require(\"./helpers/strings\");\n\nconst {\n  HTML_NS,\n  XMLNS_NS\n} = require(\"./helpers/namespaces\");\n\nconst HTMLCollection = require(\"./generated/HTMLCollection\");\n\nmodule.exports.clone = function (node, document, cloneChildren) {\n  if (document === undefined) {\n    document = node._ownerDocument;\n  }\n\n  let copy;\n\n  switch (node.nodeType) {\n    case NODE_TYPE.DOCUMENT_NODE:\n      // Can't use a simple Document.createImpl because of circular dependency issues :-/\n      copy = document.implementation.createDocument(null, \"\", null);\n      copy._encoding = node._encoding;\n      copy.contentType = node.contentType;\n      copy._URL = node._URL;\n      copy.origin = node.origin;\n      copy._parsingMode = node._parsingMode;\n      break;\n\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n      copy = document.implementation.createDocumentType(node.name, node.publicId, node.systemId);\n      break;\n\n    case NODE_TYPE.ELEMENT_NODE:\n      copy = document._createElementWithCorrectElementInterface(node._localName, node._namespaceURI);\n      copy._prefix = node._prefix;\n      attributes.copyAttributeList(node, copy);\n      break;\n\n    case NODE_TYPE.TEXT_NODE:\n      copy = document.createTextNode(node._data);\n      break;\n\n    case NODE_TYPE.CDATA_SECTION_NODE:\n      copy = document.createCDATASection(node._data);\n      break;\n\n    case NODE_TYPE.COMMENT_NODE:\n      copy = document.createComment(node._data);\n      break;\n\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n      copy = document.createProcessingInstruction(node.target, node._data);\n      break;\n\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n      copy = document.createDocumentFragment();\n      break;\n  }\n\n  if (node[cloningSteps]) {\n    node[cloningSteps](copy, node, document, cloneChildren);\n  }\n\n  if (cloneChildren) {\n    for (const child of domSymbolTree.childrenIterator(node)) {\n      const childCopy = module.exports.clone(child, document, true);\n      copy.appendChild(childCopy);\n    }\n  }\n\n  return copy;\n}; // For the following, memoization is not applied here since the memoized results are stored on `this`.\n\n\nmodule.exports.listOfElementsWithClassNames = (classNames, root) => {\n  // https://dom.spec.whatwg.org/#concept-getElementsByClassName\n  const classes = orderedSetParse(classNames);\n\n  if (classes.size === 0) {\n    return HTMLCollection.createImpl([], {\n      element: root,\n      query: () => []\n    });\n  }\n\n  return HTMLCollection.createImpl([], {\n    element: root,\n    query: () => {\n      const isQuirksMode = root._ownerDocument.compatMode === \"BackCompat\";\n      return domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          const {\n            classList\n          } = node;\n\n          if (isQuirksMode) {\n            for (const className of classes) {\n              if (!classList.tokenSet.some(cur => asciiCaseInsensitiveMatch(cur, className))) {\n                return false;\n              }\n            }\n          } else {\n            for (const className of classes) {\n              if (!classList.tokenSet.contains(className)) {\n                return false;\n              }\n            }\n          }\n\n          return true;\n        }\n\n      });\n    }\n  });\n};\n\nmodule.exports.listOfElementsWithQualifiedName = (qualifiedName, root) => {\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagname\n  if (qualifiedName === \"*\") {\n    return HTMLCollection.createImpl([], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root\n      })\n    });\n  }\n\n  if (root._ownerDocument._parsingMode === \"html\") {\n    const lowerQualifiedName = asciiLowercase(qualifiedName);\n    return HTMLCollection.createImpl([], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          if (node._namespaceURI === HTML_NS) {\n            return node._qualifiedName === lowerQualifiedName;\n          }\n\n          return node._qualifiedName === qualifiedName;\n        }\n\n      })\n    });\n  }\n\n  return HTMLCollection.createImpl([], {\n    element: root,\n    query: () => domSymbolTree.treeToArray(root, {\n      filter(node) {\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n          return false;\n        }\n\n        return node._qualifiedName === qualifiedName;\n      }\n\n    })\n  });\n};\n\nmodule.exports.listOfElementsWithNamespaceAndLocalName = (namespace, localName, root) => {\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagnamens\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  if (namespace === \"*\" && localName === \"*\") {\n    return HTMLCollection.createImpl([], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root\n      })\n    });\n  }\n\n  if (namespace === \"*\") {\n    return HTMLCollection.createImpl([], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          return node._localName === localName;\n        }\n\n      })\n    });\n  }\n\n  if (localName === \"*\") {\n    return HTMLCollection.createImpl([], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          return node._namespaceURI === namespace;\n        }\n\n      })\n    });\n  }\n\n  return HTMLCollection.createImpl([], {\n    element: root,\n    query: () => domSymbolTree.treeToArray(root, {\n      filter(node) {\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n          return false;\n        }\n\n        return node._localName === localName && node._namespaceURI === namespace;\n      }\n\n    })\n  });\n}; // https://dom.spec.whatwg.org/#converting-nodes-into-a-node\n// create a fragment (or just return a node for one item)\n\n\nexports.convertNodesIntoNode = (document, nodes) => {\n  if (nodes.length === 1) {\n    // note: I'd prefer to check instanceof Node rather than string\n    return typeof nodes[0] === \"string\" ? document.createTextNode(nodes[0]) : nodes[0];\n  }\n\n  const fragment = document.createDocumentFragment();\n\n  for (let i = 0; i < nodes.length; i++) {\n    fragment.appendChild(typeof nodes[i] === \"string\" ? document.createTextNode(nodes[i]) : nodes[i]);\n  }\n\n  return fragment;\n}; // https://dom.spec.whatwg.org/#locate-a-namespace-prefix\n\n\nexports.locateNamespacePrefix = (element, namespace) => {\n  if (element._namespaceURI === namespace && element._prefix !== null) {\n    return element._prefix;\n  }\n\n  for (const attribute of element._attributeList) {\n    if (attribute._namespacePrefix === \"xmlns\" && attribute._value === namespace) {\n      return attribute._localName;\n    }\n  }\n\n  if (element.parentElement !== null) {\n    return exports.locateNamespacePrefix(element.parentElement, namespace);\n  }\n\n  return null;\n}; // https://dom.spec.whatwg.org/#locate-a-namespace\n\n\nexports.locateNamespace = (node, prefix) => {\n  switch (node.nodeType) {\n    case NODE_TYPE.ELEMENT_NODE:\n      {\n        if (node._namespaceURI !== null && node._prefix === prefix) {\n          return node._namespaceURI;\n        }\n\n        if (prefix === null) {\n          for (const attribute of node._attributeList) {\n            if (attribute._namespace === XMLNS_NS && attribute._namespacePrefix === null && attribute._localName === \"xmlns\") {\n              return attribute._value !== \"\" ? attribute._value : null;\n            }\n          }\n        } else {\n          for (const attribute of node._attributeList) {\n            if (attribute._namespace === XMLNS_NS && attribute._namespacePrefix === \"xmlns\" && attribute._localName === prefix) {\n              return attribute._value !== \"\" ? attribute._value : null;\n            }\n          }\n        }\n\n        if (node.parentElement === null) {\n          return null;\n        }\n\n        return exports.locateNamespace(node.parentElement, prefix);\n      }\n\n    case NODE_TYPE.DOCUMENT_NODE:\n      {\n        if (node.documentElement === null) {\n          return null;\n        }\n\n        return exports.locateNamespace(node.documentElement, prefix);\n      }\n\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n      {\n        return null;\n      }\n\n    case NODE_TYPE.ATTRIBUTE_NODE:\n      {\n        if (node._element === null) {\n          return null;\n        }\n\n        return exports.locateNamespace(node._element, prefix);\n      }\n\n    default:\n      {\n        if (node.parentElement === null) {\n          return null;\n        }\n\n        return exports.locateNamespace(node.parentElement, prefix);\n      }\n  }\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/node.js"],"names":["attributes","require","cloningSteps","domSymbolTree","NODE_TYPE","orderedSetParse","parse","asciiCaseInsensitiveMatch","asciiLowercase","HTML_NS","XMLNS_NS","HTMLCollection","module","exports","clone","node","document","cloneChildren","undefined","_ownerDocument","copy","nodeType","DOCUMENT_NODE","implementation","createDocument","_encoding","contentType","_URL","origin","_parsingMode","DOCUMENT_TYPE_NODE","createDocumentType","name","publicId","systemId","ELEMENT_NODE","_createElementWithCorrectElementInterface","_localName","_namespaceURI","_prefix","copyAttributeList","TEXT_NODE","createTextNode","_data","CDATA_SECTION_NODE","createCDATASection","COMMENT_NODE","createComment","PROCESSING_INSTRUCTION_NODE","createProcessingInstruction","target","DOCUMENT_FRAGMENT_NODE","createDocumentFragment","child","childrenIterator","childCopy","appendChild","listOfElementsWithClassNames","classNames","root","classes","size","createImpl","element","query","isQuirksMode","compatMode","treeToArray","filter","classList","className","tokenSet","some","cur","contains","listOfElementsWithQualifiedName","qualifiedName","lowerQualifiedName","_qualifiedName","listOfElementsWithNamespaceAndLocalName","namespace","localName","convertNodesIntoNode","nodes","length","fragment","i","locateNamespacePrefix","attribute","_attributeList","_namespacePrefix","_value","parentElement","locateNamespace","prefix","_namespace","documentElement","ATTRIBUTE_NODE","_element"],"mappings":"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","sourcesContent":["\"use strict\";\nconst attributes = require(\"./attributes\");\nconst { cloningSteps, domSymbolTree } = require(\"./helpers/internal-constants\");\nconst NODE_TYPE = require(\"./node-type\");\nconst orderedSetParse = require(\"./helpers/ordered-set\").parse;\nconst { asciiCaseInsensitiveMatch, asciiLowercase } = require(\"./helpers/strings\");\nconst { HTML_NS, XMLNS_NS } = require(\"./helpers/namespaces\");\nconst HTMLCollection = require(\"./generated/HTMLCollection\");\n\nmodule.exports.clone = function (node, document, cloneChildren) {\n  if (document === undefined) {\n    document = node._ownerDocument;\n  }\n\n  let copy;\n  switch (node.nodeType) {\n    case NODE_TYPE.DOCUMENT_NODE:\n      // Can't use a simple Document.createImpl because of circular dependency issues :-/\n      copy = document.implementation.createDocument(null, \"\", null);\n      copy._encoding = node._encoding;\n      copy.contentType = node.contentType;\n      copy._URL = node._URL;\n      copy.origin = node.origin;\n      copy._parsingMode = node._parsingMode;\n      break;\n\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n      copy = document.implementation.createDocumentType(node.name, node.publicId, node.systemId);\n      break;\n\n    case NODE_TYPE.ELEMENT_NODE:\n      copy = document._createElementWithCorrectElementInterface(node._localName, node._namespaceURI);\n      copy._prefix = node._prefix;\n      attributes.copyAttributeList(node, copy);\n      break;\n\n    case NODE_TYPE.TEXT_NODE:\n      copy = document.createTextNode(node._data);\n      break;\n\n    case NODE_TYPE.CDATA_SECTION_NODE:\n      copy = document.createCDATASection(node._data);\n      break;\n\n    case NODE_TYPE.COMMENT_NODE:\n      copy = document.createComment(node._data);\n      break;\n\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n      copy = document.createProcessingInstruction(node.target, node._data);\n      break;\n\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n      copy = document.createDocumentFragment();\n      break;\n  }\n\n  if (node[cloningSteps]) {\n    node[cloningSteps](copy, node, document, cloneChildren);\n  }\n\n  if (cloneChildren) {\n    for (const child of domSymbolTree.childrenIterator(node)) {\n      const childCopy = module.exports.clone(child, document, true);\n      copy.appendChild(childCopy);\n    }\n  }\n\n  return copy;\n};\n\n// For the following, memoization is not applied here since the memoized results are stored on `this`.\n\nmodule.exports.listOfElementsWithClassNames = (classNames, root) => {\n  // https://dom.spec.whatwg.org/#concept-getElementsByClassName\n\n  const classes = orderedSetParse(classNames);\n\n  if (classes.size === 0) {\n    return HTMLCollection.createImpl([], { element: root, query: () => [] });\n  }\n\n  return HTMLCollection.createImpl([], {\n    element: root,\n    query: () => {\n      const isQuirksMode = root._ownerDocument.compatMode === \"BackCompat\";\n\n      return domSymbolTree.treeToArray(root, { filter(node) {\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n          return false;\n        }\n\n        const { classList } = node;\n        if (isQuirksMode) {\n          for (const className of classes) {\n            if (!classList.tokenSet.some(cur => asciiCaseInsensitiveMatch(cur, className))) {\n              return false;\n            }\n          }\n        } else {\n          for (const className of classes) {\n            if (!classList.tokenSet.contains(className)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      } });\n    }\n  });\n};\n\nmodule.exports.listOfElementsWithQualifiedName = (qualifiedName, root) => {\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagname\n\n  if (qualifiedName === \"*\") {\n    return HTMLCollection.createImpl([], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root\n      })\n    });\n  }\n\n  if (root._ownerDocument._parsingMode === \"html\") {\n    const lowerQualifiedName = asciiLowercase(qualifiedName);\n\n    return HTMLCollection.createImpl([], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          if (node._namespaceURI === HTML_NS) {\n            return node._qualifiedName === lowerQualifiedName;\n          }\n\n          return node._qualifiedName === qualifiedName;\n        }\n      })\n    });\n  }\n\n  return HTMLCollection.createImpl([], {\n    element: root,\n    query: () => domSymbolTree.treeToArray(root, {\n      filter(node) {\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n          return false;\n        }\n\n        return node._qualifiedName === qualifiedName;\n      }\n    })\n  });\n};\n\nmodule.exports.listOfElementsWithNamespaceAndLocalName = (namespace, localName, root) => {\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagnamens\n\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  if (namespace === \"*\" && localName === \"*\") {\n    return HTMLCollection.createImpl([], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root\n      })\n    });\n  }\n\n  if (namespace === \"*\") {\n    return HTMLCollection.createImpl([], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          return node._localName === localName;\n        }\n      })\n    });\n  }\n\n  if (localName === \"*\") {\n    return HTMLCollection.createImpl([], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          return node._namespaceURI === namespace;\n        }\n      })\n    });\n  }\n\n  return HTMLCollection.createImpl([], {\n    element: root,\n    query: () => domSymbolTree.treeToArray(root, {\n      filter(node) {\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n          return false;\n        }\n\n        return node._localName === localName && node._namespaceURI === namespace;\n      }\n    })\n  });\n};\n\n// https://dom.spec.whatwg.org/#converting-nodes-into-a-node\n// create a fragment (or just return a node for one item)\nexports.convertNodesIntoNode = (document, nodes) => {\n  if (nodes.length === 1) { // note: I'd prefer to check instanceof Node rather than string\n    return typeof nodes[0] === \"string\" ? document.createTextNode(nodes[0]) : nodes[0];\n  }\n  const fragment = document.createDocumentFragment();\n  for (let i = 0; i < nodes.length; i++) {\n    fragment.appendChild(typeof nodes[i] === \"string\" ? document.createTextNode(nodes[i]) : nodes[i]);\n  }\n  return fragment;\n};\n\n// https://dom.spec.whatwg.org/#locate-a-namespace-prefix\nexports.locateNamespacePrefix = (element, namespace) => {\n  if (element._namespaceURI === namespace && element._prefix !== null) {\n    return element._prefix;\n  }\n\n  for (const attribute of element._attributeList) {\n    if (attribute._namespacePrefix === \"xmlns\" && attribute._value === namespace) {\n      return attribute._localName;\n    }\n  }\n\n  if (element.parentElement !== null) {\n    return exports.locateNamespacePrefix(element.parentElement, namespace);\n  }\n\n  return null;\n};\n\n// https://dom.spec.whatwg.org/#locate-a-namespace\nexports.locateNamespace = (node, prefix) => {\n  switch (node.nodeType) {\n    case NODE_TYPE.ELEMENT_NODE: {\n      if (node._namespaceURI !== null && node._prefix === prefix) {\n        return node._namespaceURI;\n      }\n\n      if (prefix === null) {\n        for (const attribute of node._attributeList) {\n          if (attribute._namespace === XMLNS_NS &&\n              attribute._namespacePrefix === null &&\n              attribute._localName === \"xmlns\") {\n            return attribute._value !== \"\" ? attribute._value : null;\n          }\n        }\n      } else {\n        for (const attribute of node._attributeList) {\n          if (attribute._namespace === XMLNS_NS &&\n              attribute._namespacePrefix === \"xmlns\" &&\n              attribute._localName === prefix) {\n            return attribute._value !== \"\" ? attribute._value : null;\n          }\n        }\n      }\n\n      if (node.parentElement === null) {\n        return null;\n      }\n\n      return exports.locateNamespace(node.parentElement, prefix);\n    }\n\n    case NODE_TYPE.DOCUMENT_NODE: {\n      if (node.documentElement === null) {\n        return null;\n      }\n\n      return exports.locateNamespace(node.documentElement, prefix);\n    }\n\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE: {\n      return null;\n    }\n\n    case NODE_TYPE.ATTRIBUTE_NODE: {\n      if (node._element === null) {\n        return null;\n      }\n\n      return exports.locateNamespace(node._element, prefix);\n    }\n\n    default: {\n      if (node.parentElement === null) {\n        return null;\n      }\n\n      return exports.locateNamespace(node.parentElement, prefix);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}