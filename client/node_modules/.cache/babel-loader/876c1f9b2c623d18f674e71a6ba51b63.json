{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/Nav.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as Link } from 'react-router-dom';\nimport plusIcon from '../../imgs/icons/plusIcon.png';\nimport profileIcon from '../../imgs/icons/profileIcon.png';\nimport cogsIcon from '../../imgs/icons/cogs.png';\nimport companiesIcon from '../../imgs/icons/companiesIcon.png';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\nimport { setCompanyTab } from '../../redux/actions/session';\nimport NavSubmenu from './NavSubmenu';\nimport { sortInputsByNamesAlphabeticaly } from '../form/utils/customFormQueries';\n\nconst Nav = ({\n  setAlert,\n  profile: {\n    createdAt,\n    updatedAt\n  },\n  companies,\n  setCompanyTab\n}) => {\n  companies = sortInputsByNamesAlphabeticaly(companies, 'details');\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"dashboard menu\",\n    className: \"dashboard-nav \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dashboard-nav__list\",\n    \"aria-label\": \"dashboard menu links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-nav__list-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard/profile?tab=details\",\n    className: \"dashboard-nav__link tile\",\n    activeClassName: \"dashboard__link--is-active\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => {\n      setAlert(`Profile's settings now desplayed on the page `, 'success');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: profileIcon,\n    className: \"dashboard__icon\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }), \"Profile\")), companies.length > 0 && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/dashboard/companies/${companies[0]._id}?tab=tasks`,\n    className: `dashboard-nav__link tile ${/^\\/dashboard\\/companies/.test(window.location.pathname) ? 'dashboard__link--is-active' : ''}`,\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => {\n      setAlert(`Submenu listing companies now open below. `, 'success');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: companiesIcon,\n    className: \"dashboard__icon\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  }), \"Companies\")), /*#__PURE__*/React.createElement(NavSubmenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard/add-company\",\n    className: \"dashboard-nav__link tile\",\n    activeClassName: \"dashboard__link--is-active\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => {\n      setAlert(`Create a new company form now desplayed on the page `, 'success');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: plusIcon,\n    className: \"dashboard__icon\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }), \"Add Company\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard/invoice\",\n    className: \"dashboard-nav__link tile\",\n    activeClassName: \"dashboard__link--is-active\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => {\n      setAlert(`Create a new invoice form now desplayed on the page `, 'success');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: plusIcon,\n    className: \"dashboard__icon\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }), \"New Invoice\")), createdAt === updatedAt && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disable-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard/account\",\n    className: \"dashboard-nav__link tile\",\n    activeClassName: \"dashboard__link--is-active\",\n    onMouseDown: e => e.preventDefault(),\n    onClick: () => {\n      setAlert(`Create a new invoice form now desplayed on the page `, 'success');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: cogsIcon,\n    className: \"dashboard__icon\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }), \"Account\"))));\n};\n\nNav.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  setCompanyTab: PropTypes.func.isRequired,\n  profile: PropTypes.object,\n  companies: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  companies: state.companies\n});\n\nconst mapDispatchToProps = {\n  setAlert,\n  setCompanyTab\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/Nav.js"],"names":["React","Fragment","PropTypes","NavLink","Link","plusIcon","profileIcon","cogsIcon","companiesIcon","connect","setAlert","setCompanyTab","NavSubmenu","sortInputsByNamesAlphabeticaly","Nav","profile","createdAt","updatedAt","companies","e","preventDefault","length","_id","test","window","location","pathname","propTypes","func","isRequired","object","array","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as Link } from 'react-router-dom';\nimport plusIcon from '../../imgs/icons/plusIcon.png';\nimport profileIcon from '../../imgs/icons/profileIcon.png';\nimport cogsIcon from '../../imgs/icons/cogs.png';\nimport companiesIcon from '../../imgs/icons/companiesIcon.png';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/actions/messages';\nimport { setCompanyTab } from '../../redux/actions/session';\nimport NavSubmenu from './NavSubmenu';\nimport { sortInputsByNamesAlphabeticaly } from '../form/utils/customFormQueries';\n\nconst Nav = ({\n    setAlert,\n    profile: { createdAt, updatedAt },\n    companies,\n    setCompanyTab,\n}) => {\n    companies = sortInputsByNamesAlphabeticaly(companies, 'details');\n    return (\n        <nav aria-label='dashboard menu' className='dashboard-nav '>\n            <ul\n                className='dashboard-nav__list'\n                aria-label='dashboard menu links'\n            >\n                <div className='dashboard-nav__list-main'>\n                    <li>\n                        <Link\n                            to='/dashboard/profile?tab=details'\n                            className='dashboard-nav__link tile'\n                            activeClassName='dashboard__link--is-active'\n                            onMouseDown={(e) => e.preventDefault()}\n                            onClick={() => {\n                                setAlert(\n                                    `Profile's settings now desplayed on the page `,\n                                    'success'\n                                );\n                            }}\n                        >\n                            <img\n                                src={profileIcon}\n                                className='dashboard__icon'\n                                alt=''\n                            />\n                            Profile\n                        </Link>\n                    </li>\n\n                    {companies.length > 0 && (\n                        <Fragment>\n                            <li>\n                                <Link\n                                    to={`/dashboard/companies/${companies[0]._id}?tab=tasks`}\n                                    className={`dashboard-nav__link tile ${\n                                        /^\\/dashboard\\/companies/.test(\n                                            window.location.pathname\n                                        )\n                                            ? 'dashboard__link--is-active'\n                                            : ''\n                                    }`}\n                                    onMouseDown={(e) => e.preventDefault()}\n                                    onClick={() => {\n                                        setAlert(\n                                            `Submenu listing companies now open below. `,\n                                            'success'\n                                        );\n                                    }}\n                                >\n                                    <img\n                                        src={companiesIcon}\n                                        className='dashboard__icon'\n                                        alt=''\n                                    />\n                                    Companies\n                                </Link>\n                            </li>\n                            <NavSubmenu />\n                        </Fragment>\n                    )}\n\n                    <li>\n                        <Link\n                            to='/dashboard/add-company'\n                            className='dashboard-nav__link tile'\n                            activeClassName='dashboard__link--is-active'\n                            onMouseDown={(e) => e.preventDefault()}\n                            onClick={() => {\n                                setAlert(\n                                    `Create a new company form now desplayed on the page `,\n                                    'success'\n                                );\n                            }}\n                        >\n                            <img\n                                src={plusIcon}\n                                className='dashboard__icon'\n                                alt=''\n                            />\n                            Add Company\n                        </Link>\n                    </li>\n\n                    <li>\n                        <Link\n                            to='/dashboard/invoice'\n                            className='dashboard-nav__link tile'\n                            activeClassName='dashboard__link--is-active'\n                            onMouseDown={(e) => e.preventDefault()}\n                            onClick={() => {\n                                setAlert(\n                                    `Create a new invoice form now desplayed on the page `,\n                                    'success'\n                                );\n                            }}\n                        >\n                            <img\n                                src={plusIcon}\n                                className='dashboard__icon'\n                                alt=''\n                            />\n                            New Invoice\n                        </Link>\n                    </li>\n                    {/* // disables links until profile is created */}\n                    {createdAt === updatedAt && (\n                        <div className='disable-links'></div>\n                    )}\n                </div>\n                <li>\n                    <Link\n                        to='/dashboard/account'\n                        className='dashboard-nav__link tile'\n                        activeClassName='dashboard__link--is-active'\n                        onMouseDown={(e) => e.preventDefault()}\n                        onClick={() => {\n                            setAlert(\n                                `Create a new invoice form now desplayed on the page `,\n                                'success'\n                            );\n                        }}\n                    >\n                        <img\n                            src={cogsIcon}\n                            className='dashboard__icon'\n                            alt=''\n                        />\n                        Account\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\nNav.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    setCompanyTab: PropTypes.func.isRequired,\n    profile: PropTypes.object,\n    companies: PropTypes.array,\n};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    companies: state.companies,\n});\nconst mapDispatchToProps = {\n    setAlert,\n    setCompanyTab,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n"]},"metadata":{},"sourceType":"module"}