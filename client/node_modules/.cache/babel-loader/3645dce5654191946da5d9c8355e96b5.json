{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Calendar.scss';\nimport { DAYS, DAYS_LEAP, DAYS_OF_THE_WEEK, MONTHS, THIS_YEAR } from './dates';\nexport function Calendar() {\n  const today = new Date();\n  const [date, setDate] = useState(today);\n  console.log(date.getMonth());\n  const day = date.getDate();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  const first_day = getStartDayOfMonth(date);\n  console.log(first_day);\n\n  function getStartDayOfMonth(date) {\n    return new Date(year, month, 1).getDay(); // return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  }\n\n  function isLeapYear(year) {\n    return !(year % 4 || !(year % 100) && year % 400);\n  }\n\n  const days = isLeapYear(year) ? DAYS_LEAP : DAYS;\n  const num_of_days_to_display = Array(days[date.getMonth()] + (getStartDayOfMonth(date) === 0 ? 6 : getStartDayOfMonth(date) - 1));\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setDate(new Date(year, month - 1, 1)),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"\\u27A4\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, MONTHS[month], \" \", year)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setDate(new Date(year, month + 1, 1)),\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"\\u27A4\"))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, DAYS_OF_THE_WEEK.map(d => /*#__PURE__*/React.createElement(\"li\", {\n    key: 'cal-day-names-' + d,\n    className: \"day day__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, d))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, num_of_days_to_display.fill(null).map((_, index) => {\n    const d = index - (getStartDayOfMonth(date) === 0 ? 5 : getStartDayOfMonth(date) - 2);\n    if (d < 1) return /*#__PURE__*/React.createElement(\"li\", {\n      key: 'calendar-day-' + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 39\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"day\",\n      key: 'calendar-day-' + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onMouseDown: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"if(new Date(year, month, d)=== new Date())\", console.log(today), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, d)));\n  })));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js"],"names":["React","useState","useEffect","DAYS","DAYS_LEAP","DAYS_OF_THE_WEEK","MONTHS","THIS_YEAR","Calendar","today","Date","date","setDate","console","log","getMonth","day","getDate","month","year","getFullYear","first_day","getStartDayOfMonth","getDay","isLeapYear","days","num_of_days_to_display","Array","e","preventDefault","map","d","fill","_","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Calendar.scss';\nimport { DAYS, DAYS_LEAP, DAYS_OF_THE_WEEK, MONTHS, THIS_YEAR } from './dates';\n\nexport function Calendar() {\n    const today = new Date();\n    const [date, setDate] = useState(today);\n    console.log(date.getMonth());\n    const day = date.getDate();\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    const first_day = getStartDayOfMonth(date);\n    console.log(first_day);\n\n    function getStartDayOfMonth(date) {\n        return new Date(year, month, 1).getDay();\n        // return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n    }\n\n    function isLeapYear(year) {\n        return !(year % 4 || (!(year % 100) && year % 400));\n    }\n\n    const days = isLeapYear(year) ? DAYS_LEAP : DAYS;\n    const num_of_days_to_display = Array(\n        days[date.getMonth()] +\n            (getStartDayOfMonth(date) === 0 ? 6 : getStartDayOfMonth(date) - 1)\n    );\n\n    return (\n        <article className='calendar'>\n            <div className='calendar__header'>\n                {/* prev month */}\n                <button\n                    onClick={() => setDate(new Date(year, month - 1, 1))}\n                    onMouseDown={(e) => e.preventDefault()}\n                >\n                    <span>&#x27A4;</span>\n                </button>\n                <div>\n                    <b>\n                        {MONTHS[month]} {year}\n                    </b>\n                </div>\n                {/* next month */}\n                <button\n                    onClick={() => setDate(new Date(year, month + 1, 1))}\n                    onMouseDown={(e) => e.preventDefault()}\n                >\n                    <span>&#x27A4;</span>\n                </button>\n            </div>\n            <ul>\n                {DAYS_OF_THE_WEEK.map((d) => (\n                    <li key={'cal-day-names-' + d} className='day day__name'>\n                        {d}\n                    </li>\n                ))}\n            </ul>\n\n            <ul>\n                {num_of_days_to_display.fill(null).map((_, index) => {\n                    const d =\n                        index -\n                        (getStartDayOfMonth(date) === 0\n                            ? 5\n                            : getStartDayOfMonth(date) - 2);\n\n                    if (d < 1) return <li key={'calendar-day-' + index}></li>;\n                    return (\n                        <li className='day' key={'calendar-day-' + index}>\n                            <button onMouseDown={(e) => e.preventDefault()}>\n                                if(new Date(year, month, d)=== new Date())\n                                {console.log(today)}\n                                <span>{d}</span>\n                            </button>\n                        </li>\n                    );\n                })}\n            </ul>\n        </article>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}