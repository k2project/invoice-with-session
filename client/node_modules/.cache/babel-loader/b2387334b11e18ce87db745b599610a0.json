{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nfunction HTMLTableCellElement() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(HTMLTableCellElement.prototype, HTMLElement.interface.prototype);\nObject.setPrototypeOf(HTMLTableCellElement, HTMLElement.interface);\nObject.defineProperty(HTMLTableCellElement, \"prototype\", {\n  value: HTMLTableCellElement.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"colSpan\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"colSpan\"];\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'colSpan' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this[impl][\"colSpan\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"rowSpan\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"rowSpan\"];\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'rowSpan' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this[impl][\"rowSpan\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"headers\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"headers\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'headers' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttribute(\"headers\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"cellIndex\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"cellIndex\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"scope\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"scope\"];\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'scope' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this[impl][\"scope\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"abbr\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"abbr\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'abbr' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttribute(\"abbr\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"align\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"align\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'align' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttribute(\"align\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"axis\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"axis\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'axis' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttribute(\"axis\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"height\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"height\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'height' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttribute(\"height\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"width\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"width\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'width' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttribute(\"width\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"ch\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"char\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'ch' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttribute(\"char\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"chOff\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"charoff\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'chOff' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttribute(\"charoff\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"noWrap\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttribute(\"noWrap\");\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'noWrap' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttribute(\"noWrap\", \"\");\n    } else {\n      this.removeAttribute(\"noWrap\");\n    }\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"vAlign\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"vAlign\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'vAlign' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttribute(\"vAlign\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, \"bgColor\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"bgColor\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'bgColor' property on 'HTMLTableCellElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n    this.setAttribute(\"bgColor\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLTableCellElement.prototype, Symbol.toStringTag, {\n  value: \"HTMLTableCellElement\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLTableCellElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableCellElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableCellElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLTableCellElement,\n  expose: {\n    Window: {\n      HTMLTableCellElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLTableCellElement-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableCellElement.js"],"names":["conversions","require","utils","impl","implSymbol","HTMLElement","HTMLTableCellElement","TypeError","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","get","module","exports","is","set","V","context","getAttribute","setAttribute","hasAttribute","removeAttribute","treatNullAsEmptyString","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nfunction HTMLTableCellElement() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(HTMLTableCellElement.prototype, HTMLElement.interface.prototype);\nObject.setPrototypeOf(HTMLTableCellElement, HTMLElement.interface);\n\nObject.defineProperty(HTMLTableCellElement, \"prototype\", {\n  value: HTMLTableCellElement.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"colSpan\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"colSpan\"];\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'colSpan' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this[impl][\"colSpan\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"rowSpan\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"rowSpan\"];\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'rowSpan' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this[impl][\"rowSpan\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"headers\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"headers\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'headers' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttribute(\"headers\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"cellIndex\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"cellIndex\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"scope\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"scope\"];\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'scope' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this[impl][\"scope\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"abbr\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"abbr\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'abbr' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttribute(\"abbr\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"align\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"align\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'align' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttribute(\"align\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"axis\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"axis\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'axis' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttribute(\"axis\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"height\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"height\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'height' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttribute(\"height\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"width\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"width\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'width' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttribute(\"width\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"ch\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"char\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'ch' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttribute(\"char\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"chOff\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"charoff\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'chOff' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttribute(\"charoff\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"noWrap\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttribute(\"noWrap\");\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'noWrap' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttribute(\"noWrap\", \"\");\n    } else {\n      this.removeAttribute(\"noWrap\");\n    }\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"vAlign\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"vAlign\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'vAlign' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttribute(\"vAlign\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, \"bgColor\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"bgColor\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'bgColor' property on 'HTMLTableCellElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n\n    this.setAttribute(\"bgColor\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLTableCellElement.prototype, Symbol.toStringTag, {\n  value: \"HTMLTableCellElement\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLTableCellElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableCellElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableCellElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLTableCellElement,\n  expose: {\n    Window: { HTMLTableCellElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLTableCellElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}