{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/Page.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport Nav from './Nav';\nimport './Page.scss';\nimport DesktopOnly from './DesktopOnly';\nimport loader from '../../imgs/icons/loader.gif';\n\nconst useUnload = fn => {\n  const cb = useRef();\n  cb.current = fn;\n  useEffect(() => {\n    const onUnload = () => cb.current();\n\n    window.addEventListener('beforeunload', onUnload);\n    return () => window.removeEventListener('beforeunload', onUnload);\n  }, [cb]);\n};\n\nconst Page = ({\n  title,\n  user,\n  children\n}) => {\n  let mql = window.matchMedia('(min-width: 1000px)');\n  const [desktop, desktopDisplay] = useState(true);\n\n  const getMQL = () => {\n    if (mql.matches) {\n      desktopDisplay(true);\n    } else {\n      desktopDisplay(false);\n    }\n  };\n\n  useUnload(e => {\n    e.preventDefault();\n    e.returnValue = '';\n    console.log('unloading');\n  });\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getMQL();\n    window.addEventListener('resize', getMQL);\n    return () => {\n      window.removeEventListener('resize', getMQL);\n    };\n  }, [desktop, desktopDisplay]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, !user && desktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: loader,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"loading...\")), !desktop && /*#__PURE__*/React.createElement(DesktopOnly, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }\n  }), desktop && user && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, children)), /*#__PURE__*/React.createElement(\"footer\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Free online PDF Generator and CMS \\xA9\", ' ', new Date().getFullYear()))));\n};\n\nPage.propTypes = {\n  user: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps)(Page);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/page/Page.js"],"names":["React","Fragment","useState","useEffect","useRef","PropTypes","connect","Header","Nav","DesktopOnly","loader","useUnload","fn","cb","current","onUnload","window","addEventListener","removeEventListener","Page","title","user","children","mql","matchMedia","desktop","desktopDisplay","getMQL","matches","e","preventDefault","returnValue","console","log","scrollTo","Date","getFullYear","propTypes","object","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,MAA/C,QAA6D,OAA7D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,SAAS,GAAIC,EAAD,IAAQ;AACtB,QAAMC,EAAE,GAAGT,MAAM,EAAjB;AAEAS,EAAAA,EAAE,CAACC,OAAH,GAAaF,EAAb;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,QAAQ,GAAG,MAAMF,EAAE,CAACC,OAAH,EAAvB;;AAEAE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwCF,QAAxC;AAEA,WAAO,MAAMC,MAAM,CAACE,mBAAP,CAA2B,cAA3B,EAA2CH,QAA3C,CAAb;AACH,GANQ,EAMN,CAACF,EAAD,CANM,CAAT;AAOH,CAZD;;AAaA,MAAMM,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAD,KAA+B;AACxC,MAAIC,GAAG,GAAGP,MAAM,CAACQ,UAAP,CAAkB,qBAAlB,CAAV;AACA,QAAM,CAACC,OAAD,EAAUC,cAAV,IAA4BxB,QAAQ,CAAC,IAAD,CAA1C;;AACA,QAAMyB,MAAM,GAAG,MAAM;AACjB,QAAIJ,GAAG,CAACK,OAAR,EAAiB;AACbF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAEO;AACHA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GAND;;AAOAf,EAAAA,SAAS,CAAEkB,CAAD,IAAO;AACbA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,WAAF,GAAgB,EAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAJQ,CAAT;AAKA9B,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,MAAM,CAACkB,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACAP,IAAAA,MAAM;AACNX,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCU,MAAlC;AACA,WAAO,MAAM;AACTX,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCS,MAArC;AACH,KAFD;AAGH,GAPQ,EAON,CAACF,OAAD,EAAUC,cAAV,CAPM,CAAT;AAQA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACL,IAAD,IAASI,OAAT,iBACG;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEf,MAAV;AAAkB,IAAA,GAAG,EAAC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAFR,EAOK,CAACe,OAAD,iBAAY,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPjB,EAQKA,OAAO,IAAIJ,IAAX,iBACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,KAAzB,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,QAAP,CAFJ,CAFJ,eAMI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC6C,GAD7C,EAEK,IAAIa,IAAJ,GAAWC,WAAX,EAFL,CANJ,CAFJ,CATR,CADJ;AA2BH,CAlDD;;AAoDAjB,IAAI,CAACkB,SAAL,GAAiB;AACbhB,EAAAA,IAAI,EAAEhB,SAAS,CAACiC;AADH,CAAjB;;AAGA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCnB,EAAAA,IAAI,EAAEmB,KAAK,CAACnB;AADoB,CAAZ,CAAxB;;AAGA,MAAMoB,kBAAkB,GAAG,EAA3B;AACA,eAAenC,OAAO,CAACiC,eAAD,CAAP,CAAyBpB,IAAzB,CAAf","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport Nav from './Nav';\nimport './Page.scss';\nimport DesktopOnly from './DesktopOnly';\nimport loader from '../../imgs/icons/loader.gif';\n\nconst useUnload = (fn) => {\n    const cb = useRef();\n\n    cb.current = fn;\n\n    useEffect(() => {\n        const onUnload = () => cb.current();\n\n        window.addEventListener('beforeunload', onUnload);\n\n        return () => window.removeEventListener('beforeunload', onUnload);\n    }, [cb]);\n};\nconst Page = ({ title, user, children }) => {\n    let mql = window.matchMedia('(min-width: 1000px)');\n    const [desktop, desktopDisplay] = useState(true);\n    const getMQL = () => {\n        if (mql.matches) {\n            desktopDisplay(true);\n        } else {\n            desktopDisplay(false);\n        }\n    };\n    useUnload((e) => {\n        e.preventDefault();\n        e.returnValue = '';\n        console.log('unloading');\n    });\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        getMQL();\n        window.addEventListener('resize', getMQL);\n        return () => {\n            window.removeEventListener('resize', getMQL);\n        };\n    }, [desktop, desktopDisplay]);\n    return (\n        <Fragment>\n            {!user && desktop && (\n                <div className='loader'>\n                    <img src={loader} alt='' />\n                    <p>loading...</p>\n                </div>\n            )}\n            {!desktop && <DesktopOnly />}\n            {desktop && user && (\n                <Fragment>\n                    <h1 className='sr-only'>{title}</h1>\n                    <div className='page'>\n                        <Header />\n                        <div className='dashboard'>\n                            <Nav />\n                            <main>{children}</main>\n                        </div>\n                        <footer className='footer'>\n                            Free online PDF Generator and CMS &copy;{' '}\n                            {new Date().getFullYear()}\n                        </footer>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nPage.propTypes = {\n    user: PropTypes.object,\n};\nconst mapStateToProps = (state) => ({\n    user: state.user,\n});\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps)(Page);\n"]},"metadata":{},"sourceType":"module"}