{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/invoice/Invoice.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Page from '../../components/page/Page';\nimport * as jsPDF from 'jspdf';\nexport const Invoice = () => {\n  const downlaod = () => {\n    var doc = new jsPDF();\n    doc.text('Hello world!', 10, 10);\n    doc.save('a4.pdf');\n  }; // function demoFromHTML() {\n  // // source can be HTML-formatted string, or a reference\n  // // to an actual DOM element from which the text will be scraped.\n  // source = $('#content')[0];\n  // we support special element handlers. Register them with jQuery-style\n  // ID selector for either ID or node name. (\"#iAmID\", \"div\", \"span\" etc.)\n  // There is no support for any other type of selectors\n  // (class, of compound) at this time.\n  // specialElementHandlers = {\n  //     // element with id of \"bypass\" - jQuery style selector\n  //     '#bypassme': function (element, renderer) {\n  //         // true = \"handled elsewhere, bypass text extraction\"\n  //         return true;\n  //     },\n  // };\n  // all coords and widths are in jsPDF instance's declared units\n  // 'inches' in this case\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    id: \"invoice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"New invoice\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--info\",\n    onClick: downlaod,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Download pdf\"));\n};\nInvoice.propTypes = {};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Invoice);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/invoice/Invoice.js"],"names":["React","PropTypes","connect","Page","jsPDF","Invoice","downlaod","doc","text","save","propTypes","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAIC,GAAG,GAAG,IAAIH,KAAJ,EAAV;AAEAG,IAAAA,GAAG,CAACC,IAAJ,CAAS,cAAT,EAAyB,EAAzB,EAA6B,EAA7B;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAAS,QAAT;AACH,GALD,CADyB,CAOzB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AACA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAS,IAAA,EAAE,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAEH,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ;AAQH,CApCM;AAsCPD,OAAO,CAACK,SAAR,GAAoB,EAApB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AAEA,MAAMC,kBAAkB,GAAG,EAA3B;AAEA,eAAeX,OAAO,CAACS,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,OAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Page from '../../components/page/Page';\nimport * as jsPDF from 'jspdf';\n\nexport const Invoice = () => {\n    const downlaod = () => {\n        var doc = new jsPDF();\n\n        doc.text('Hello world!', 10, 10);\n        doc.save('a4.pdf');\n    };\n    // function demoFromHTML() {\n    // // source can be HTML-formatted string, or a reference\n    // // to an actual DOM element from which the text will be scraped.\n    // source = $('#content')[0];\n\n    // we support special element handlers. Register them with jQuery-style\n    // ID selector for either ID or node name. (\"#iAmID\", \"div\", \"span\" etc.)\n    // There is no support for any other type of selectors\n    // (class, of compound) at this time.\n    // specialElementHandlers = {\n    //     // element with id of \"bypass\" - jQuery style selector\n    //     '#bypassme': function (element, renderer) {\n    //         // true = \"handled elsewhere, bypass text extraction\"\n    //         return true;\n    //     },\n    // };\n\n    // all coords and widths are in jsPDF instance's declared units\n    // 'inches' in this case\n\n    // }\n    return (\n        <Page>\n            <article id='invoice'>New invoice</article>\n            <button className='btn btn--info' onClick={downlaod}>\n                Download pdf\n            </button>\n        </Page>\n    );\n};\n\nInvoice.propTypes = {};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invoice);\n"]},"metadata":{},"sourceType":"module"}