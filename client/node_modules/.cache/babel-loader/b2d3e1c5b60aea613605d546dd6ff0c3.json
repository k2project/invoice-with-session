{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyInvoices.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getInputValueByLabel } from '../../components/form/utils/customFormQueries';\nimport infoIcon from '../../imgs/icons/infoIcon.png';\nimport { date_DD_MM_YYYY } from '../../components/calendar/dates';\nexport const CompanyInvoices = ({\n  company\n}) => {\n  const {\n    invoices\n  } = company;\n  let companyName = getInputValueByLabel(company.details, 'Name');\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"company-invoices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, `${companyName}'s Invoices .`), invoices.length === 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tile tile--info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: infoIcon,\n    alt: \"\",\n    className: \"icon--md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }), \"Currently there are no invoices saved. Add a new one now.\"), invoices.length > 0 && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"invoices-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"caption\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, \"Current invoices list.\")), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, \"Invoice number\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, \"Created at\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, \"Update Invoice\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, \"Delete Invoice\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, \"Download Invoice\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, invoices.map((invoice, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: invoices._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, invoice.saved_as), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, date_DD_MM_YYYY(invoice.created_at)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, \"Download\"))))));\n};\nCompanyInvoices.propTypes = {\n  company: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  company: state.companies.find(c => c._id === state.session.currentCompany)\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyInvoices);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyInvoices.js"],"names":["React","Component","PropTypes","connect","getInputValueByLabel","infoIcon","date_DD_MM_YYYY","CompanyInvoices","company","invoices","companyName","details","length","map","invoice","index","_id","saved_as","created_at","propTypes","object","mapStateToProps","state","companies","find","c","session","currentCompany","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getInputValueByLabel } from '../../components/form/utils/customFormQueries';\nimport infoIcon from '../../imgs/icons/infoIcon.png';\nimport { date_DD_MM_YYYY } from '../../components/calendar/dates';\n\nexport const CompanyInvoices = ({ company }) => {\n    const { invoices } = company;\n    let companyName = getInputValueByLabel(company.details, 'Name');\n    return (\n        <section className='company-invoices'>\n            <h2 className='sr-only'>{`${companyName}'s Invoices .`}</h2>\n            {invoices.length === 0 && (\n                <span className='tile tile--info'>\n                    <img src={infoIcon} alt='' className='icon--md' />\n                    Currently there are no invoices saved. Add a new one now.\n                </span>\n            )}\n            {invoices.length > 0 && (\n                <table className='invoices-table'>\n                    <caption>\n                        <b>Current invoices list.</b>\n                    </caption>\n                    <thead>\n                        <tr className='sr-only'>\n                            <th scope='col'>Invoice number</th>\n                            <th scope='col'>Created at</th>\n                            <th scope='col'>Update Invoice</th>\n                            <th scope='col'>Delete Invoice</th>\n                            <th scope='col'>Download Invoice</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {invoices.map((invoice, index) => (\n                            <tr key={invoices._id}>\n                                <th scope='row'>{invoice.saved_as}</th>\n                                <td>{date_DD_MM_YYYY(invoice.created_at)}</td>\n                                <td>Update</td>\n                                <td>Delete</td>\n                                <td>Download</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )}\n        </section>\n    );\n};\n\nCompanyInvoices.propTypes = {\n    company: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n    company: state.companies.find(\n        (c) => c._id === state.session.currentCompany\n    ),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyInvoices);\n"]},"metadata":{},"sourceType":"module"}