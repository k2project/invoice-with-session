{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/routes/PrivateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  authenticated,\n  ...rest\n}) => setTimeout(() => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !authenticated ? /*#__PURE__*/React.createElement(Redirect, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }));\n}, 500);\n\nPrivateRoute.propTypes = {\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.session.authenticated\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/routes/PrivateRoute.js"],"names":["React","PropTypes","Redirect","Route","connect","PrivateRoute","component","Component","authenticated","rest","setTimeout","props","propTypes","bool","isRequired","mapStateToProps","state","session"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,aAAxB;AAAuC,KAAGC;AAA1C,CAAD,KACjBC,UAAU,CAAC,MAAM;AACb,sBACI,oBAAC,KAAD,oBACQD,IADR;AAEI,IAAA,MAAM,EAAGE,KAAD,IACJ,CAACH,aAAD,gBACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,gBAGI,oBAAC,SAAD,oBAAeG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAYH,CAbS,EAaP,GAbO,CADd;;AAgBAN,YAAY,CAACO,SAAb,GAAyB;AACrBJ,EAAAA,aAAa,EAAEP,SAAS,CAACY,IAAV,CAAeC;AADT,CAAzB;;AAGA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCR,EAAAA,aAAa,EAAEQ,KAAK,CAACC,OAAN,CAAcT;AADG,CAAZ,CAAxB;;AAGA,eAAeJ,OAAO,CAACW,eAAD,CAAP,CAAyBV,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) =>\n    setTimeout(() => {\n        return (\n            <Route\n                {...rest}\n                render={(props) =>\n                    !authenticated ? (\n                        <Redirect to={'/'} />\n                    ) : (\n                        <Component {...props} />\n                    )\n                }\n            />\n        );\n    }, 500);\n\nPrivateRoute.propTypes = {\n    authenticated: PropTypes.bool.isRequired,\n};\nconst mapStateToProps = (state) => ({\n    authenticated: state.session.authenticated,\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}