{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst EventTarget = require(\"./EventTarget.js\");\n\nfunction XMLHttpRequestEventTarget() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(XMLHttpRequestEventTarget.prototype, EventTarget.interface.prototype);\nObject.setPrototypeOf(XMLHttpRequestEventTarget, EventTarget.interface);\nObject.defineProperty(XMLHttpRequestEventTarget, \"prototype\", {\n  value: XMLHttpRequestEventTarget.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onloadstart\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onloadstart\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n    this[impl][\"onloadstart\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onprogress\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onprogress\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n    this[impl][\"onprogress\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onabort\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onabort\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n    this[impl][\"onabort\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onerror\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onerror\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n    this[impl][\"onerror\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onload\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onload\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n    this[impl][\"onload\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"ontimeout\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"ontimeout\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n    this[impl][\"ontimeout\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onloadend\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onloadend\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n    this[impl][\"onloadend\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, Symbol.toStringTag, {\n  value: \"XMLHttpRequestEventTarget\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'XMLHttpRequestEventTarget'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(XMLHttpRequestEventTarget.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(XMLHttpRequestEventTarget.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    EventTarget._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: XMLHttpRequestEventTarget,\n  expose: {\n    Window: {\n      XMLHttpRequestEventTarget\n    },\n    DedicatedWorker: {\n      XMLHttpRequestEventTarget\n    },\n    SharedWorker: {\n      XMLHttpRequestEventTarget\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../xhr/XMLHttpRequestEventTarget-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/XMLHttpRequestEventTarget.js"],"names":["conversions","require","utils","impl","implSymbol","EventTarget","XMLHttpRequestEventTarget","TypeError","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","get","module","exports","is","tryWrapperForImpl","set","V","tryImplForWrapper","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","expose","Window","DedicatedWorker","SharedWorker"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst EventTarget = require(\"./EventTarget.js\");\n\nfunction XMLHttpRequestEventTarget() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(XMLHttpRequestEventTarget.prototype, EventTarget.interface.prototype);\nObject.setPrototypeOf(XMLHttpRequestEventTarget, EventTarget.interface);\n\nObject.defineProperty(XMLHttpRequestEventTarget, \"prototype\", {\n  value: XMLHttpRequestEventTarget.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onloadstart\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onloadstart\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n\n    this[impl][\"onloadstart\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onprogress\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onprogress\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n\n    this[impl][\"onprogress\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onabort\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onabort\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n\n    this[impl][\"onabort\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onerror\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onerror\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n\n    this[impl][\"onerror\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onload\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onload\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n\n    this[impl][\"onload\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"ontimeout\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"ontimeout\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n\n    this[impl][\"ontimeout\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, \"onloadend\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"onloadend\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = utils.tryImplForWrapper(V);\n\n    this[impl][\"onloadend\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(XMLHttpRequestEventTarget.prototype, Symbol.toStringTag, {\n  value: \"XMLHttpRequestEventTarget\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'XMLHttpRequestEventTarget'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(XMLHttpRequestEventTarget.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(XMLHttpRequestEventTarget.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    EventTarget._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: XMLHttpRequestEventTarget,\n  expose: {\n    Window: { XMLHttpRequestEventTarget },\n    DedicatedWorker: { XMLHttpRequestEventTarget },\n    SharedWorker: { XMLHttpRequestEventTarget }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../xhr/XMLHttpRequestEventTarget-impl.js\");\n"]},"metadata":{},"sourceType":"script"}