{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../living/generated/utils\");\n\nconst nodeTypes = require(\"../living/node-type\");\n\nconst {\n  domSymbolTree\n} = require(\"../living/helpers/internal-constants\"); // Serialization only requires a subset of the tree adapter interface.\n// Tree traversing\n\n\nexports.getFirstChild = node => node.firstChild;\n\nexports.getChildNodes = node => node.childNodesForSerializing || domSymbolTree.childrenToArray(node);\n\nexports.getParentNode = node => node.parentNode;\n\nexports.getAttrList = node => idlUtils.wrapperForImpl(node._attributes); // Node data\n\n\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\n\n\nexports.getNamespaceURI = element => element.namespaceURI;\n\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\n\nexports.getDocumentTypeNodeName = node => node.name;\n\nexports.getDocumentTypeNodePublicId = node => node.publicId;\n\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\n\nexports.getTemplateContent = templateElement => templateElement._templateContents;\n\nexports.getDocumentMode = document => document._mode; // Node types\n\n\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\n\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\n\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\n\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE;","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/browser/parse5-adapter-serialization.js"],"names":["idlUtils","require","nodeTypes","domSymbolTree","exports","getFirstChild","node","firstChild","getChildNodes","childNodesForSerializing","childrenToArray","getParentNode","parentNode","getAttrList","wrapperForImpl","_attributes","getTagName","element","_qualifiedName","getNamespaceURI","namespaceURI","getTextNodeContent","getCommentNodeContent","data","getDocumentTypeNodeName","name","getDocumentTypeNodePublicId","publicId","getDocumentTypeNodeSystemId","systemId","getTemplateContent","templateElement","_templateContents","getDocumentMode","document","_mode","isTextNode","nodeType","TEXT_NODE","isCommentNode","COMMENT_NODE","isDocumentTypeNode","DOCUMENT_TYPE_NODE","isElementNode","ELEMENT_NODE"],"mappings":"AAAA;;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,2BAAD,CAAxB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAoBF,OAAO,CAAC,sCAAD,CAAjC,C,CACA;AAEA;;;AACAG,OAAO,CAACC,aAAR,GAAwBC,IAAI,IAAIA,IAAI,CAACC,UAArC;;AAEAH,OAAO,CAACI,aAAR,GAAwBF,IAAI,IAAIA,IAAI,CAACG,wBAAL,IAAiCN,aAAa,CAACO,eAAd,CAA8BJ,IAA9B,CAAjE;;AAEAF,OAAO,CAACO,aAAR,GAAwBL,IAAI,IAAIA,IAAI,CAACM,UAArC;;AAEAR,OAAO,CAACS,WAAR,GAAsBP,IAAI,IAAIN,QAAQ,CAACc,cAAT,CAAwBR,IAAI,CAACS,WAA7B,CAA9B,C,CAEA;;;AACAX,OAAO,CAACY,UAAR,GAAqBC,OAAO,IAAIA,OAAO,CAACC,cAAxC,C,CAAwD;;;AAExDd,OAAO,CAACe,eAAR,GAA0BF,OAAO,IAAIA,OAAO,CAACG,YAA7C;;AAEAhB,OAAO,CAACiB,kBAAR,GAA6BjB,OAAO,CAACkB,qBAAR,GAAgChB,IAAI,IAAIA,IAAI,CAACiB,IAA1E;;AAEAnB,OAAO,CAACoB,uBAAR,GAAkClB,IAAI,IAAIA,IAAI,CAACmB,IAA/C;;AAEArB,OAAO,CAACsB,2BAAR,GAAsCpB,IAAI,IAAIA,IAAI,CAACqB,QAAnD;;AAEAvB,OAAO,CAACwB,2BAAR,GAAsCtB,IAAI,IAAIA,IAAI,CAACuB,QAAnD;;AAEAzB,OAAO,CAAC0B,kBAAR,GAA6BC,eAAe,IAAIA,eAAe,CAACC,iBAAhE;;AAEA5B,OAAO,CAAC6B,eAAR,GAA0BC,QAAQ,IAAIA,QAAQ,CAACC,KAA/C,C,CAEA;;;AAEA/B,OAAO,CAACgC,UAAR,GAAqB9B,IAAI,IAAIA,IAAI,CAAC+B,QAAL,KAAkBnC,SAAS,CAACoC,SAAzD;;AAEAlC,OAAO,CAACmC,aAAR,GAAwBjC,IAAI,IAAIA,IAAI,CAAC+B,QAAL,KAAkBnC,SAAS,CAACsC,YAA5D;;AAEApC,OAAO,CAACqC,kBAAR,GAA6BnC,IAAI,IAAIA,IAAI,CAAC+B,QAAL,KAAkBnC,SAAS,CAACwC,kBAAjE;;AAEAtC,OAAO,CAACuC,aAAR,GAAwBrC,IAAI,IAAIA,IAAI,CAAC+B,QAAL,KAAkBnC,SAAS,CAAC0C,YAA5D","sourcesContent":["\"use strict\";\nconst idlUtils = require(\"../living/generated/utils\");\nconst nodeTypes = require(\"../living/node-type\");\nconst { domSymbolTree } = require(\"../living/helpers/internal-constants\");\n// Serialization only requires a subset of the tree adapter interface.\n\n// Tree traversing\nexports.getFirstChild = node => node.firstChild;\n\nexports.getChildNodes = node => node.childNodesForSerializing || domSymbolTree.childrenToArray(node);\n\nexports.getParentNode = node => node.parentNode;\n\nexports.getAttrList = node => idlUtils.wrapperForImpl(node._attributes);\n\n// Node data\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\n\nexports.getNamespaceURI = element => element.namespaceURI;\n\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\n\nexports.getDocumentTypeNodeName = node => node.name;\n\nexports.getDocumentTypeNodePublicId = node => node.publicId;\n\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\n\nexports.getTemplateContent = templateElement => templateElement._templateContents;\n\nexports.getDocumentMode = document => document._mode;\n\n// Node types\n\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\n\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\n\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\n\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE;\n"]},"metadata":{},"sourceType":"script"}