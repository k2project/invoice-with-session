{"ast":null,"code":"import { GET_ALL_COMPANIES, CLEAR_COMPANIES, UPDATE_COMPANY } from '../actions/types';\nconst initialState = [];\nexport default function (state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case GET_ALL_COMPANIES:\n      return [...payload];\n\n    case CLEAR_COMPANIES:\n      return [];\n\n    case UPDATE_COMPANY:\n      //property and arr: details / imvoices\n      //id : company id\n      const {\n        property,\n        arr,\n        id\n      } = payload;\n      const companyToUpdateIndex = state.findIndex(c => c._id === id);\n      const companyToUpdate = state[companyToUpdateIndex];\n      return [...state.slice(0, companyToUpdateIndex), { ...companyToUpdate,\n        [property]: [...arr]\n      }, ...state.slice(companyToUpdateIndex + 1)];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/redux/reducers/companies.js"],"names":["GET_ALL_COMPANIES","CLEAR_COMPANIES","UPDATE_COMPANY","initialState","state","type","payload","property","arr","id","companyToUpdateIndex","findIndex","c","_id","companyToUpdate","slice"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,eAFJ,EAGIC,cAHJ,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,UAAUC,KAAK,GAAGD,YAAlB,EAAgC;AAAEE,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAhC,EAAmD;AAC9D,UAAQD,IAAR;AACI,SAAKL,iBAAL;AACI,aAAO,CAAC,GAAGM,OAAJ,CAAP;;AAEJ,SAAKL,eAAL;AACI,aAAO,EAAP;;AAEJ,SAAKC,cAAL;AACI;AACA;AACA,YAAM;AAAEK,QAAAA,QAAF;AAAYC,QAAAA,GAAZ;AAAiBC,QAAAA;AAAjB,UAAwBH,OAA9B;AACA,YAAMI,oBAAoB,GAAGN,KAAK,CAACO,SAAN,CAAiBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUJ,EAAjC,CAA7B;AACA,YAAMK,eAAe,GAAGV,KAAK,CAACM,oBAAD,CAA7B;AACA,aAAO,CACH,GAAGN,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAeL,oBAAf,CADA,EAEH,EAAE,GAAGI,eAAL;AAAsB,SAACP,QAAD,GAAY,CAAC,GAAGC,GAAJ;AAAlC,OAFG,EAGH,GAAGJ,KAAK,CAACW,KAAN,CAAYL,oBAAoB,GAAG,CAAnC,CAHA,CAAP;;AAMJ;AACI,aAAON,KAAP;AApBR;AAsBH","sourcesContent":["import {\n    GET_ALL_COMPANIES,\n    CLEAR_COMPANIES,\n    UPDATE_COMPANY,\n} from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, { type, payload }) {\n    switch (type) {\n        case GET_ALL_COMPANIES:\n            return [...payload];\n\n        case CLEAR_COMPANIES:\n            return [];\n\n        case UPDATE_COMPANY:\n            //property and arr: details / imvoices\n            //id : company id\n            const { property, arr, id } = payload;\n            const companyToUpdateIndex = state.findIndex((c) => c._id === id);\n            const companyToUpdate = state[companyToUpdateIndex];\n            return [\n                ...state.slice(0, companyToUpdateIndex),\n                { ...companyToUpdate, [property]: [...arr] },\n                ...state.slice(companyToUpdateIndex + 1),\n            ];\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}