{"ast":null,"code":"\"use strict\";\n/* eslint-disable no-process-exit */\n\nconst util = require(\"util\");\n\nconst {\n  JSDOM\n} = require(\"../../..\");\n\nconst tough = require(\"tough-cookie\");\n\nconst xhrSymbols = require(\"./xmlhttprequest-symbols.js\");\n\nconst dom = new JSDOM();\nconst xhr = new dom.window.XMLHttpRequest();\nconst chunks = [];\nprocess.stdin.on(\"data\", chunk => {\n  chunks.push(chunk);\n});\nprocess.stdin.on(\"end\", () => {\n  const buffer = Buffer.concat(chunks);\n  const flag = JSON.parse(buffer.toString());\n\n  if (flag.body && flag.body.type === \"Buffer\" && flag.body.data) {\n    flag.body = Buffer.from(flag.body.data);\n  }\n\n  if (flag.cookieJar) {\n    flag.cookieJar = tough.CookieJar.fromJSON(flag.cookieJar);\n  }\n\n  flag.synchronous = false;\n  xhr[xhrSymbols.flag] = flag;\n  const properties = xhr[xhrSymbols.properties];\n  properties.readyState = xhr.OPENED;\n\n  try {\n    xhr.addEventListener(\"loadend\", () => {\n      if (properties.error) {\n        properties.error = properties.error.stack || util.inspect(properties.error);\n      }\n\n      process.stdout.write(JSON.stringify({\n        properties\n      }), () => {\n        process.exit(0);\n      });\n    }, false);\n    xhr.send(flag.body);\n  } catch (error) {\n    properties.error += error.stack || util.inspect(error);\n    process.stdout.write(JSON.stringify({\n      properties\n    }), () => {\n      process.exit(0);\n    });\n  }\n});","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/xhr-sync-worker.js"],"names":["util","require","JSDOM","tough","xhrSymbols","dom","xhr","window","XMLHttpRequest","chunks","process","stdin","on","chunk","push","buffer","Buffer","concat","flag","JSON","parse","toString","body","type","data","from","cookieJar","CookieJar","fromJSON","synchronous","properties","readyState","OPENED","addEventListener","error","stack","inspect","stdout","write","stringify","exit","send"],"mappings":"AAAA;AACA;;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,OAAO,CAAC,UAAD,CAAzB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,cAAD,CAArB;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,6BAAD,CAA1B;;AAEA,MAAMI,GAAG,GAAG,IAAIH,KAAJ,EAAZ;AACA,MAAMI,GAAG,GAAG,IAAID,GAAG,CAACE,MAAJ,CAAWC,cAAf,EAAZ;AAEA,MAAMC,MAAM,GAAG,EAAf;AAEAC,OAAO,CAACC,KAAR,CAAcC,EAAd,CAAiB,MAAjB,EAAyBC,KAAK,IAAI;AAChCJ,EAAAA,MAAM,CAACK,IAAP,CAAYD,KAAZ;AACD,CAFD;AAIAH,OAAO,CAACC,KAAR,CAAcC,EAAd,CAAiB,KAAjB,EAAwB,MAAM;AAC5B,QAAMG,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcR,MAAd,CAAf;AAEA,QAAMS,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACM,QAAP,EAAX,CAAb;;AACA,MAAIH,IAAI,CAACI,IAAL,IAAaJ,IAAI,CAACI,IAAL,CAAUC,IAAV,KAAmB,QAAhC,IAA4CL,IAAI,CAACI,IAAL,CAAUE,IAA1D,EAAgE;AAC9DN,IAAAA,IAAI,CAACI,IAAL,GAAYN,MAAM,CAACS,IAAP,CAAYP,IAAI,CAACI,IAAL,CAAUE,IAAtB,CAAZ;AACD;;AACD,MAAIN,IAAI,CAACQ,SAAT,EAAoB;AAClBR,IAAAA,IAAI,CAACQ,SAAL,GAAiBvB,KAAK,CAACwB,SAAN,CAAgBC,QAAhB,CAAyBV,IAAI,CAACQ,SAA9B,CAAjB;AACD;;AAEDR,EAAAA,IAAI,CAACW,WAAL,GAAmB,KAAnB;AACAvB,EAAAA,GAAG,CAACF,UAAU,CAACc,IAAZ,CAAH,GAAuBA,IAAvB;AACA,QAAMY,UAAU,GAAGxB,GAAG,CAACF,UAAU,CAAC0B,UAAZ,CAAtB;AACAA,EAAAA,UAAU,CAACC,UAAX,GAAwBzB,GAAG,CAAC0B,MAA5B;;AACA,MAAI;AACF1B,IAAAA,GAAG,CAAC2B,gBAAJ,CAAqB,SAArB,EAAgC,MAAM;AACpC,UAAIH,UAAU,CAACI,KAAf,EAAsB;AACpBJ,QAAAA,UAAU,CAACI,KAAX,GAAmBJ,UAAU,CAACI,KAAX,CAAiBC,KAAjB,IAA0BnC,IAAI,CAACoC,OAAL,CAAaN,UAAU,CAACI,KAAxB,CAA7C;AACD;;AACDxB,MAAAA,OAAO,CAAC2B,MAAR,CAAeC,KAAf,CAAqBnB,IAAI,CAACoB,SAAL,CAAe;AAAET,QAAAA;AAAF,OAAf,CAArB,EAAqD,MAAM;AACzDpB,QAAAA,OAAO,CAAC8B,IAAR,CAAa,CAAb;AACD,OAFD;AAGD,KAPD,EAOG,KAPH;AAQAlC,IAAAA,GAAG,CAACmC,IAAJ,CAASvB,IAAI,CAACI,IAAd;AACD,GAVD,CAUE,OAAOY,KAAP,EAAc;AACdJ,IAAAA,UAAU,CAACI,KAAX,IAAoBA,KAAK,CAACC,KAAN,IAAenC,IAAI,CAACoC,OAAL,CAAaF,KAAb,CAAnC;AACAxB,IAAAA,OAAO,CAAC2B,MAAR,CAAeC,KAAf,CAAqBnB,IAAI,CAACoB,SAAL,CAAe;AAAET,MAAAA;AAAF,KAAf,CAArB,EAAqD,MAAM;AACzDpB,MAAAA,OAAO,CAAC8B,IAAR,CAAa,CAAb;AACD,KAFD;AAGD;AACF,CA/BD","sourcesContent":["\"use strict\";\n/* eslint-disable no-process-exit */\nconst util = require(\"util\");\nconst { JSDOM } = require(\"../../..\");\nconst tough = require(\"tough-cookie\");\nconst xhrSymbols = require(\"./xmlhttprequest-symbols.js\");\n\nconst dom = new JSDOM();\nconst xhr = new dom.window.XMLHttpRequest();\n\nconst chunks = [];\n\nprocess.stdin.on(\"data\", chunk => {\n  chunks.push(chunk);\n});\n\nprocess.stdin.on(\"end\", () => {\n  const buffer = Buffer.concat(chunks);\n\n  const flag = JSON.parse(buffer.toString());\n  if (flag.body && flag.body.type === \"Buffer\" && flag.body.data) {\n    flag.body = Buffer.from(flag.body.data);\n  }\n  if (flag.cookieJar) {\n    flag.cookieJar = tough.CookieJar.fromJSON(flag.cookieJar);\n  }\n\n  flag.synchronous = false;\n  xhr[xhrSymbols.flag] = flag;\n  const properties = xhr[xhrSymbols.properties];\n  properties.readyState = xhr.OPENED;\n  try {\n    xhr.addEventListener(\"loadend\", () => {\n      if (properties.error) {\n        properties.error = properties.error.stack || util.inspect(properties.error);\n      }\n      process.stdout.write(JSON.stringify({ properties }), () => {\n        process.exit(0);\n      });\n    }, false);\n    xhr.send(flag.body);\n  } catch (error) {\n    properties.error += error.stack || util.inspect(error);\n    process.stdout.write(JSON.stringify({ properties }), () => {\n      process.exit(0);\n    });\n  }\n});\n"]},"metadata":{},"sourceType":"script"}