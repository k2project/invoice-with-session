{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyDetails.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateCompanyDetails } from '../../redux/actions/companies';\nimport { endSession } from '../../redux/actions/session';\nimport DetailsDisplayTable from '../../components/form/components/DetailsDisplayTable';\nimport { saveChangesOnLeave } from '../../components/form/utils/handleUnsavedChanges';\n\nclass CompanyDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //deep copy of the redux state on component load\n      details: props.updates || JSON.parse(JSON.stringify(props.company.details))\n    };\n    this.handleChanges = this.handleChanges.bind(this);\n    this.updateCompanyDetails = this.updateCompanyDetails.bind(this);\n  }\n\n  handleChanges() {\n    saveChangesOnLeave(this.state.details, //initial state\n    this.props.company.details, //redux updated state\n    this.props.endSession, `api/companies/${this.props.company._id}` //api call,\n    );\n  }\n\n  updateCompanyDetails(details) {\n    console.log(details, this.props.company._id);\n    this.props.updateCompanyDetails(details, this.props.company._id);\n  }\n\n  componentDidMount() {\n    window.addEventListener('beforeunload', this.handleChanges);\n  }\n\n  componentWillUnmount() {\n    this.handleChanges();\n    window.removeEventListener('beforeunload', this.handleChanges);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Profile Details .\"), /*#__PURE__*/React.createElement(DetailsDisplayTable, {\n      details: this.props.company.details,\n      updateState: this.updateCompanyDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nCompanyDetails.propTypes = {\n  company: PropTypes.object,\n  updateCompanyDetails: PropTypes.func,\n  endSession: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  updates: state.session.updates\n});\n\nconst mapDispatchToProps = {\n  updateCompanyDetails,\n  endSession\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyDetails);","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/company/CompanyDetails.js"],"names":["React","Component","PropTypes","connect","updateCompanyDetails","endSession","DetailsDisplayTable","saveChangesOnLeave","CompanyDetails","constructor","props","state","details","updates","JSON","parse","stringify","company","handleChanges","bind","_id","console","log","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","propTypes","object","func","mapStateToProps","session","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,mBAAP,MAAgC,sDAAhC;AACA,SAASC,kBAAT,QAAmC,kDAAnC;;AAEA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AACnCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,OAAO,EACHF,KAAK,CAACG,OAAN,IACAC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAK,CAACO,OAAN,CAAcL,OAA7B,CAAX;AAJK,KAAb;AAMA,SAAKM,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKf,oBAAL,GAA4B,KAAKA,oBAAL,CAA0Be,IAA1B,CAA+B,IAA/B,CAA5B;AACH;;AACDD,EAAAA,aAAa,GAAG;AACZX,IAAAA,kBAAkB,CACd,KAAKI,KAAL,CAAWC,OADG,EACM;AACpB,SAAKF,KAAL,CAAWO,OAAX,CAAmBL,OAFL,EAEc;AAC5B,SAAKF,KAAL,CAAWL,UAHG,EAIb,iBAAgB,KAAKK,KAAL,CAAWO,OAAX,CAAmBG,GAAI,EAJ1B,CAI4B;AAJ5B,KAAlB;AAMH;;AACDhB,EAAAA,oBAAoB,CAACQ,OAAD,EAAU;AAC1BS,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ,EAAqB,KAAKF,KAAL,CAAWO,OAAX,CAAmBG,GAAxC;AACA,SAAKV,KAAL,CAAWN,oBAAX,CAAgCQ,OAAhC,EAAyC,KAAKF,KAAL,CAAWO,OAAX,CAAmBG,GAA5D;AACH;;AACDG,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwC,KAAKP,aAA7C;AACH;;AACDQ,EAAAA,oBAAoB,GAAG;AACnB,SAAKR,aAAL;AACAM,IAAAA,MAAM,CAACG,mBAAP,CAA2B,cAA3B,EAA2C,KAAKT,aAAhD;AACH;;AACDU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,mBAAD;AACI,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWO,OAAX,CAAmBL,OADhC;AAEI,MAAA,WAAW,EAAE,KAAKR,oBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AASH;;AAzCkC;;AA4CvCI,cAAc,CAACqB,SAAf,GAA2B;AACvBZ,EAAAA,OAAO,EAAEf,SAAS,CAAC4B,MADI;AAEvB1B,EAAAA,oBAAoB,EAAEF,SAAS,CAAC6B,IAFT;AAGvB1B,EAAAA,UAAU,EAAEH,SAAS,CAAC6B;AAHC,CAA3B;;AAMA,MAAMC,eAAe,GAAIrB,KAAD,KAAY;AAChCE,EAAAA,OAAO,EAAEF,KAAK,CAACsB,OAAN,CAAcpB;AADS,CAAZ,CAAxB;;AAIA,MAAMqB,kBAAkB,GAAG;AACvB9B,EAAAA,oBADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAKA,eAAeF,OAAO,CAAC6B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1B,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateCompanyDetails } from '../../redux/actions/companies';\nimport { endSession } from '../../redux/actions/session';\nimport DetailsDisplayTable from '../../components/form/components/DetailsDisplayTable';\nimport { saveChangesOnLeave } from '../../components/form/utils/handleUnsavedChanges';\n\nclass CompanyDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //deep copy of the redux state on component load\n            details:\n                props.updates ||\n                JSON.parse(JSON.stringify(props.company.details)),\n        };\n        this.handleChanges = this.handleChanges.bind(this);\n        this.updateCompanyDetails = this.updateCompanyDetails.bind(this);\n    }\n    handleChanges() {\n        saveChangesOnLeave(\n            this.state.details, //initial state\n            this.props.company.details, //redux updated state\n            this.props.endSession,\n            `api/companies/${this.props.company._id}` //api call,\n        );\n    }\n    updateCompanyDetails(details) {\n        console.log(details, this.props.company._id);\n        this.props.updateCompanyDetails(details, this.props.company._id);\n    }\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.handleChanges);\n    }\n    componentWillUnmount() {\n        this.handleChanges();\n        window.removeEventListener('beforeunload', this.handleChanges);\n    }\n    render() {\n        return (\n            <section>\n                <h2 className='sr-only'>Profile Details .</h2>\n                <DetailsDisplayTable\n                    details={this.props.company.details}\n                    updateState={this.updateCompanyDetails}\n                />\n            </section>\n        );\n    }\n}\n\nCompanyDetails.propTypes = {\n    company: PropTypes.object,\n    updateCompanyDetails: PropTypes.func,\n    endSession: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n    updates: state.session.updates,\n});\n\nconst mapDispatchToProps = {\n    updateCompanyDetails,\n    endSession,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyDetails);\n"]},"metadata":{},"sourceType":"module"}