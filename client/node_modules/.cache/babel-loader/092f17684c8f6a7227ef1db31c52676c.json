{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nfunction HTMLFieldSetElement() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(HTMLFieldSetElement.prototype, HTMLElement.interface.prototype);\nObject.setPrototypeOf(HTMLFieldSetElement, HTMLElement.interface);\nObject.defineProperty(HTMLFieldSetElement, \"prototype\", {\n  value: HTMLFieldSetElement.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nHTMLFieldSetElement.prototype.checkValidity = function checkValidity() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].checkValidity();\n};\n\nHTMLFieldSetElement.prototype.reportValidity = function reportValidity() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].reportValidity();\n};\n\nHTMLFieldSetElement.prototype.setCustomValidity = function setCustomValidity(error) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'setCustomValidity' on 'HTMLFieldSetElement': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'setCustomValidity' on 'HTMLFieldSetElement': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].setCustomValidity(...args);\n};\n\nObject.defineProperty(HTMLFieldSetElement.prototype, \"disabled\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttribute(\"disabled\");\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'disabled' property on 'HTMLFieldSetElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttribute(\"disabled\", \"\");\n    } else {\n      this.removeAttribute(\"disabled\");\n    }\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLFieldSetElement.prototype, \"form\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"form\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLFieldSetElement.prototype, \"name\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"name\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'name' property on 'HTMLFieldSetElement': The provided value\"\n    });\n    this.setAttribute(\"name\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLFieldSetElement.prototype, \"willValidate\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"willValidate\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLFieldSetElement.prototype, \"validity\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"validity\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"validity\"]);\n    });\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLFieldSetElement.prototype, \"validationMessage\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"validationMessage\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLFieldSetElement.prototype, Symbol.toStringTag, {\n  value: \"HTMLFieldSetElement\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLFieldSetElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLFieldSetElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLFieldSetElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLFieldSetElement,\n  expose: {\n    Window: {\n      HTMLFieldSetElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLFieldSetElement-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/HTMLFieldSetElement.js"],"names":["conversions","require","utils","impl","implSymbol","HTMLElement","HTMLFieldSetElement","TypeError","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","checkValidity","module","exports","is","reportValidity","setCustomValidity","error","arguments","length","args","curArg","context","push","get","hasAttribute","set","V","setAttribute","removeAttribute","tryWrapperForImpl","getAttribute","getSameObject","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","expose","Window"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,IAAI,GAAGD,KAAK,CAACE,UAAnB;;AACA,MAAMC,WAAW,GAAGJ,OAAO,CAAC,kBAAD,CAA3B;;AAEA,SAASK,mBAAT,GAA+B;AAC7B,QAAM,IAAIC,SAAJ,CAAc,qBAAd,CAAN;AACD;;AAEDC,MAAM,CAACC,cAAP,CAAsBH,mBAAmB,CAACI,SAA1C,EAAqDL,WAAW,CAACM,SAAZ,CAAsBD,SAA3E;AACAF,MAAM,CAACC,cAAP,CAAsBH,mBAAtB,EAA2CD,WAAW,CAACM,SAAvD;AAEAH,MAAM,CAACI,cAAP,CAAsBN,mBAAtB,EAA2C,WAA3C,EAAwD;AACtDO,EAAAA,KAAK,EAAEP,mBAAmB,CAACI,SAD2B;AAEtDI,EAAAA,QAAQ,EAAE,KAF4C;AAGtDC,EAAAA,UAAU,EAAE,KAH0C;AAItDC,EAAAA,YAAY,EAAE;AAJwC,CAAxD;;AAOAV,mBAAmB,CAACI,SAApB,CAA8BO,aAA9B,GAA8C,SAASA,aAAT,GAAyB;AACrE,MAAI,CAAC,IAAD,IAAS,CAACC,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,UAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,SAAO,KAAKJ,IAAL,EAAWc,aAAX,EAAP;AACD,CAND;;AAQAX,mBAAmB,CAACI,SAApB,CAA8BW,cAA9B,GAA+C,SAASA,cAAT,GAA0B;AACvE,MAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,UAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,SAAO,KAAKJ,IAAL,EAAWkB,cAAX,EAAP;AACD,CAND;;AAQAf,mBAAmB,CAACI,SAApB,CAA8BY,iBAA9B,GAAkD,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AAClF,MAAI,CAAC,IAAD,IAAS,CAACL,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,UAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,MAAIiB,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIlB,SAAJ,CACJ,mGACEiB,SAAS,CAACC,MADZ,GAEE,WAHE,CAAN;AAKD;;AACD,QAAMC,IAAI,GAAG,EAAb;AACA;AACE,QAAIC,MAAM,GAAGH,SAAS,CAAC,CAAD,CAAtB;AACAG,IAAAA,MAAM,GAAG3B,WAAW,CAAC,WAAD,CAAX,CAAyB2B,MAAzB,EAAiC;AACxCC,MAAAA,OAAO,EAAE;AAD+B,KAAjC,CAAT;AAGAF,IAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD,SAAO,KAAKxB,IAAL,EAAWmB,iBAAX,CAA6B,GAAGI,IAAhC,CAAP;AACD,CArBD;;AAuBAlB,MAAM,CAACI,cAAP,CAAsBN,mBAAmB,CAACI,SAA1C,EAAqD,UAArD,EAAiE;AAC/DoB,EAAAA,GAAG,GAAG;AACJ,QAAI,CAAC,IAAD,IAAS,CAACZ,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKwB,YAAL,CAAkB,UAAlB,CAAP;AACD,GAP8D;;AAS/DC,EAAAA,GAAG,CAACC,CAAD,EAAI;AACL,QAAI,CAAC,IAAD,IAAS,CAACf,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED0B,IAAAA,CAAC,GAAGjC,WAAW,CAAC,SAAD,CAAX,CAAuBiC,CAAvB,EAA0B;AAC5BL,MAAAA,OAAO,EAAE;AADmB,KAA1B,CAAJ;;AAIA,QAAIK,CAAJ,EAAO;AACL,WAAKC,YAAL,CAAkB,UAAlB,EAA8B,EAA9B;AACD,KAFD,MAEO;AACL,WAAKC,eAAL,CAAqB,UAArB;AACD;AACF,GAvB8D;;AAyB/DpB,EAAAA,UAAU,EAAE,IAzBmD;AA0B/DC,EAAAA,YAAY,EAAE;AA1BiD,CAAjE;AA6BAR,MAAM,CAACI,cAAP,CAAsBN,mBAAmB,CAACI,SAA1C,EAAqD,MAArD,EAA6D;AAC3DoB,EAAAA,GAAG,GAAG;AACJ,QAAI,CAAC,IAAD,IAAS,CAACZ,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAOL,KAAK,CAACkC,iBAAN,CAAwB,KAAKjC,IAAL,EAAW,MAAX,CAAxB,CAAP;AACD,GAP0D;;AAS3DY,EAAAA,UAAU,EAAE,IAT+C;AAU3DC,EAAAA,YAAY,EAAE;AAV6C,CAA7D;AAaAR,MAAM,CAACI,cAAP,CAAsBN,mBAAmB,CAACI,SAA1C,EAAqD,MAArD,EAA6D;AAC3DoB,EAAAA,GAAG,GAAG;AACJ,QAAI,CAAC,IAAD,IAAS,CAACZ,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAMM,KAAK,GAAG,KAAKwB,YAAL,CAAkB,MAAlB,CAAd;AACA,WAAOxB,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD,GAR0D;;AAU3DmB,EAAAA,GAAG,CAACC,CAAD,EAAI;AACL,QAAI,CAAC,IAAD,IAAS,CAACf,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED0B,IAAAA,CAAC,GAAGjC,WAAW,CAAC,WAAD,CAAX,CAAyBiC,CAAzB,EAA4B;AAC9BL,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKM,YAAL,CAAkB,MAAlB,EAA0BD,CAA1B;AACD,GApB0D;;AAsB3DlB,EAAAA,UAAU,EAAE,IAtB+C;AAuB3DC,EAAAA,YAAY,EAAE;AAvB6C,CAA7D;AA0BAR,MAAM,CAACI,cAAP,CAAsBN,mBAAmB,CAACI,SAA1C,EAAqD,cAArD,EAAqE;AACnEoB,EAAAA,GAAG,GAAG;AACJ,QAAI,CAAC,IAAD,IAAS,CAACZ,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKJ,IAAL,EAAW,cAAX,CAAP;AACD,GAPkE;;AASnEY,EAAAA,UAAU,EAAE,IATuD;AAUnEC,EAAAA,YAAY,EAAE;AAVqD,CAArE;AAaAR,MAAM,CAACI,cAAP,CAAsBN,mBAAmB,CAACI,SAA1C,EAAqD,UAArD,EAAiE;AAC/DoB,EAAAA,GAAG,GAAG;AACJ,QAAI,CAAC,IAAD,IAAS,CAACZ,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAOL,KAAK,CAACoC,aAAN,CAAoB,IAApB,EAA0B,UAA1B,EAAsC,MAAM;AACjD,aAAOpC,KAAK,CAACkC,iBAAN,CAAwB,KAAKjC,IAAL,EAAW,UAAX,CAAxB,CAAP;AACD,KAFM,CAAP;AAGD,GAT8D;;AAW/DY,EAAAA,UAAU,EAAE,IAXmD;AAY/DC,EAAAA,YAAY,EAAE;AAZiD,CAAjE;AAeAR,MAAM,CAACI,cAAP,CAAsBN,mBAAmB,CAACI,SAA1C,EAAqD,mBAArD,EAA0E;AACxEoB,EAAAA,GAAG,GAAG;AACJ,QAAI,CAAC,IAAD,IAAS,CAACZ,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIb,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKJ,IAAL,EAAW,mBAAX,CAAP;AACD,GAPuE;;AASxEY,EAAAA,UAAU,EAAE,IAT4D;AAUxEC,EAAAA,YAAY,EAAE;AAV0D,CAA1E;AAaAR,MAAM,CAACI,cAAP,CAAsBN,mBAAmB,CAACI,SAA1C,EAAqD6B,MAAM,CAACC,WAA5D,EAAyE;AACvE3B,EAAAA,KAAK,EAAE,qBADgE;AAEvEC,EAAAA,QAAQ,EAAE,KAF6D;AAGvEC,EAAAA,UAAU,EAAE,KAH2D;AAIvEC,EAAAA,YAAY,EAAE;AAJyD,CAAzE;AAOA,MAAMyB,KAAK,GAAG;AACZ;AACA;AACA;AACAC,EAAAA,oBAAoB,EAAE,EAJV;;AAKZtB,EAAAA,EAAE,CAACuB,GAAD,EAAM;AACN,QAAIA,GAAJ,EAAS;AACP,UAAIzC,KAAK,CAAC0C,MAAN,CAAaD,GAAb,EAAkBxC,IAAlB,KAA2BwC,GAAG,CAACxC,IAAD,CAAH,YAAqB0C,IAAI,CAACC,cAAzD,EAAyE;AACvE,eAAO,IAAP;AACD;;AACD,WAAK,MAAMC,WAAX,IAA0B7B,MAAM,CAACC,OAAP,CAAeuB,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACJ,GAAD,CAAf,EAAsB;AACpB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAjBW;;AAkBZK,EAAAA,MAAM,CAACL,GAAD,EAAM;AACV,QAAIA,GAAJ,EAAS;AACP,UAAIA,GAAG,YAAYE,IAAI,CAACC,cAAxB,EAAwC;AACtC,eAAO,IAAP;AACD;;AAED,YAAMG,OAAO,GAAG/C,KAAK,CAACgD,cAAN,CAAqBP,GAArB,CAAhB;;AACA,WAAK,MAAMI,WAAX,IAA0B7B,MAAM,CAACC,OAAP,CAAeuB,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACE,OAAD,CAAf,EAA0B;AACxB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAhCW;;AAiCZE,EAAAA,OAAO,CAACR,GAAD,EAAM;AAAEf,IAAAA,OAAO,GAAG;AAAZ,MAAqC,EAA3C,EAA+C;AACpD,QAAIV,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkBuB,GAAlB,CAAJ,EAA4B;AAC1B,aAAOzC,KAAK,CAACkD,cAAN,CAAqBT,GAArB,CAAP;AACD;;AACD,UAAM,IAAIpC,SAAJ,CAAe,GAAEqB,OAAQ,wCAAzB,CAAN;AACD,GAtCW;;AAwCZyB,EAAAA,MAAM,CAACC,eAAD,EAAkBC,WAAlB,EAA+B;AACnC,QAAIZ,GAAG,GAAGnC,MAAM,CAAC6C,MAAP,CAAc/C,mBAAmB,CAACI,SAAlC,CAAV;AACAiC,IAAAA,GAAG,GAAG,KAAKa,KAAL,CAAWb,GAAX,EAAgBW,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOZ,GAAP;AACD,GA5CW;;AA6CZc,EAAAA,UAAU,CAACH,eAAD,EAAkBC,WAAlB,EAA+B;AACvC,QAAIZ,GAAG,GAAGnC,MAAM,CAAC6C,MAAP,CAAc/C,mBAAmB,CAACI,SAAlC,CAAV;AACAiC,IAAAA,GAAG,GAAG,KAAKa,KAAL,CAAWb,GAAX,EAAgBW,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOrD,KAAK,CAACkD,cAAN,CAAqBT,GAArB,CAAP;AACD,GAjDW;;AAkDZe,EAAAA,cAAc,CAACf,GAAD,EAAM;AAClBtC,IAAAA,WAAW,CAACqD,cAAZ,CAA2Bf,GAA3B;AACD,GApDW;;AAqDZa,EAAAA,KAAK,CAACb,GAAD,EAAMW,eAAN,EAAuBC,WAAvB,EAAoC;AACvC,QAAI,CAACA,WAAL,EAAkBA,WAAW,GAAG,EAAd;AAElBA,IAAAA,WAAW,CAACN,OAAZ,GAAsBN,GAAtB;;AAEA,SAAKe,cAAL,CAAoBf,GAApB;;AACAnC,IAAAA,MAAM,CAACI,cAAP,CAAsB+B,GAAtB,EAA2BxC,IAA3B,EAAiC;AAC/BU,MAAAA,KAAK,EAAE,IAAIgC,IAAI,CAACC,cAAT,CAAwBQ,eAAxB,EAAyCC,WAAzC,CADwB;AAE/BzC,MAAAA,QAAQ,EAAE,KAFqB;AAG/BC,MAAAA,UAAU,EAAE,KAHmB;AAI/BC,MAAAA,YAAY,EAAE;AAJiB,KAAjC;AAOA2B,IAAAA,GAAG,CAACxC,IAAD,CAAH,CAAUD,KAAK,CAACyD,aAAhB,IAAiChB,GAAjC;;AACA,QAAIE,IAAI,CAACe,IAAT,EAAe;AACbf,MAAAA,IAAI,CAACe,IAAL,CAAUjB,GAAG,CAACxC,IAAD,CAAb,EAAqBoD,WAArB;AACD;;AACD,WAAOZ,GAAP;AACD,GAvEW;;AAwEZhC,EAAAA,SAAS,EAAEL,mBAxEC;AAyEZuD,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AAAExD,MAAAA;AAAF;AADF;AAzEI,CAAd,C,CA4EG;;AACHY,MAAM,CAACC,OAAP,GAAiBsB,KAAjB;;AAEA,MAAMI,IAAI,GAAG5C,OAAO,CAAC,sCAAD,CAApB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nfunction HTMLFieldSetElement() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(HTMLFieldSetElement.prototype, HTMLElement.interface.prototype);\nObject.setPrototypeOf(HTMLFieldSetElement, HTMLElement.interface);\n\nObject.defineProperty(HTMLFieldSetElement, \"prototype\", {\n  value: HTMLFieldSetElement.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nHTMLFieldSetElement.prototype.checkValidity = function checkValidity() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].checkValidity();\n};\n\nHTMLFieldSetElement.prototype.reportValidity = function reportValidity() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].reportValidity();\n};\n\nHTMLFieldSetElement.prototype.setCustomValidity = function setCustomValidity(error) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'setCustomValidity' on 'HTMLFieldSetElement': 1 argument required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'setCustomValidity' on 'HTMLFieldSetElement': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].setCustomValidity(...args);\n};\n\nObject.defineProperty(HTMLFieldSetElement.prototype, \"disabled\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttribute(\"disabled\");\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'disabled' property on 'HTMLFieldSetElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttribute(\"disabled\", \"\");\n    } else {\n      this.removeAttribute(\"disabled\");\n    }\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLFieldSetElement.prototype, \"form\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"form\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLFieldSetElement.prototype, \"name\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttribute(\"name\");\n    return value === null ? \"\" : value;\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'name' property on 'HTMLFieldSetElement': The provided value\"\n    });\n\n    this.setAttribute(\"name\", V);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLFieldSetElement.prototype, \"willValidate\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"willValidate\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLFieldSetElement.prototype, \"validity\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"validity\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"validity\"]);\n    });\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLFieldSetElement.prototype, \"validationMessage\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"validationMessage\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(HTMLFieldSetElement.prototype, Symbol.toStringTag, {\n  value: \"HTMLFieldSetElement\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLFieldSetElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLFieldSetElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLFieldSetElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLFieldSetElement,\n  expose: {\n    Window: { HTMLFieldSetElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLFieldSetElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}