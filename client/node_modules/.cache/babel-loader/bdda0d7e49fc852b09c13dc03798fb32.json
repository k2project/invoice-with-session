{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nfunction SVGStringList() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(SVGStringList, \"prototype\", {\n  value: SVGStringList.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(SVGStringList.prototype, Symbol.iterator, {\n  writable: true,\n  enumerable: false,\n  configurable: true,\n  value: Array.prototype[Symbol.iterator]\n});\n\nSVGStringList.prototype.clear = function clear() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].clear();\n};\n\nSVGStringList.prototype.initialize = function initialize(newItem) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'initialize' on 'SVGStringList': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'initialize' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].initialize(...args);\n};\n\nSVGStringList.prototype.getItem = function getItem(index) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'getItem' on 'SVGStringList': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'getItem' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].getItem(...args);\n};\n\nSVGStringList.prototype.insertItemBefore = function insertItemBefore(newItem, index) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\"Failed to execute 'insertItemBefore' on 'SVGStringList': 2 arguments required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].insertItemBefore(...args);\n};\n\nSVGStringList.prototype.replaceItem = function replaceItem(newItem, index) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\"Failed to execute 'replaceItem' on 'SVGStringList': 2 arguments required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].replaceItem(...args);\n};\n\nSVGStringList.prototype.removeItem = function removeItem(index) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'removeItem' on 'SVGStringList': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'removeItem' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].removeItem(...args);\n};\n\nSVGStringList.prototype.appendItem = function appendItem(newItem) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'appendItem' on 'SVGStringList': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'appendItem' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].appendItem(...args);\n};\n\nObject.defineProperty(SVGStringList.prototype, \"length\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"length\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(SVGStringList.prototype, \"numberOfItems\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"numberOfItems\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(SVGStringList.prototype, Symbol.toStringTag, {\n  value: \"SVGStringList\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'SVGStringList'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(SVGStringList.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(SVGStringList.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n\n        const desc = this.getOwnPropertyDescriptor(target, P);\n\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n\n          if (parent === null) {\n            return undefined;\n          }\n\n          return Reflect.get(target, P, receiver);\n        }\n\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n\n        const getter = desc.get;\n\n        if (getter === undefined) {\n          return undefined;\n        }\n\n        return Reflect.apply(getter, receiver, []);\n      },\n\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n\n        const desc = this.getOwnPropertyDescriptor(target, P);\n\n        if (desc !== undefined) {\n          return true;\n        }\n\n        const parent = Object.getPrototypeOf(target);\n\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n\n        return false;\n      },\n\n      ownKeys(target) {\n        const keys = new Set();\n\n        for (const key of target[impl][utils.supportedPropertyIndices]) {\n          keys.add(`${key}`);\n        }\n\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n\n        return [...keys];\n      },\n\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n\n        let ignoreNamedProps = false;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n\n          if (target[impl][utils.supportsPropertyIndex](index)) {\n            const indexedValue = target[impl].getItem(index);\n            return {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n\n          ignoreNamedProps = true;\n        }\n\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n\n        if (target === receiver) {\n          if (utils.isArrayIndexPropName(P)) {\n            const index = P >>> 0;\n            let indexedValue = V;\n            indexedValue = conversions[\"DOMString\"](indexedValue, {\n              context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\"\n            });\n            const creating = !target[impl][utils.supportsPropertyIndex](index);\n\n            if (creating) {\n              target[impl][utils.indexedSetNew](index, indexedValue);\n            } else {\n              target[impl][utils.indexedSetExisting](index, indexedValue);\n            }\n\n            return true;\n          }\n        }\n\n        let ownDesc;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n\n          if (target[impl][utils.supportsPropertyIndex](index)) {\n            const indexedValue = target[impl].getItem(index);\n            ownDesc = {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n        }\n\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n\n          ownDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: undefined\n          };\n        }\n\n        if (!ownDesc.writable) {\n          return false;\n        }\n\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n\n          if (!existingDesc.writable) {\n            return false;\n          }\n\n          valueDesc = {\n            value: V\n          };\n        } else {\n          valueDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: V\n          };\n        }\n\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          if (desc.get || desc.set) {\n            return false;\n          }\n\n          const index = P >>> 0;\n          let indexedValue = desc.value;\n          indexedValue = conversions[\"DOMString\"](indexedValue, {\n            context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\"\n          });\n          const creating = !target[impl][utils.supportsPropertyIndex](index);\n\n          if (creating) {\n            target[impl][utils.indexedSetNew](index, indexedValue);\n          } else {\n            target[impl][utils.indexedSetExisting](index, indexedValue);\n          }\n\n          return true;\n        }\n\n        return Reflect.defineProperty(target, P, desc);\n      },\n\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          return !target[impl][utils.supportsPropertyIndex](index);\n        }\n\n        return Reflect.deleteProperty(target, P);\n      },\n\n      preventExtensions() {\n        return false;\n      }\n\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: SVGStringList,\n  expose: {\n    Window: {\n      SVGStringList\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../svg/SVGStringList-impl.js\");","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/node_modules/jsdom/lib/jsdom/living/generated/SVGStringList.js"],"names":["conversions","require","utils","impl","implSymbol","SVGStringList","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","Symbol","iterator","Array","clear","module","exports","is","initialize","newItem","arguments","length","args","curArg","context","push","getItem","index","insertItemBefore","replaceItem","removeItem","appendItem","get","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","Proxy","target","P","receiver","Reflect","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","set","getter","apply","has","ownKeys","keys","Set","key","supportedPropertyIndices","add","ignoreNamedProps","isArrayIndexPropName","supportsPropertyIndex","indexedValue","tryWrapperForImpl","V","creating","indexedSetNew","indexedSetExisting","ownDesc","isObject","existingDesc","valueDesc","deleteProperty","preventExtensions","wrapperSymbol","init","interface","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nfunction SVGStringList() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(SVGStringList, \"prototype\", {\n  value: SVGStringList.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(SVGStringList.prototype, Symbol.iterator, {\n  writable: true,\n  enumerable: false,\n  configurable: true,\n  value: Array.prototype[Symbol.iterator]\n});\n\nSVGStringList.prototype.clear = function clear() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].clear();\n};\n\nSVGStringList.prototype.initialize = function initialize(newItem) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'initialize' on 'SVGStringList': 1 argument required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'initialize' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].initialize(...args);\n};\n\nSVGStringList.prototype.getItem = function getItem(index) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'getItem' on 'SVGStringList': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'getItem' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].getItem(...args);\n};\n\nSVGStringList.prototype.insertItemBefore = function insertItemBefore(newItem, index) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\n      \"Failed to execute 'insertItemBefore' on 'SVGStringList': 2 arguments required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].insertItemBefore(...args);\n};\n\nSVGStringList.prototype.replaceItem = function replaceItem(newItem, index) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\n      \"Failed to execute 'replaceItem' on 'SVGStringList': 2 arguments required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].replaceItem(...args);\n};\n\nSVGStringList.prototype.removeItem = function removeItem(index) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'removeItem' on 'SVGStringList': 1 argument required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'removeItem' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].removeItem(...args);\n};\n\nSVGStringList.prototype.appendItem = function appendItem(newItem) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'appendItem' on 'SVGStringList': 1 argument required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'appendItem' on 'SVGStringList': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].appendItem(...args);\n};\n\nObject.defineProperty(SVGStringList.prototype, \"length\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"length\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(SVGStringList.prototype, \"numberOfItems\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"numberOfItems\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(SVGStringList.prototype, Symbol.toStringTag, {\n  value: \"SVGStringList\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'SVGStringList'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(SVGStringList.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(SVGStringList.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n          if (parent === null) {\n            return undefined;\n          }\n          return Reflect.get(target, P, receiver);\n        }\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n        const getter = desc.get;\n        if (getter === undefined) {\n          return undefined;\n        }\n        return Reflect.apply(getter, receiver, []);\n      },\n\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc !== undefined) {\n          return true;\n        }\n        const parent = Object.getPrototypeOf(target);\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n        return false;\n      },\n\n      ownKeys(target) {\n        const keys = new Set();\n\n        for (const key of target[impl][utils.supportedPropertyIndices]) {\n          keys.add(`${key}`);\n        }\n\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n        return [...keys];\n      },\n\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        let ignoreNamedProps = false;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n\n          if (target[impl][utils.supportsPropertyIndex](index)) {\n            const indexedValue = target[impl].getItem(index);\n            return {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n          ignoreNamedProps = true;\n        }\n\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n        if (target === receiver) {\n          if (utils.isArrayIndexPropName(P)) {\n            const index = P >>> 0;\n            let indexedValue = V;\n\n            indexedValue = conversions[\"DOMString\"](indexedValue, {\n              context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\"\n            });\n\n            const creating = !target[impl][utils.supportsPropertyIndex](index);\n            if (creating) {\n              target[impl][utils.indexedSetNew](index, indexedValue);\n            } else {\n              target[impl][utils.indexedSetExisting](index, indexedValue);\n            }\n\n            return true;\n          }\n        }\n        let ownDesc;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n\n          if (target[impl][utils.supportsPropertyIndex](index)) {\n            const indexedValue = target[impl].getItem(index);\n            ownDesc = {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n        }\n\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n          ownDesc = { writable: true, enumerable: true, configurable: true, value: undefined };\n        }\n        if (!ownDesc.writable) {\n          return false;\n        }\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n          if (!existingDesc.writable) {\n            return false;\n          }\n          valueDesc = { value: V };\n        } else {\n          valueDesc = { writable: true, enumerable: true, configurable: true, value: V };\n        }\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          if (desc.get || desc.set) {\n            return false;\n          }\n\n          const index = P >>> 0;\n          let indexedValue = desc.value;\n\n          indexedValue = conversions[\"DOMString\"](indexedValue, {\n            context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\"\n          });\n\n          const creating = !target[impl][utils.supportsPropertyIndex](index);\n          if (creating) {\n            target[impl][utils.indexedSetNew](index, indexedValue);\n          } else {\n            target[impl][utils.indexedSetExisting](index, indexedValue);\n          }\n\n          return true;\n        }\n\n        return Reflect.defineProperty(target, P, desc);\n      },\n\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          return !target[impl][utils.supportsPropertyIndex](index);\n        }\n\n        return Reflect.deleteProperty(target, P);\n      },\n\n      preventExtensions() {\n        return false;\n      }\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: SVGStringList,\n  expose: {\n    Window: { SVGStringList }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../svg/SVGStringList-impl.js\");\n"]},"metadata":{},"sourceType":"script"}