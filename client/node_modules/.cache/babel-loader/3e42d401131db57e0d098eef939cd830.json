{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js\";\nimport React, { useEffect, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport { setProfileTab } from '../../redux/actions/session';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges';\n\nclass ProfileUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //deep copy of the redux state on component load\n      details: JSON.parse(JSON.stringify(props.details))\n    };\n    this.handleChanges = this.handleChanges.bind(this);\n  }\n\n  handleChanges() {\n    alertUnsavedChanges(this.state.details, //initial state\n    this.props.details, //redux updated state\n    this.props.setProfileTab, '/dashboard/profile', this.props.history);\n    saveChangesOnLeave(this.state.details, //initial state\n    this.props.details, //redux updated state\n    this.props.getProfile, '/api/profile' //api call,\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('beforeunload', this.handleChanges);\n  }\n\n  componentWillUnmount() {\n    this.handleChanges();\n    window.removeEventListener('beforeunload', this.handleChanges);\n  }\n\n  render() {\n    const formData = {\n      details: this.props.profile.details,\n      http: '/api/profile',\n      url: '/dashboard/profile',\n      cb: this.props.getProfile,\n      msg: 'Your profile has been updated successfully.'\n    };\n    return /*#__PURE__*/React.createElement(CustomBuiltForm, {\n      data: formData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    });\n  }\n\n} // const ProfileUpdate = ({\n//     profile: { details },\n//     getProfile,\n//     setProfileTab,\n//     history,\n// }) => {\n//     const formData = {\n//         details,\n//         http: '/api/profile',\n//         url: '/dashboard/profile',\n//         cb: getProfile,\n//         msg: 'Your profile has been updated successfully.',\n//     };\n//     //handle unsaved changes\n//     useEffect(() => {\n//         const initialDetails = JSON.parse(JSON.stringify(details));\n//         return () => {\n//             alertUnsavedChanges(\n//                 details,\n//                 initialDetails,\n//                 setProfileTab,\n//                 '/dashboard/profile',\n//                 history\n//             );\n//         };\n//     }, []);\n//     return <CustomBuiltForm data={formData} />;\n// };\n\n\nProfileUpdate.propTypes = {\n  details: PropTypes.array,\n  getProfile: PropTypes.func,\n  setAlert: PropTypes.func,\n  setProfileTab: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nconst mapDispatchToProps = {\n  getProfile,\n  setProfileTab\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileUpdate));","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/pages/profile/ProfileUpdate.js"],"names":["React","useEffect","Component","withRouter","PropTypes","CustomBuiltForm","connect","getProfile","setProfileTab","alertUnsavedChanges","ProfileUpdate","constructor","props","state","details","JSON","parse","stringify","handleChanges","bind","history","saveChangesOnLeave","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","formData","profile","http","url","cb","msg","propTypes","array","func","setAlert","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,mBAAT,QAAoC,kDAApC;;AAEA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAClCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,KAAK,CAACE,OAArB,CAAX;AAFA,KAAb;AAIA,SAAKI,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AACDD,EAAAA,aAAa,GAAG;AACZT,IAAAA,mBAAmB,CACf,KAAKI,KAAL,CAAWC,OADI,EACK;AACpB,SAAKF,KAAL,CAAWE,OAFI,EAEK;AACpB,SAAKF,KAAL,CAAWJ,aAHI,EAIf,oBAJe,EAKf,KAAKI,KAAL,CAAWQ,OALI,CAAnB;AAOAC,IAAAA,kBAAkB,CACd,KAAKR,KAAL,CAAWC,OADG,EACM;AACpB,SAAKF,KAAL,CAAWE,OAFG,EAEM;AACpB,SAAKF,KAAL,CAAWL,UAHG,EAId,cAJc,CAIC;AAJD,KAAlB;AAMH;;AACDe,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwC,KAAKN,aAA7C;AACH;;AACDO,EAAAA,oBAAoB,GAAG;AACnB,SAAKP,aAAL;AACAK,IAAAA,MAAM,CAACG,mBAAP,CAA2B,cAA3B,EAA2C,KAAKR,aAAhD;AACH;;AACDS,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG;AACbd,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWiB,OAAX,CAAmBf,OADf;AAEbgB,MAAAA,IAAI,EAAE,cAFO;AAGbC,MAAAA,GAAG,EAAE,oBAHQ;AAIbC,MAAAA,EAAE,EAAE,KAAKpB,KAAL,CAAWL,UAJF;AAKb0B,MAAAA,GAAG,EAAE;AALQ,KAAjB;AAOA,wBAAO,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEL,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAxCiC,C,CA0CtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAlB,aAAa,CAACwB,SAAd,GAA0B;AACtBpB,EAAAA,OAAO,EAAEV,SAAS,CAAC+B,KADG;AAEtB5B,EAAAA,UAAU,EAAEH,SAAS,CAACgC,IAFA;AAGtBC,EAAAA,QAAQ,EAAEjC,SAAS,CAACgC,IAHE;AAItB5B,EAAAA,aAAa,EAAEJ,SAAS,CAACgC;AAJH,CAA1B;;AAMA,MAAME,eAAe,GAAIzB,KAAD,KAAY;AAChCgB,EAAAA,OAAO,EAAEhB,KAAK,CAACgB;AADiB,CAAZ,CAAxB;;AAGA,MAAMU,kBAAkB,GAAG;AACvBhC,EAAAA,UADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAIA,eAAeF,OAAO,CAClBgC,eADkB,EAElBC,kBAFkB,CAAP,CAGbpC,UAAU,CAACO,aAAD,CAHG,CAAf","sourcesContent":["import React, { useEffect, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Profile.scss';\nimport CustomBuiltForm from '../../components/form/forms/CustomBuiltForm';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../../redux/actions/profile';\nimport { setProfileTab } from '../../redux/actions/session';\nimport { alertUnsavedChanges } from '../../components/form/utils/handleUnsavedChanges';\n\nclass ProfileUpdate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //deep copy of the redux state on component load\n            details: JSON.parse(JSON.stringify(props.details)),\n        };\n        this.handleChanges = this.handleChanges.bind(this);\n    }\n    handleChanges() {\n        alertUnsavedChanges(\n            this.state.details, //initial state\n            this.props.details, //redux updated state\n            this.props.setProfileTab,\n            '/dashboard/profile',\n            this.props.history\n        );\n        saveChangesOnLeave(\n            this.state.details, //initial state\n            this.props.details, //redux updated state\n            this.props.getProfile,\n            '/api/profile' //api call,\n        );\n    }\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.handleChanges);\n    }\n    componentWillUnmount() {\n        this.handleChanges();\n        window.removeEventListener('beforeunload', this.handleChanges);\n    }\n    render() {\n        const formData = {\n            details: this.props.profile.details,\n            http: '/api/profile',\n            url: '/dashboard/profile',\n            cb: this.props.getProfile,\n            msg: 'Your profile has been updated successfully.',\n        };\n        return <CustomBuiltForm data={formData} />;\n    }\n}\n// const ProfileUpdate = ({\n//     profile: { details },\n//     getProfile,\n//     setProfileTab,\n//     history,\n// }) => {\n//     const formData = {\n//         details,\n//         http: '/api/profile',\n//         url: '/dashboard/profile',\n//         cb: getProfile,\n//         msg: 'Your profile has been updated successfully.',\n//     };\n//     //handle unsaved changes\n//     useEffect(() => {\n//         const initialDetails = JSON.parse(JSON.stringify(details));\n//         return () => {\n//             alertUnsavedChanges(\n//                 details,\n//                 initialDetails,\n//                 setProfileTab,\n//                 '/dashboard/profile',\n//                 history\n//             );\n//         };\n//     }, []);\n//     return <CustomBuiltForm data={formData} />;\n// };\n\nProfileUpdate.propTypes = {\n    details: PropTypes.array,\n    getProfile: PropTypes.func,\n    setAlert: PropTypes.func,\n    setProfileTab: PropTypes.func,\n};\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\nconst mapDispatchToProps = {\n    getProfile,\n    setProfileTab,\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ProfileUpdate));\n"]},"metadata":{},"sourceType":"module"}