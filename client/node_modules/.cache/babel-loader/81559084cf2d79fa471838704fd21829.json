{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/CustomBuiltForm.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './Form.scss';\nimport AddCustomFields from './AddCustomFields';\nimport RemoveCustomFields from './RemoveCustomFields';\nexport default function CustomBuiltForm({\n  fields,\n  url\n}) {\n  const [formState, setFormState] = useState(fields);\n\n  const addCustomToFieldsFormState = field => {\n    const position = field.position;\n    delete field.position;\n    formState.splice(position, 0, field);\n    setFormState([...formState]);\n    console.log(formState[0]);\n  };\n\n  const removeCustomFieldsFromFormState = id => {\n    const newFields = formState.filter(field => field._id !== id);\n    setFormState(newFields);\n  };\n\n  const updateInput = (e, id) => {\n    const inputs = document.querySelectorAll('.form__submit input');\n    const index = Array.from(inputs).findIndex(el => el.getAttribute('id') === id);\n    formState[index].value = e.target.value;\n    setFormState([...formState]);\n  };\n\n  const [errors, setErrors] = useState([]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n  };\n\n  const customFields = formState.filter(field => field.custom);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form form__submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Use this form to create or update the details of this page.\"), \"* Regired fields.\"), formState.map((input, i) => {\n    const {\n      _id,\n      label,\n      inputType,\n      value,\n      required\n    } = input;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: _id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: _id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, i + 1, \". \", label, required ? '*' : null), /*#__PURE__*/React.createElement(\"input\", {\n      id: _id,\n      type: inputType,\n      value: value,\n      onChange: e => updateInput(e, _id),\n      className: 'form__input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--info\",\n    onMouseDown: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddCustomFields, {\n    addCustomToFieldsFormState: addCustomToFieldsFormState,\n    maxPosition: formState.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), customFields.length > 0 && /*#__PURE__*/React.createElement(RemoveCustomFields, {\n    customFields: customFields,\n    removeCustomFieldsFromFormState: removeCustomFieldsFromFormState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/CustomBuiltForm.js"],"names":["React","useState","useEffect","Fragment","AddCustomFields","RemoveCustomFields","CustomBuiltForm","fields","url","formState","setFormState","addCustomToFieldsFormState","field","position","splice","console","log","removeCustomFieldsFromFormState","id","newFields","filter","_id","updateInput","e","inputs","document","querySelectorAll","index","Array","from","findIndex","el","getAttribute","value","target","errors","setErrors","onSubmit","preventDefault","customFields","custom","map","input","i","label","inputType","required","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './Form.scss';\nimport AddCustomFields from './AddCustomFields';\nimport RemoveCustomFields from './RemoveCustomFields';\n\nexport default function CustomBuiltForm({ fields, url }) {\n    const [formState, setFormState] = useState(fields);\n    const addCustomToFieldsFormState = (field) => {\n        const position = field.position;\n        delete field.position;\n        formState.splice(position, 0, field);\n        setFormState([...formState]);\n        console.log(formState[0]);\n    };\n    const removeCustomFieldsFromFormState = (id) => {\n        const newFields = formState.filter((field) => field._id !== id);\n        setFormState(newFields);\n    };\n    const updateInput = (e, id) => {\n        const inputs = document.querySelectorAll('.form__submit input');\n        const index = Array.from(inputs).findIndex(\n            (el) => el.getAttribute('id') === id\n        );\n        formState[index].value = e.target.value;\n        setFormState([...formState]);\n    };\n    const [errors, setErrors] = useState([]);\n    const onSubmit = (e) => {\n        e.preventDefault();\n    };\n    const customFields = formState.filter((field) => field.custom);\n    return (\n        <form onSubmit={onSubmit} className='form form__submit'>\n            <div>\n                <fieldset>\n                    <legend>\n                        <span className='sr-only'>\n                            Use this form to create or update the details of\n                            this page.\n                        </span>\n                        * Regired fields.\n                    </legend>\n                    {formState.map((input, i) => {\n                        const {\n                            _id,\n                            label,\n                            inputType,\n                            value,\n                            required,\n                        } = input;\n                        return (\n                            <Fragment key={_id}>\n                                <label htmlFor={_id}>\n                                    {i + 1}. {label}\n                                    {required ? '*' : null}\n                                </label>\n                                <input\n                                    id={_id}\n                                    type={inputType}\n                                    value={value}\n                                    onChange={(e) => updateInput(e, _id)}\n                                    className={'form__input'}\n                                />\n                            </Fragment>\n                        );\n                    })}\n                    <button\n                        className='btn btn--info'\n                        onMouseDown={(e) => e.preventDefault()}\n                    >\n                        Submit\n                    </button>\n                </fieldset>\n            </div>\n            <div>\n                <AddCustomFields\n                    addCustomToFieldsFormState={addCustomToFieldsFormState}\n                    maxPosition={formState.length}\n                />\n                {customFields.length > 0 && (\n                    <RemoveCustomFields\n                        customFields={customFields}\n                        removeCustomFieldsFromFormState={\n                            removeCustomFieldsFromFormState\n                        }\n                    />\n                )}\n            </div>\n        </form>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}