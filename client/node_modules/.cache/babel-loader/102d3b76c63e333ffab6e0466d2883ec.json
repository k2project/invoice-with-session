{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Calendar.scss';\n\nfunction Calendar(props) {\n  var htmlContent = '';\n  var FebNumberOfDays = '';\n  var counter = 1;\n  var dateNow = new Date();\n  var month = dateNow.getMonth();\n  var day = dateNow.getDate();\n  var year = dateNow.getFullYear();\n  var nextMonth = month + 1;\n  var prevMonth = month - 1;\n\n  if (month == 1) {\n    if (year % 100 != 0 && year % 4 == 0 || year % 400 == 0) {\n      FebNumberOfDays = 29;\n    } else {\n      FebNumberOfDays = 28;\n    }\n  }\n\n  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thrusday', 'Friday', 'Saturday'];\n  var dayPerMonth = ['31', '' + FebNumberOfDays + '', '31', '30', '31', '30', '31', '31', '30', '31', '30', '31'];\n  var nextDate = new Date(nextMonth + ' 1 ,' + year);\n  var weekdays = nextDate.getDay();\n  var weekdays2 = weekdays;\n  var numOfDays = dayPerMonth[month];\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }\n  }, \"alendarc\");\n}\n\nCalendar.propTypes = {};\nexport default Calendar;","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js"],"names":["React","PropTypes","Calendar","props","htmlContent","FebNumberOfDays","counter","dateNow","Date","month","getMonth","day","getDate","year","getFullYear","nextMonth","prevMonth","monthNames","dayNames","dayPerMonth","nextDate","weekdays","getDay","weekdays2","numOfDays","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,iBAAP;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,eAAe,GAAG,EAAtB;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,MAAIC,KAAK,GAAGF,OAAO,CAACG,QAAR,EAAZ;AACA,MAAIC,GAAG,GAAGJ,OAAO,CAACK,OAAR,EAAV;AACA,MAAIC,IAAI,GAAGN,OAAO,CAACO,WAAR,EAAX;AACA,MAAIC,SAAS,GAAGN,KAAK,GAAG,CAAxB;AACA,MAAIO,SAAS,GAAGP,KAAK,GAAG,CAAxB;;AACA,MAAIA,KAAK,IAAI,CAAb,EAAgB;AACZ,QAAKI,IAAI,GAAG,GAAP,IAAc,CAAd,IAAmBA,IAAI,GAAG,CAAP,IAAY,CAAhC,IAAsCA,IAAI,GAAG,GAAP,IAAc,CAAxD,EAA2D;AACvDR,MAAAA,eAAe,GAAG,EAAlB;AACH,KAFD,MAEO;AACHA,MAAAA,eAAe,GAAG,EAAlB;AACH;AACJ;;AACD,MAAIY,UAAU,GAAG,CACb,SADa,EAEb,UAFa,EAGb,OAHa,EAIb,OAJa,EAKb,KALa,EAMb,MANa,EAOb,MAPa,EAQb,QARa,EASb,WATa,EAUb,SAVa,EAWb,UAXa,EAYb,UAZa,CAAjB;AAcA,MAAIC,QAAQ,GAAG,CACX,QADW,EAEX,QAFW,EAGX,SAHW,EAIX,WAJW,EAKX,UALW,EAMX,QANW,EAOX,UAPW,CAAf;AASA,MAAIC,WAAW,GAAG,CACd,IADc,EAEd,KAAKd,eAAL,GAAuB,EAFT,EAGd,IAHc,EAId,IAJc,EAKd,IALc,EAMd,IANc,EAOd,IAPc,EAQd,IARc,EASd,IATc,EAUd,IAVc,EAWd,IAXc,EAYd,IAZc,CAAlB;AAcA,MAAIe,QAAQ,GAAG,IAAIZ,IAAJ,CAASO,SAAS,GAAG,MAAZ,GAAqBF,IAA9B,CAAf;AACA,MAAIQ,QAAQ,GAAGD,QAAQ,CAACE,MAAT,EAAf;AACA,MAAIC,SAAS,GAAGF,QAAhB;AACA,MAAIG,SAAS,GAAGL,WAAW,CAACV,KAAD,CAA3B;AACA,sBAAO;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;;AAEDP,QAAQ,CAACuB,SAAT,GAAqB,EAArB;AAEA,eAAevB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Calendar.scss';\n\nfunction Calendar(props) {\n    var htmlContent = '';\n    var FebNumberOfDays = '';\n    var counter = 1;\n    var dateNow = new Date();\n    var month = dateNow.getMonth();\n    var day = dateNow.getDate();\n    var year = dateNow.getFullYear();\n    var nextMonth = month + 1;\n    var prevMonth = month - 1;\n    if (month == 1) {\n        if ((year % 100 != 0 && year % 4 == 0) || year % 400 == 0) {\n            FebNumberOfDays = 29;\n        } else {\n            FebNumberOfDays = 28;\n        }\n    }\n    var monthNames = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n    var dayNames = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thrusday',\n        'Friday',\n        'Saturday',\n    ];\n    var dayPerMonth = [\n        '31',\n        '' + FebNumberOfDays + '',\n        '31',\n        '30',\n        '31',\n        '30',\n        '31',\n        '31',\n        '30',\n        '31',\n        '30',\n        '31',\n    ];\n    var nextDate = new Date(nextMonth + ' 1 ,' + year);\n    var weekdays = nextDate.getDay();\n    var weekdays2 = weekdays;\n    var numOfDays = dayPerMonth[month];\n    return <article className='calendar'>alendarc</article>;\n}\n\nCalendar.propTypes = {};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}