{"ast":null,"code":"var _jsxFileName = \"/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js\";\nimport React from 'react';\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: moment(),\n      selected: moment().startOf('day')\n    };\n    this.previous = this.previous.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  previous() {\n    const {\n      month\n    } = this.state;\n    this.setState({\n      month: month.subtract(1, 'month')\n    });\n  }\n\n  next() {\n    const {\n      month\n    } = this.state;\n    this.setState({\n      month: month.add(1, 'month')\n    });\n  }\n\n  select(day) {\n    this.setState({\n      selected: day.date,\n      month: day.date.clone()\n    });\n  }\n\n  renderWeeks() {\n    let weeks = [];\n    let done = false;\n    let date = this.state.month.clone().startOf('month').add('w' - 1).day('Sunday');\n    let count = 0;\n    let monthIndex = date.month();\n    const {\n      selected,\n      month\n    } = this.state;\n\n    while (!done) {\n      weeks.push( /*#__PURE__*/React.createElement(Week, {\n        key: date,\n        date: date.clone(),\n        month: month,\n        select: day => this.select(day),\n        selected: selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }));\n      date.add(1, 'w');\n      done = count++ > 2 && monthIndex !== date.month();\n      monthIndex = date.month();\n    }\n\n    return weeks;\n  }\n\n  renderMonthLabel() {\n    const {\n      month\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"month-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }\n    }, month.format('MMMM YYYY'));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"month-display row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"arrow fa fa-angle-left\",\n      onClick: this.previous,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }), this.renderMonthLabel(), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"arrow fa fa-angle-right\",\n      onClick: this.next,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(DayNames, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    })), this.renderWeeks());\n  }\n\n}\n\nexport default Calendar;\n\nclass DayNames extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row day-names\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Sun\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Mon\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Tue\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Wed\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Thu\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"Fri\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Sat\"));\n  }\n\n}\n\nclass Week extends React.Component {\n  render() {\n    let days = [];\n    let {\n      date\n    } = this.props;\n    const {\n      month,\n      selected,\n      select\n    } = this.props;\n\n    for (var i = 0; i < 7; i++) {\n      let day = {\n        name: date.format('dd').substring(0, 1),\n        number: date.date(),\n        isCurrentMonth: date.month() === month.month(),\n        isToday: date.isSame(new Date(), 'day'),\n        date: date\n      };\n      days.push( /*#__PURE__*/React.createElement(Day, {\n        day: day,\n        selected: selected,\n        select: select,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 23\n        }\n      }));\n      date = date.clone();\n      date.add(1, 'day');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row week\",\n      key: days[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, days);\n  }\n\n}\n\nclass Day extends React.Component {\n  render() {\n    const {\n      day,\n      day: {\n        date,\n        isCurrentMonth,\n        isToday,\n        number\n      },\n      select,\n      selected\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: date.toString(),\n      className: 'day' + (isToday ? ' today' : '') + (isCurrentMonth ? '' : ' different-month') + (date.isSame(selected) ? ' selected' : ''),\n      onClick: () => select(day),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, number);\n  }\n\n}","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/calendar/Calendar.js"],"names":["React","Calendar","Component","constructor","props","state","month","moment","selected","startOf","previous","bind","next","setState","subtract","add","select","day","date","clone","renderWeeks","weeks","done","count","monthIndex","push","renderMonthLabel","format","render","DayNames","Week","days","i","name","substring","number","isCurrentMonth","isToday","isSame","Date","Day","toString"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Calendar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            month: moment(),\n            selected: moment().startOf('day'),\n        };\n\n        this.previous = this.previous.bind(this);\n        this.next = this.next.bind(this);\n    }\n\n    previous() {\n        const { month } = this.state;\n\n        this.setState({\n            month: month.subtract(1, 'month'),\n        });\n    }\n\n    next() {\n        const { month } = this.state;\n\n        this.setState({\n            month: month.add(1, 'month'),\n        });\n    }\n\n    select(day) {\n        this.setState({\n            selected: day.date,\n            month: day.date.clone(),\n        });\n    }\n\n    renderWeeks() {\n        let weeks = [];\n        let done = false;\n        let date = this.state.month\n            .clone()\n            .startOf('month')\n            .add('w' - 1)\n            .day('Sunday');\n        let count = 0;\n        let monthIndex = date.month();\n\n        const { selected, month } = this.state;\n\n        while (!done) {\n            weeks.push(\n                <Week\n                    key={date}\n                    date={date.clone()}\n                    month={month}\n                    select={(day) => this.select(day)}\n                    selected={selected}\n                />\n            );\n\n            date.add(1, 'w');\n\n            done = count++ > 2 && monthIndex !== date.month();\n            monthIndex = date.month();\n        }\n\n        return weeks;\n    }\n\n    renderMonthLabel() {\n        const { month } = this.state;\n\n        return <span className='month-label'>{month.format('MMMM YYYY')}</span>;\n    }\n\n    render() {\n        return (\n            <section className='calendar'>\n                <header className='header'>\n                    <div className='month-display row'>\n                        <i\n                            className='arrow fa fa-angle-left'\n                            onClick={this.previous}\n                        />\n                        {this.renderMonthLabel()}\n                        <i\n                            className='arrow fa fa-angle-right'\n                            onClick={this.next}\n                        />\n                    </div>\n                    <DayNames />\n                </header>\n                {this.renderWeeks()}\n            </section>\n        );\n    }\n}\nexport default Calendar;\nclass DayNames extends React.Component {\n    render() {\n        return (\n            <div className='row day-names'>\n                <span className='day'>Sun</span>\n                <span className='day'>Mon</span>\n                <span className='day'>Tue</span>\n                <span className='day'>Wed</span>\n                <span className='day'>Thu</span>\n                <span className='day'>Fri</span>\n                <span className='day'>Sat</span>\n            </div>\n        );\n    }\n}\n\nclass Week extends React.Component {\n    render() {\n        let days = [];\n        let { date } = this.props;\n\n        const { month, selected, select } = this.props;\n\n        for (var i = 0; i < 7; i++) {\n            let day = {\n                name: date.format('dd').substring(0, 1),\n                number: date.date(),\n                isCurrentMonth: date.month() === month.month(),\n                isToday: date.isSame(new Date(), 'day'),\n                date: date,\n            };\n            days.push(<Day day={day} selected={selected} select={select} />);\n\n            date = date.clone();\n            date.add(1, 'day');\n        }\n\n        return (\n            <div className='row week' key={days[0]}>\n                {days}\n            </div>\n        );\n    }\n}\n\nclass Day extends React.Component {\n    render() {\n        const {\n            day,\n            day: { date, isCurrentMonth, isToday, number },\n            select,\n            selected,\n        } = this.props;\n\n        return (\n            <span\n                key={date.toString()}\n                className={\n                    'day' +\n                    (isToday ? ' today' : '') +\n                    (isCurrentMonth ? '' : ' different-month') +\n                    (date.isSame(selected) ? ' selected' : '')\n                }\n                onClick={() => select(day)}\n            >\n                {number}\n            </span>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}