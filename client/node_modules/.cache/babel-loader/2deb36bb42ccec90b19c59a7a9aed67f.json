{"ast":null,"code":"export const formErrorsStyling = arr => {\n  //when password doesnt meet required parameters and doesnt match the confirmation aria on first password gets overide by 'don't match' msg\n  //uniqueErr allows to display first error msg on first password 'Password must be at least 8 characters long and must contain a number and a capital letter.'\n  const uniqueErr = [];\n  arr.length > 0 && arr.forEach(err => {\n    if (err.param) {\n      if (!uniqueErr.includes(err.param)) {\n        uniqueErr.push(err.param);\n        const input = document.getElementById(err.param); // console.log(err.param, input);\n\n        input.classList.add('form__input--err');\n        input.setAttribute('aria-label', `Error:${err.msg}`);\n      }\n    }\n  });\n};\nexport const customInputOnChange = (e, formState, setFormState, erros, setErrors) => {\n  const inputs = document.querySelectorAll('.form__submit input');\n  const index = Array.from(inputs).findIndex(el => el.getAttribute('id') === id);\n  formState[index].value = e.target.value;\n  setFormState([...formState]); //remove errors styling related to the input\n  //update errors array\n\n  e.target.classList.remove('form__input--err');\n  e.target.removeAttribute('aria-label');\n  setErrors(errors.filter(err => err.param !== id));\n};\nexport const inputOnChange = (e, state, stateUpdate) => {\n  const name = e.target.name; //remove errors styling related to the input\n  //empty errors array\n\n  e.target.classList.remove('form__input--err');\n  e.target.removeAttribute('aria-label');\n  const errors = state.errors.filter(err => err.param !== name);\n  stateUpdate({ ...state,\n    [name]: e.target.value,\n    errors\n  });\n};\nexport const checkboxOnChange = (e, state, stateUpdate) => {\n  const name = e.target.name; //remove errors styling related to the input\n  //empty errors array\n\n  e.target.classList.remove('form__input--err');\n  e.target.removeAttribute('aria-label');\n  e.target.value = e.target.checked;\n  const errors = state.errors.filter(err => err.param !== name);\n  stateUpdate({ ...state,\n    [name]: e.target.checked,\n    errors\n  });\n};\nexport const updateStateErrors = async (form, state, updateState, errors) => {\n  if (errors) {\n    await updateState({ ...state,\n      errors: [...state.errors, ...errors]\n    });\n    const errorsLinks = form.querySelectorAll('.form__errs a');\n    if (errorsLinks.length > 0) errorsLinks[0].focus();\n    formErrorsStyling(errors);\n  }\n};\nexport const sanitize = string => {\n  const map = {\n    // '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;' // '\"': '&quot;',\n    // \"'\": '&#x27;',\n    // '/': '&#x2F;'\n\n  };\n  const reg = /[<>]/gi; // const reg = /[&<>\"'/]/gi;\n\n  return string.replace(reg, match => map[match]);\n};\nexport const cleanData = async state => {\n  Object.keys(state).forEach(function (item) {\n    if (typeof state[item] === 'string') state[item] = sanitize(state[item].trim());\n  });\n};\nexport const objHasAllPropertyEmpty = obj => {\n  let res = true;\n\n  if (Object.values(obj).length > 0) {\n    Object.values(obj).forEach(value => {\n      if (value) {\n        res = false;\n        return;\n      }\n\n      res = true;\n    });\n  }\n\n  return res;\n};","map":{"version":3,"sources":["/Users/krispol/Desktop/invoice/invoice-with-session/client/src/components/form/formFuns.js"],"names":["formErrorsStyling","arr","uniqueErr","length","forEach","err","param","includes","push","input","document","getElementById","classList","add","setAttribute","msg","customInputOnChange","e","formState","setFormState","erros","setErrors","inputs","querySelectorAll","index","Array","from","findIndex","el","getAttribute","id","value","target","remove","removeAttribute","errors","filter","inputOnChange","state","stateUpdate","name","checkboxOnChange","checked","updateStateErrors","form","updateState","errorsLinks","focus","sanitize","string","map","reg","replace","match","cleanData","Object","keys","item","trim","objHasAllPropertyEmpty","obj","res","values"],"mappings":"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","sourcesContent":["export const formErrorsStyling = (arr) => {\n    //when password doesnt meet required parameters and doesnt match the confirmation aria on first password gets overide by 'don't match' msg\n    //uniqueErr allows to display first error msg on first password 'Password must be at least 8 characters long and must contain a number and a capital letter.'\n    const uniqueErr = [];\n    arr.length > 0 &&\n        arr.forEach((err) => {\n            if (err.param) {\n                if (!uniqueErr.includes(err.param)) {\n                    uniqueErr.push(err.param);\n                    const input = document.getElementById(err.param);\n                    // console.log(err.param, input);\n                    input.classList.add('form__input--err');\n                    input.setAttribute('aria-label', `Error:${err.msg}`);\n                }\n            }\n        });\n};\nexport const customInputOnChange = (\n    e,\n    formState,\n    setFormState,\n    erros,\n    setErrors\n) => {\n    const inputs = document.querySelectorAll('.form__submit input');\n    const index = Array.from(inputs).findIndex(\n        (el) => el.getAttribute('id') === id\n    );\n    formState[index].value = e.target.value;\n    setFormState([...formState]);\n    //remove errors styling related to the input\n    //update errors array\n    e.target.classList.remove('form__input--err');\n    e.target.removeAttribute('aria-label');\n    setErrors(errors.filter((err) => err.param !== id));\n};\nexport const inputOnChange = (e, state, stateUpdate) => {\n    const name = e.target.name;\n    //remove errors styling related to the input\n    //empty errors array\n    e.target.classList.remove('form__input--err');\n    e.target.removeAttribute('aria-label');\n    const errors = state.errors.filter((err) => err.param !== name);\n    stateUpdate({\n        ...state,\n        [name]: e.target.value,\n        errors,\n    });\n};\nexport const checkboxOnChange = (e, state, stateUpdate) => {\n    const name = e.target.name;\n    //remove errors styling related to the input\n    //empty errors array\n    e.target.classList.remove('form__input--err');\n    e.target.removeAttribute('aria-label');\n    e.target.value = e.target.checked;\n    const errors = state.errors.filter((err) => err.param !== name);\n    stateUpdate({\n        ...state,\n        [name]: e.target.checked,\n        errors,\n    });\n};\nexport const updateStateErrors = async (form, state, updateState, errors) => {\n    if (errors) {\n        await updateState({\n            ...state,\n            errors: [...state.errors, ...errors],\n        });\n        const errorsLinks = form.querySelectorAll('.form__errs a');\n        if (errorsLinks.length > 0) errorsLinks[0].focus();\n        formErrorsStyling(errors);\n    }\n};\n\nexport const sanitize = (string) => {\n    const map = {\n        // '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        // '\"': '&quot;',\n        // \"'\": '&#x27;',\n        // '/': '&#x2F;'\n    };\n    const reg = /[<>]/gi;\n    // const reg = /[&<>\"'/]/gi;\n    return string.replace(reg, (match) => map[match]);\n};\n\nexport const cleanData = async (state) => {\n    Object.keys(state).forEach(function (item) {\n        if (typeof state[item] === 'string')\n            state[item] = sanitize(state[item].trim());\n    });\n};\nexport const objHasAllPropertyEmpty = (obj) => {\n    let res = true;\n    if (Object.values(obj).length > 0) {\n        Object.values(obj).forEach((value) => {\n            if (value) {\n                res = false;\n                return;\n            }\n            res = true;\n        });\n    }\n    return res;\n};\n"]},"metadata":{},"sourceType":"module"}